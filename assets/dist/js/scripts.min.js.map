{"version":3,"sources":["node_modules/browser-pack/_prelude.js","assets/src/js/app/animatePage.js","assets/src/js/app/app.js","assets/src/js/app/buildArchive.js","assets/src/js/app/buildCollectionFeed.js","assets/src/js/app/buildCollectionHeader.js","assets/src/js/app/buildCollectionsList.js","assets/src/js/app/buildConnected.js","assets/src/js/app/buildContentNode.js","assets/src/js/app/buildInterviewsHeader.js","assets/src/js/app/buildOtherInCollection.js","assets/src/js/app/buildPage.js","assets/src/js/app/buildSupp.js","assets/src/js/app/buildSuppInner.js","assets/src/js/app/buildTimeline.js","assets/src/js/app/buildTimelineHeader.js","assets/src/js/app/buildTranscript.js","assets/src/js/app/buildTranscriptMarkup.js","assets/src/js/app/cachebust.js","assets/src/js/app/cutoff.js","assets/src/js/app/destroyPage.js","assets/src/js/app/eqHeight.js","assets/src/js/app/getNodeFromTimestamp.js","assets/src/js/app/getUrlWithNoHash.js","assets/src/js/app/highlightSuppCont.js","assets/src/js/app/highlightTranscript.js","assets/src/js/app/highlighter.js","assets/src/js/app/icon.js","assets/src/js/app/internalLink.js","assets/src/js/app/respBg.js","assets/src/js/app/respImg.js","assets/src/js/app/scrollIndicator.js","assets/src/js/app/sharer.js","assets/src/js/app/stickyHeader.js","assets/src/js/app/sublink.js","assets/src/js/app/syncAblePlayer.js","assets/src/js/app/syncTimestamps.js","assets/src/js/app/thirdparty/featherlight.gallery.min.js","assets/src/js/app/thirdparty/featherlight.min.js","assets/src/js/site/img.js","assets/src/js/site/site.js","node_modules/ap/index.js","node_modules/assert-ok/index.js","node_modules/clipboard/lib/clipboard-action.js","node_modules/clipboard/lib/clipboard.js","node_modules/decode-uri-component/index.js","node_modules/delegate/src/closest.js","node_modules/delegate/src/delegate.js","node_modules/escape-string-regexp/index.js","node_modules/facebook-share-link/index.js","node_modules/facebook-share-link/node_modules/query-string/index.js","node_modules/good-listener/src/is.js","node_modules/good-listener/src/listen.js","node_modules/is-finite/index.js","node_modules/is-integer/index.js","node_modules/js-cookie/src/js.cookie.js","node_modules/map-obj/index.js","node_modules/number-is-nan/index.js","node_modules/object-assign/index.js","node_modules/parse-int/index.js","node_modules/query-string/index.js","node_modules/select/src/select.js","node_modules/shortid/index.js","node_modules/shortid/lib/alphabet.js","node_modules/shortid/lib/build.js","node_modules/shortid/lib/decode.js","node_modules/shortid/lib/encode.js","node_modules/shortid/lib/index.js","node_modules/shortid/lib/is-valid.js","node_modules/shortid/lib/random/random-byte-browser.js","node_modules/shortid/lib/random/random-from-seed.js","node_modules/shortid/lib/util/cluster-worker-id-browser.js","node_modules/snakecase-keys/index.js","node_modules/strict-uri-encode/index.js","node_modules/tiny-emitter/index.js","node_modules/to-no-case/index.js","node_modules/to-snake-case/index.js","node_modules/to-space-case/index.js","node_modules/url-set-query/index.js","node_modules/value-pipe/index.js","node_modules/xtend/immutable.js"],"names":[],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChpjzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbhlGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACnBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"scripts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var animatePage = function( wrapper, page, dir, cb ){\n  var callback = cb || false;\n\n  wrapper.css( 'min-height', '100vh' );\n  wrapper.append( page );\n\n  if( dir && !IGNOREDIR ){\n    page.addClass( 'pageTrans pageTrans--'+dir );\n    setTimeout( function(){\n      page.removeClass( 'pageTrans--'+dir );\n    }, 20 );\n    setTimeout( function(){\n      page.removeClass( 'pageTrans' );\n      if( callback ) callback();\n    }, TRANSITIONTIME )\n  } else {\n    if( callback ) callback();\n  }\n\n  wrapper.css( 'min-height' );\n\n}\n\nmodule.exports = animatePage;\n","var buildPage               = require('./buildPage')\nvar destroyPage             = require('./destroyPage')\nvar eqHeight                = require('./eqHeight')\n\n$(document).ready(function(){\n  $('html').removeClass('no-js')\n\n  window.HASPAGE = false // set to true upon first page build. this way we can check to see if we have a page before popping state\n  window.TRANSITIONTIME = 500 // should match CSS values\n  window.DESCRIPTION = '' // used in sharing links\n  window.JUMPTOACTIVE = false // set ableplayer polling as a window-scoped object so it can be overwritten\n  window.SEARCHTERM = '' // On searching, cache value for use later\n\n  // Safari calls popstate on page load\n  // and has its own forward/backward ui\n  // So we need to avoid replicating this behavior\n  window.IGNOREDIR = false\n\n  window.IS_TOUCH_SCREEN = false\n  window.addEventListener('touchstart', function _detectTouch() {\n    window.IS_TOUCH_SCREEN = true\n    window.removeEventListener('touchstart', _detectTouch, false)\n  })\n\n  var History         = window.history\n  var wrapper         = $('.app-wrapper')\n  var endpoint        = $('body').attr('data-endpoint')\n  var queriedObject   = $('body').attr('data-id')\n\n  // store navigation history as object\n  var sequence = { prev: 0, curr: 0 }\n\n  wrapper.empty()\n  buildPage(wrapper, endpoint, queriedObject, false)\n\n  $('body').on('click', '.js-internalLink', function(e){\n    if($(e.target).attr('data-nolink')) {\n      e.preventDefault()\n      return false\n    }\n\n    HASPAGE = true\n    if(IGNOREDIR) return\n    e.preventDefault()\n    var target           = $(this).attr('href')\n    var _endpoint        = $(this).attr('data-type')\n    var _queriedObject   = $(this).attr('data-id')\n\n    $('html, body').animate({\n      scrollTop: 0\n    }, TRANSITIONTIME)\n\n    destroyPage(wrapper, 'left')\n    buildPage(wrapper, _endpoint, _queriedObject, 'right')\n\n    sequence = { prev: sequence.curr, curr: sequence.curr + 1 } // update sequence sequentially\n\n    History.pushState(\n      { endpoint: _endpoint,\n        queriedObject: _queriedObject,\n        sequence: sequence // store the current sequence at this point in navigation history\n      },\n      null,\n      target\n    )\n    return false\n  })\n\n  $(window).on('popstate', function(){\n    if(!HASPAGE){\n      IGNOREDIR = true\n    }\n    var _endpoint      = history.state ?  history.state.endpoint : endpoint\n    var _queriedObject = history.state ?  history.state.queriedObject : queriedObject\n    var _sequence      = history.state ?  history.state.sequence : false //sanity check\n\n    if(IGNOREDIR) return\n    if(_sequence){\n      // active previous matches historical current\n      // so we go backwards\n      if(sequence.prev === _sequence.curr){\n        destroyPage(wrapper, 'right')\n        buildPage(wrapper, _endpoint, _queriedObject, 'left')\n      }\n      // active current matches historical previous\n      // so we go forwards\n      if(sequence.curr === _sequence.prev){\n        destroyPage(wrapper, 'left')\n        buildPage(wrapper, _endpoint, _queriedObject, 'right')\n      }\n      // update our place in history\n      sequence = _sequence\n\n    //default to backwards\n    } else {\n      destroyPage(wrapper, 'right')\n      buildPage(wrapper, _endpoint, _queriedObject, 'left')\n    }\n  })\n\n  eqHeight('.js-eqHeight')\n\n  // Global Event Handlers\n  $('body').on('mousedown touchstart', () => {\n    console.log('Checked value: ', window.SOCIAL_POPUP_SHOULD_BE_REMOVED)\n    setTimeout(() => {\n      if(!window.SOCIAL_POPUP_SHOULD_BE_REMOVED) return\n      $('.socialPopup').remove()\n      window.SOCIAL_POPUP_SHOULD_BE_REMOVED = false\n    }, 200)\n  })\n})\n","const cachebust        = require('./cachebust')\nconst buildContentNode = require('./buildContentNode')\nconst cutoff           = require('./cutoff')\nconst icon             = require('./icon')\nconst respBg           = require('./respBg')\nconst sublink          = require('./sublink')\nconst Cookies          = require('js-cookie')\nconst qs               = require('query-string')\n\nconst buildArchive = function(\n  page,\n  {\n    items,\n    image,\n    name,\n    total_hits,\n    results,\n    error,\n    message\n  },\n  endpoint,\n  hasNav,\n  mediaTypes\n){\n  const isCondensed = hasNav && (Cookies.get('ARCHIVEVIEW') === 'condense')\n  const isSearch = !!total_hits\n  const archiveOrder = Cookies.get('ARCHIVEORDER')\n\n  let nav, load, subheading\n\n  // Header\n  const header = `\n    <header class=\"contentHeader contentHeader--archive\">\n      <h2>${error || decodeURI(name)}</h2>\n      ${!image ? '' : `<figure class=\"heroImage js-respBg\" data-set=\"hero\" data-id=\"${image}\"/>`}\n    </header>\n  `\n\n  // Feed\n  const feed = `\n    <ul class=\"content-feed ${isCondensed ? 'content-feed--contracted': ''}\">\n      ${\n        items ?\n          items.map((item) => buildContentNode(item)).join(' ') :\n          (message || 'Sorry, no results were found.')\n      }\n    </ul>\n  `\n\n  // Nav\n  if(hasNav) {\n    let mediaSelect\n    const sortOptions = [\n      { value: 'abc_asc', label: 'A-Z' },\n      { value: 'abc_desc', label: 'Z-A' },\n      { value: 'date_desc', label: 'Date Interviewed' },\n      { value: 'publish_desc', label: 'Date Published' },\n      { value: 'date_asc', label: 'Date Interviewed (reverse)' },\n      { value: 'publish_asc', label: 'Date Published (reverse)' }\n    ]\n\n    if(mediaTypes) {\n      const mediaSelect = `\n        <select name=\"media-select\">\n          ${mediaTypes.map((type) => (\n            `<option value=\"${type.toLowerCase().replace(' ', '-')}\">${type}</option>`\n          )).join(' ')}\n        </section>\n      `\n    }\n\n    nav = `\n      <div class=\"listView\">\n        <span class=\"listView-label\">change view:</span>\n        <input type=\"radio\" name=\"list-view\" value=\"explode\" ${!isCondensed ? 'checked' : ''}>\n        ${icon('explode', 'listView')}\n        <input type=\"radio\" name=\"list-view\" value=\"condense\" ${isCondensed ? 'checked' : ''}>\n        ${icon('condense', 'listView')}\n        <span class=\"listview-label\">change view:</span>\n        <select name=\"list-order\">\n          ${sortOptions.map(({value, label}) => (\n            `<option value=\"${value}\" ${archiveOrder === value ? 'selected' : ''}>${label}</option>`\n          )).join(' ')}\n        </select>\n        ${!mediaSelect ? '' : `<span class=\"listView-label\">media type:</span>${mediaSelect}`}\n      </div>\n    `\n  }\n\n  // Loader\n  if(!isSearch && items && items.length >= COUNT){\n    load = `<button data-offset=\"0\" class=\"content-load\">Load More</button>`\n  }\n\n  // Subheading\n  if(total_hits && results) {\n    subheading = `\n      <div>\n        <p class=\"content-subheading\">\n          Showing ${total_hits} hits across ${results} files\n          <button class=\"content-cutoff\" data-cutoff-all data-alttext='Contract All ${icon('up')}'>Expand All ${icon('down')}</button>\n        </p>\n      </div>`\n  }\n\n  // Construct Page\n  const $append = $(`${header}${subheading || ''}${nav || ''}${feed}${load || ''}`)\n  page.append($append)\n\n  // Functionality\n  const $feed = page.find('.content-feed')\n  const $load = page.find('.content-load')\n  const handleUpdate = function(loadedMore = false) {\n    const $order = $append.find('select[name=\"list-order\"]')\n    const $media = $append.find('select[name=\"media-type\"]')\n    const offset = parseInt($load.attr('data-offset')) + COUNT\n    const params = {\n      order: $order.val(),\n      offset: loadedMore ? offset : 0,\n      count: COUNT,\n      include: $media ? $media.val() : null\n    }\n\n    const dest = (endpoint === 'search') ?\n      endpoint+'/'+$('body').attr('data-search') :\n      endpoint\n\n    const url = `/wp-json/v1/${dest}?${qs.stringify(params)}${cachebust(true)}`\n\n    console.log(url)\n\n    $.get(url, ({items}) => {\n      if(!items) {\n        $load.hide()\n        return\n      }\n\n      if(!loadedMore) $feed.empty()\n      $feed.append(`\n        ${items.map((item) => buildContentNode(item)).join(' ')}\n      `)\n\n      if(loadedMore) {\n        if(items.length < COUNT){\n          $load.hide()\n        }\n        else {\n          $load.attr('data-offset', offset)\n        }\n      }\n      else {\n        $load.attr('data-offset', 0)\n      }\n    })\n  }\n\n  const changeView = function() {\n    const value = $(this).val()\n    const className = 'content-feed--contracted'\n    const $feed = $('.content-feed')\n\n    if(value === 'condense') {\n      $feed.addClass(className)\n    }\n    else {\n      $feed.removeClass(className)\n    }\n    Cookies.set('ARCHIVEVIEW', value)\n  }\n\n  const changeOrder = function() {\n    const value = $(this).val()\n    Cookies.set('ARCHIVEORDER', value)\n  }\n\n  // Event Listeners\n  $append.on('click', 'input[name=\"list-view\"]', changeView)\n  $append.on('change', 'select[name=\"list-order\"]', function(){\n    handleUpdate()\n    changeOrder.bind(this)()\n  })\n  $append.on('change', 'input[name=\"media-type\"]', () =>{ handleUpdate() })\n  page.on('click', '.content-load', () => { handleUpdate(true) })\n\n  if(image){\n    respBg($append.find('.respImg'))\n  }\n\n  // These are created in buildContentNode\n  sublink($append.find('[data-sublink]'))\n  cutoff($append.find('[data-cutoff]'), $append.find('[data-cutoff-all]'))\n}\n\nmodule.exports = buildArchive\n","const cachebust = require('./cachebust')\nconst cutoff = require('./cutoff')\nconst buildContentNode = require('./buildContentNode')\nconst icon = require('./icon')\nconst respImg = require('./respImg')\nconst sublink = require('./sublink')\nconst qs = require('query-string')\n\nconst buildCollectionFeed = (\n  page,\n  {\n    id,\n    content,\n    description\n  }\n) => {\n  const append = $(`\n    <div class=\"collection-intro\">\n      <div class=\"collection-description\">${description}</div>\n      <div class=\"collection-introBottom\">\n        <label class=\"collection-searchLabel\" for=\"filter\">Search within this collection</label>\n        <span class=\"collection-search\">\n          ${icon('search', 'type')}\n          <input name=\"filter\" type=\"text\" placeholder=\"Search\">\n        </span>\n      </div>\n    </div>\n    <p class=\"content-subheading\"></p>\n    <ul class=\"collection\">\n      ${content.map((item) => buildContentNode(item)).join(' ')}\n    </ul>\n  `)\n\n  page.append(append)\n\n  const params = { collection: id }\n  const $feed = page.find('.collection')\n  const $subhead = page.find('.content-subheading')\n  page.find('input').keyup(function(e) {\n    window.TIMEOUT = setTimeout(() => {\n      const term = $(this).val()\n      const endpoint = `/wp-json/v1/search/${term}?${qs.stringify(params)}${cachebust(true)}`\n      window.SEARCHTERM = term\n\n      $.get(endpoint, ({\n        total_hits,\n        items,\n        results\n      }) => {\n        if(!items) {\n          $subhead.text('No results found')\n          $feed.empty()\n          return\n        }\n\n        $subhead.html(`\n          <span>Showing ${total_hits} hits across ${results} files</span>\n          <button class=\"content-cutoff\" data-cutoff-all data-alttext='Contract All ${icon('up')}'>Expand All ${icon('down')}</button>\n        `)\n        $feed.html(items.map(buildContentNode).join(' '))\n\n        // These are created in buildContentNode\n        sublink(page.find('[data-sublink]'))\n        cutoff(page.find('[data-cutoff]'), page.find('[data-cutoff-all]'))\n      })\n    }, 200)\n  }).submit((e) => { e.preventDefault })\n}\n\nmodule.exports = buildCollectionFeed\n","const icon = require('./icon');\nconst respBg = require('./respBg');\nconst respImg = require('./respImg');\nconst sharer = require('./sharer')\n\nconst buildCollectionHeader = (\n  page,\n  {\n    link,\n    name,\n    image\n  }\n) => {\n  const shareLinks = sharer(link, name, name, {})\n\n  const append = `\n    <header class=\"contentHeader contentHeader--collection\">\n      <figure class=\"heroImg js-respBg\" data-set=\"hero\" data-id=\"${image}\"/>\n      <div class=\"contentHeader-inner contentHeader-inner--hasBottom\">\n        <div class=\"contentHeader-bottom\">\n          <span class=\"contentHeader-type contentHeader-type--collection\">${icon('collection', 'type')}Collection</span>\n          <h2 class=\"collection-head\">${name}</h2>\n        </div>\n      </div>\n      <div class=\"contentHeader-imgWrapper\">\n        ${respImg.markup({image}, 'feat_lg', 'respImg contentHeader-img', null, true)}\n        <div class=\"shareLinks\">\n          Share this collection\n          ${shareLinks.render}\n        </div>\n      </div>\n    </header>\n  `\n\n  page.append(append)\n  shareLinks.attachHandlers()\n  respBg(page.find('.heroImg'))\n}\n\nmodule.exports = buildCollectionHeader\n","var internalLink = require('./internalLink');\n\nvar buildCollectionsList = function( collections ){\n  // don't display the word \"the\" if first collection starts with \"the\"\n\n  var the = collections[0].link_text.startsWith('The') ? '' : 'the ';\n\n  var html = '<p class=\"contentHeader-collectionsList\">Part of ' + the + '<strong> ';\n  html +=      internalLink( collections[0], collections[0].link_text );\n  if( collections.length > 2 ){\n    for( var i = 1, x = collections.length - 1; i < x; i++ ){\n      html +=       ', ' + internalLink( collections[i], collections[i].link_text );;\n    }\n  }\n  if( collections.length > 1 ){\n    if( collections.length > 2) html += ', '; //oxford comma\n    html +=     ' <span class=\"contentheader-collectionsAnd\">and</span> ';\n    html +=     internalLink( collections[collections.length - 1], collections[collections.length - 1].link_text );\n  }\n  html +=     '</strong> collection'\n  if( collections.length > 1 ){\n    html +=     's';\n  }\n  html +=     '</p>';\n  return html;\n}\n\nmodule.exports = buildCollectionsList;\n","const icon = require( './icon' );\nconst internalLink = require( './internalLink' );\n\nconst buildConnected = (related = []) => {\n  return `\n    <ul class=\"relatedItem-wrapper\">\n      ${(related || []).map((item) => (`\n        <li class=\"relatedItem relatedItem--${item.type}\">\n          ${internalLink(item, `${icon(item.type, 'type')} ${item.name}`)}\n        </li>\n      `)).join(' ')}\n    </ul>\n  `\n}\n\nmodule.exports = buildConnected\n","const icon = require('./icon')\nconst internalLink = require('./internalLink')\nconst respImg = require('./respImg')\nconst shortid = require('shortid')\n\nconst buildContentNode = function({\n  type,\n  id,\n  title,\n  excerpt,\n  hits,\n  img_set,\n  link\n}){\n  const cutoff = 5\n  const uid = shortid.generate()\n  let imgHtml = '', hitCount, hitHtml\n  if(hits && hits.length > 0) {\n    hitCount = hits.length\n    hitHtml = `\n      <ul class=\"content-hits\">\n        ${hits.slice(0, cutoff).map((hit) => `<li\n          class=\"content-data-sublink\"\n          data-sublink=\"${hit.timestamp}\"\n          tabindex=\"0\"\n          >${hit.text}</li>\n        `).join('')}\n      </ul>\n      ${hitCount > cutoff ? `\n        <ul class=\"content-hits hidden\" id=\"${uid}\">\n          ${hits.map((hit) => `<li\n            class=\"content-data-sublink\"\n            data-sublink=\"${hit.timestamp}\"\n            tabindex=\"0\"\n            >${hit.text}</li>\n          `).join('')}\n        </ul>\n      ` : ''}\n    `\n  }\n\n  if(img_set) {\n    imgHtml = `\n    <div class=\"content-imgWrapper\">\n      <img\n        src=\"${img_set.sizes.md}\"\n        class=\"respImg-none\"\n        alt=\"${img_set.alt || ''}\"\n        ${img_set.caption ? ` data-caption=\"${img_set.caption}\"` : null}\n        ${img_set.group ? ` data-group=\"${img_set.group}\"` : null}\n      >\n    </div>\n    `\n  }\n\n  const content = `\n    <article class=\"content content--${type}\" data-id=\"${id}\">\n      <div class=\"content-inner\">\n        <span class=\"content-type\">${icon(type, 'type')} ${type}</span>\n        <h3 class=\"content-head\">\n          ${title}\n          ${!hitCount ? '' : `\n            &nbsp<small>(${hitCount} total ${hitCount > 1 ? 'hits' : 'hit'})</small>\n            ${hitCount > cutoff ? `\n              <button class=\"content-cutoff\" data-cutoff=\"#${uid}\" data-alttext='View Less ${icon('up')}' data-nolink=\"true\">Expand ${icon('down')}</button>\n            ` : ''}\n          `}\n        </h3>\n        <div class=\"content-excerpt\">${hitHtml || excerpt}</div>\n        <div class=\"content-link\">View The ${type} ${icon('right', 'link')}</div>\n      </div>\n      ${imgHtml}\n    </article>\n  `\n  return internalLink({\n    id,\n    type,\n    link\n  }, content)\n}\n\nmodule.exports = buildContentNode\n","const buildCollectionsList = require('./buildCollectionsList')\nconst buildConnected = require('./buildConnected')\nconst icon = require('./icon')\nconst scrollIndicator = require('./scrollIndicator')\nconst sharer = require('./sharer')\n\nconst buildInterviewsHeader = (\n  page,\n  {\n    id,\n    video_id,\n    name,\n    collections,\n    introduction,\n    related,\n    transcript_url,\n    description_url,\n    link\n  }\n) => {\n  const shareLinks = sharer(link, name, introduction.replace(/(<([^>]+)>)/ig,''), {})\n  const indicator = scrollIndicator('.transcript')\n\n  const append = `\n    <div class=\"contentHeaderOuter\">\n      <header class=\"contentHeader contentHeader--interview\">\n        <span class=\"contentHeader-type\">${icon('interview', 'type')}Interview</span>\n        <div class=\"contentHeader-inner\">\n          <h2 class=\"contentHeader-head\">${name}</h2>\n          ${collections ? buildCollectionsList(collections) : ''}\n          ${introduction ? `<div class=\"contentHeader-introduction\">${introduction}</div>` : ''}\n          ${related ? `\n            <h3 class=\"contentHeader-relatedHead\">Related to</h3>\n            ${buildConnected(related)}\n          ` : ''}\n          <span class=\"contentHeader-selectWrapper\" id=\"selectWrap-${id}\" style=\"display: none;\">\n            <select class=\"contentHeader-select\" id=\"select-${id}\">\n              <option value=\"null\">Contents</option>\n            </select>\n          </span>\n        </div>\n        <div class=\"contentHeader-imgWrapper\">\n          <span class=\"contentHeader-toggleVid\" data-action=\"toggle\" data-target=\".contentHeader-imgWrapper\">\n            <label for=\"toggleVid\">Video Display:</label>\n            <select id=\"toggleVid\">\n              <option>Small</option>\n              <option selected>Medium</option>\n              <option>Large</option>\n              <option>Hidden</option>\n            </select>\n          </span>\n          <video\n            data-able-player\n            data-youtube-id=\"${video_id}\"\n            data-youtube-playsinline\n            ${transcript_url ? `data-transcript-src=\"transcript-${id}\"` : ''}\n          >\n            ${transcript_url ? `<track kind=\"captions src=\"${transcript_url}\">` : ''}\n            ${description_url ? `<track kind=\"descriptions src=\"${description_url}\">` : ''}\n          </video>\n          <a class=\"able-fake-pause\"></a>\n          <div class=\"contentHeader-searchwrap\">\n            <input class=\"contentHeader-search\" id=\"video-search\" placeholder=\"Search transcript, annotations & descriptions\">\n          </div>\n          <div class=\"shareLinks\">\n            Share this Interview\n            ${shareLinks.render}\n          </div>\n        </div>\n        ${indicator.render}\n      </header>\n    </div>\n  `\n\n  page.append(append)\n  shareLinks.attachHandlers()\n  indicator.attachHandlers()\n}\n\nmodule.exports = buildInterviewsHeader\n","var cachebust = require('./cachebust');\nvar eqHeight = require( './eqHeight' );\nvar icon = require( './icon' );\nvar internalLink = require( './internalLink' );\n\nvar buildOtherInCollection = function( page, id, collection ){\n  $.get( '/wp-json/v1/collections/'+collection.id+'/?count=3&not='+id+cachebust(true), function(data){\n    if ( !data.content.length ) return;\n    var others = $( '<div class=\"others\" />' );\n    others.append( '<h3 class=\"others-head\">Other interviews and timelines in the <strong>' + data.name + '</strong> collection</h3>' );\n    for( var i = 0, x = data.content.length; i < x; i++ ){\n      var html = '<article class=\"others-single others-single--' + data.content[i].type + '\">';\n      html +=   '<span class=\"others-singleType\">'+icon( data.content[i].type, 'type' ) + ' ' + data.content[i].type + '</span>'\n      html +=   '<h4 class=\"others-singleHead\">' + data.content[i].title + '</h4>';\n      html +=   '<p class=\"others-singleDescription\">'+data.content[i].excerpt;\n      html +=   internalLink( data.content[i], 'View the '+data.content[i].type + ' ' + icon( 'right', 'link' ) )+'</p>';\n      html += '</article>';\n      others.append( html );\n    }\n    others.append( '<div class=\"others-wrap\"><div class=\"others-link\">' + internalLink( collection, 'View The Collection' + icon( 'right', 'link' ) ) + '</div></div>' );\n    page.append(others);\n    eqHeight( '.others-single' );\n  } );\n}\n\nmodule.exports = buildOtherInCollection;\n","const cachebust = require('./cachebust')\nconst animatePage            = require('./animatePage')\nconst buildArchive           = require('./buildArchive')\nconst buildCollectionHeader  = require('./buildCollectionHeader')\nconst buildCollectionFeed    = require('./buildCollectionFeed')\nconst buildTimeline          = require('./buildTimeline')\nconst buildTimelineHeader    = require('./buildTimelineHeader')\nconst buildInterviewsHeader  = require('./buildInterviewsHeader')\nconst buildOtherInCollection = require('./buildOtherInCollection')\nconst buildTranscript        = require('./buildTranscript')\nconst buildSupp              = require('./buildSupp')\nconst eqHeight               = require('./eqHeight')\nconst getNodeFromTimestamp   = require('./getNodeFromTimestamp')\nconst highlighter            = require('./highlighter')\nconst stickyHeader           = require('./stickyHeader')\nconst syncAblePlayer         = require('./syncAblePlayer')\nconst respImg                = require('./respImg')\nconst Cookies                = require('js-cookie')\nconst highlightTranscript = require('./highlightTranscript')\nconst highlightSuppCont = require('./highlightSuppCont')\n\nconst buildPage = function(wrapper, endpoint, queriedObject, dir){\n  $('[data-action=\"jumpToActive\"], .socialPopup').remove()\n  clearInterval(JUMPTOACTIVE) // from syncAblePlayer – stop polling went creating new page\n  const page = $('<article class=\"page\"/>')\n  $('body').attr('data-endpoint', endpoint)\n  $('body').attr('data-id', queriedObject)\n  if(queriedObject === 'archive'){\n    if(endpoint === 'search'){\n      const term = $('body').attr('data-search').replace('+', ' ')\n      window.SEARCHTERM = term\n      document.title = 'Search for '+term\n      $.get('/wp-json/v1/'+endpoint+'/'+term+'?count='+COUNT+'&offset=0'+cachebust(true), function(data){\n        buildArchive(page, data, endpoint)\n        animatePage(wrapper, page, dir, function(){\n          respImg.load('.respImg')\n        })\n      })\n    }\n    else {\n      if(endpoint === 'interviews'){\n        const order = Cookies.get('ARCHIVEORDER') || 'abc'\n        const url = `/wp-json/v1/interviews?order=${order}&count=${COUNT}&include=all`+cachebust(true)\n\n        $.get(url, function(data){\n          buildArchive(page, data, endpoint, true, [\n            'Media',\n            'No Media',\n            'All'\n          ])\n\n          animatePage(wrapper, page, dir, function(){\n            respImg.load('.respImg')\n          })\n        })\n\n      } else {\n        const url = '/wp-json/v1/'+endpoint+'?count='+COUNT+'&offset=0'+cachebust(true)\n        $.get(url, function(data){\n          buildArchive(page, data, endpoint, false, false)\n          animatePage(wrapper, page, dir, function(){\n            respImg.load('.respImg')\n          })\n        })\n      }\n    }\n  } else {\n    const url = `/wp-json/v1/${endpoint}/${queriedObject}`+cachebust()\n    $.get(url, function(data){\n      if(data.name) document.title = data.name\n      DESCRIPTION = data.description\n      if(endpoint === 'timelines'){\n        buildTimelineHeader(page, data)\n        buildTimeline(page, data.events, data.intro, (page) => {\n          if(window.location.hash){\n            const hash = window.location.hash\n            setTimeout(function(){\n              $('body, html').scrollTop($(hash).offset().top)\n            }, TRANSITIONTIME)\n          }\n        })\n      }\n      else if(endpoint === 'interviews'){\n        if(data.no_media) {\n          buildTimelineHeader(page, data, 'Interview')\n          buildTranscript(page, data.id, (transcript) => {\n            highlighter('.able-transcript')\n            buildSupp(page, endpoint, queriedObject, () => {\n              if(data.collections.length) {\n                buildOtherInCollection(page, data.id, data.collections[0])\n              }\n            })\n            if(getNodeFromTimestamp()){\n              const timestamp = getNodeFromTimestamp()\n              const offset = $('.contentHeaderOuter').outerHeight() + 32\n              setTimeout(() => {\n                $('body, html').scrollTop(timestamp.offset().top - offset)\n              })\n            }\n          })\n        }\n        else {\n          buildInterviewsHeader(page, data)\n          buildTranscript(page, data.id, (transcript) => {\n            highlighter('.transcript')\n            buildSupp(page, endpoint, queriedObject, (supp) => {\n              if(data.collections.length){\n                buildOtherInCollection(page, data.id, data.collections[0])\n              }\n              syncAblePlayer(transcript, data.id, supp)\n            }, !!transcript)\n            stickyHeader(page, '.contentHeaderOuter', '.contentHeader-inner')\n          })\n        }\n      }\n      else if(endpoint === 'interactives') {\n        buildTimelineHeader(page, data, false)\n        buildTranscript(page, data.id, (transcript) => {\n          highlighter('.transcript')\n          buildSupp(page, endpoint, queriedObject, null, !!transcript)\n        })\n      }\n      else if(endpoint === 'collections') {\n        buildCollectionHeader(page, data)\n        buildCollectionFeed(page, data)\n      }\n\n      animatePage(wrapper, page, dir, () => {\n        if(endpoint === 'timelines' && $('.respImg').length < 1){\n          buildSupp(page, endpoint, queriedObject, () => {\n            if(data.collections.length){\n              buildOtherInCollection(page, data.id, data.collections[0])\n            }\n          }, true)\n          return\n        }\n\n        respImg.load('.respImg', () => {\n          // run this as a callback so that height can be based on returned images\n          if(endpoint === 'timelines'){\n            buildSupp(page, endpoint, queriedObject, () => {\n              if(window.SEARCHTERM) {\n                highlightTranscript(page.find('.timeline'), '[data-node]', window.SEARCHTERM)\n                highlightSuppCont(page.find('.suppCont'), '[data-suppcont]', window.SEARCHTERM)\n              }\n              if(data.collections.length){\n                buildOtherInCollection(page, data.id, data.collections[0])\n              }\n            }, true)\n          }\n        })\n        eqHeight('.others-single')\n      })\n\n    })\n  }\n\n}\n\nmodule.exports = buildPage\n","const cachebust = require('./cachebust')\nconst buildSuppInner = require('./buildSuppInner')\nconst getUrlWithNoHash = require('./getUrlWithNoHash')\nconst icon = require('./icon')\nconst internalLink = require('./internalLink')\nconst sharer = require('./sharer')\nconst syncTimestamps = require('./syncTimestamps')\n\nconst buildSupp = (\n  page,\n  endpoint,\n  queriedObject,\n  callback,\n  mainContentExists\n) => {\n  $.get(`/wp-json/v1/${endpoint}/${queriedObject}/supp${cachebust()}`, (results) => {\n    const timestamps = {}\n    const unmatched = []\n\n    results.forEach(({ type, data, open, timestamp}) => {\n      timestamp = timestamp.toString()\n      if(timestamp || (timestamp === 0 && mainContentExists)) {\n        timestamps[timestamp] = timestamps[timestamp] || []\n        timestamps[timestamp].push({ type, data, open })\n      }\n      else {\n        unmatched.push({ type, data })\n      }\n    })\n\n    let index = 0\n    const shares = []\n    let inner = ''\n\n    for(const timestamp in timestamps) {\n      inner = inner + `\n        <ul class=\"suppCont-inner\" data-timestamp=\"${timestamp}\">\n          ${timestamps[timestamp].map((node) => {\n\n            const { preview, cont } = buildSuppInner(node)\n            const url = `${getUrlWithNoHash()}#sc-${index}`\n\n            const shareLinks = sharer(\n              url,\n              preview,\n              preview,\n              { clipboardText: `${preview}\\n${url}` }\n            )\n\n\n            shares.push({\n              id: shareLinks.id,\n              options: shareLinks.options\n            })\n\n            return `\n              <li tabindex=\"0\"\n                ${node.open ? `data-opendefault=\"true\"` :''}\n                data-action=\"expand\"\n                data-supp=\"${index}\"\n                class=\"suppCont-single suppCont-single--${node.type} ${node.class ? `suppCont-single--${node.class}` : ''}\"\n              >\n                <button class=\"suppCont-expand suppCont-expand--type\" data-action=\"close-type\">\n                  ${icon(node.type, 'suppExpand')}\n                </button>\n                <div class=\"suppCont-singleInner\">\n                  <div data-suppcont=\"${preview}\" class=\"suppCont-preview\" aria-hidden>${preview}</div>\n                  <div class=\"suppCont-content\">${cont}\n                    <div class=\"suppCont-share\">\n                      Share this\n                      ${shareLinks.render}\n                    </div>\n                  </div>\n                </div>\n                <button data-action=\"close\" class=\"suppCont-expand\">\n                  ${icon('expand', 'suppExpand')}\n                </button>\n              </li>\n            `\n          }).join(' ')}\n        </ul>\n      `\n      index = index + 1\n    }\n\n    const aside = `<aside class=\"suppCont\">${inner}</aside>`\n\n    if(mainContentExists) page.append(aside)\n\n    shares.forEach(({id, options}) => { sharer().attachHandlers(id, options) })\n\n    if(unmatched.length) {\n      let type = 'content'\n      if(endpoint === 'timelines') {\n        type = 'timeline'\n      }\n      else if(endpoint === 'interviews') {\n        type = 'interview'\n      }\n\n      const unmatchedWrapper = `\n        <section class=\"unmatched\">\n          <h3 class=\"unmatched-head\">Additional content related to this ${type}</h3>\n          <ul class=\"unmatched-list\">\n            ${unmatched.map((item) => {\n              const content = buildSuppInner(item).cont\n              let label = item.data.title\n              switch(item.type) {\n                case 'text':\n                  label = item.data.content\n                case 'blockquote':\n                  label = item.data.quote\n              }\n\n              return `\n                <li data-content='${content}' class=\"unmatched-item unmatched-item--${item.type}\">\n                  ${icon(item.type, 'type')} ${label}\n                </li>\n              `\n            }).join(' ')}\n          </ul>\n        </section>\n      `\n\n      page.append(unmatchedWrapper)\n    }\n\n    if(endpoint === 'interviews' || endpoint === 'interactives'){\n      syncTimestamps('.suppCont-inner', '.transcript-node', '.transcript')\n    }\n    else if(endpoint === 'timelines'){\n      syncTimestamps('.suppCont-inner', '.event', '.timeline')\n    }\n\n    $('[data-content]').each(function(){\n      const content = $(this).data('content')\n      $(this).featherlight({\n        html: `\n          <div class=\"suppCont-lightbox\">\n            <div class=\"suppCont-content\">${content}</div>\n          </div>\n        `,\n        afterContent: () => {\n          $('body').css('overflow', 'hidden')\n          $('.featherlight-close-icon').html(icon('contract', 'suppContent-lightboxClose'))\n        },\n        afterClose: () => {\n          $('body').css('overflow', '')\n        }\n      })\n    })\n\n    if(callback) callback({\n      timestamps,\n      unmatched\n    })\n  })\n}\n\nmodule.exports = buildSupp\n","var icon = require( './icon' );\nvar internalLink = require( './internalLink' );\nvar respImg = require( './respImg' );\n\nvar buildSuppInner = function( content ){\n\n  var preview = '';\n  var cont = '';\n\n  switch( content.type ){\n    case 'blockquote':\n      preview = content.data.quote;\n      cont =  '<blockquote data-suppcont=\"'+content.data.quote+'\" class=\"suppCont-quote\">'+content.data.quote+'&rdquo;';\n      cont +=  '<footer data-suppcont=\"'+content.data.attribution+'\" class=\"suppCont-attribution\">&mdash; '+content.data.attribution+'</footer>';\n      cont += '</blockquote>';\n      break;\n    case 'externallink':\n      preview = content.data.title;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      if( content.data.description ) cont += '<p data-suppcont=\"'+content.data.description+'\">'+content.data.description+'</p>';\n      cont += '<a target=\"_blank\" href=\"' + content.data.link_url + '\">';\n      cont +=  ( content.data.link_text || 'Visit Link' ) + icon( 'right', 'link' );\n      cont += '</a>';\n      content.type = 'link';\n      break;\n    case 'file':\n      preview = content.data.title;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      if( content.data.description ) cont += '<p data-suppcont=\"'+content.data.description+'\">'+content.data.description+'</p>';\n      cont += '<a target=\"_blank\" href=\"' + content.data.file + '\">';\n      cont +=  'Download ' + icon( 'right', 'link' );\n      cont += '</a>';\n      break;\n    case 'gallery':\n      preview = content.data.title;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      if( content.data.description ) cont += '<p data-suppcont=\"'+content.data.description+'\">'+content.data.description+'</p>';\n      cont += '<div class=\"suppCont-gallery\">';\n      for( var i = 0, x = content.data.imgs.length; i < x; i++ ){\n        var img = content.data.imgs[i];\n        cont += '<span class=\"suppCont-galleryImage\">';\n        cont += respImg.markup( img.img_id, 'feat_xs', 'respImg-defer', {\n          alt: img.alt,\n          caption: img.caption,\n          group: content.data.title\n        } );\n        cont += '</span>';\n      }\n      cont += '</div>'\n      break;\n    case 'image':\n      preview = content.data.title;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      cont += respImg.markup( content.data.img_id, 'feat_sm', 'respImg-defer', {\n        alt: content.data.alt,\n        caption: content.data.caption\n      } );\n      if( content.data.caption ) cont += '<p data-suppcont=\"'+content.data.caption+'\">'+content.data.caption+'</p>';\n      break;\n    case 'internallink':\n      preview = content.data.title;\n      content.type = content.data.type;\n      content.class = content.data.type;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      cont += respImg.markup( content.data.feat_img, 'feat', 'respImg-defer gallery-single' );\n      cont += '<p data-suppcont=\"'+(content.data.link_description || content.data.description)+'\">'+(content.data.link_description || content.data.description)+'</p>';\n      cont += internalLink( content.data, 'View ' + content.type + icon( 'right', 'link' ) );\n      break;\n    case 'map_location':\n      var zoom = content.data.zoom || 17;\n      var map_url = 'https://maps.googleapis.com/maps/api/staticmap?center='+content.data.coords.lat+','+content.data.coords.lng+'&size=600x300&zoom='+zoom+'&markers=color:red%7C'+content.data.coords.lat+','+content.data.coords.lng+'&key='+MAPS_APP_ID; // TODO: make API key a site option\n      preview = content.data.title;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      cont += '<img src=\"' + map_url + '\" alt=\"Map of '+content.data.title+'\" />';\n      break;\n    case 'text':\n      var tempHtml = document.createElement('div');\n      tempHtml.innerHTML = content.data.content;\n      preview = tempHtml.textContent || tempHtml.innerText\n      cont = '<div data-suppcont=\"'+content.data.content+'\">'+content.data.content+'</div>'\n      break;\n  }\n\n  return {\n    preview: preview,\n    cont: cont\n  }\n}\n\nmodule.exports = buildSuppInner;\n","const icon = require('./icon')\nconst respImg = require('./respImg')\nconst sharer = require('./sharer')\n\nconst buildTimeline = (\n  page,\n  events,\n  intro,\n  cb\n) => {\n  const shares = []\n\n  const append = `\n    <div class=\"content-intro\">${intro}</div>\n    <ul class=\"timeline\">\n      ${events.map(({\n        event_date,\n        title,\n        image,\n        content,\n        content_link,\n        content_link_type,\n        content_link_id,\n        content_link_text,\n      }, index) => {\n        const shareLinks = sharer(\n          window.location.href.split('#')[0]+'#'+index,\n          title,\n          content.replace(/(<([^>]+)>)/ig,''),\n          {}\n        )\n\n        shares.push({\n          id: shareLinks.id,\n          options: shareLinks.options\n        })\n\n        return `\n          <li id=\"${index}\" class=\"event loaded\" data-start=\"${event_date}\">\n            <span class=\"event-dot\"></span>\n            <date class=\"event-date\">${event_date}</date>\n            <h3 class=\"event-head\" data-node=\"<a href='#${index}'>${title}</a>\"><a href=\"#${index}\">${title}</a></h3>\n            ${image ? `<div class=\"event-imageWrapper\">\n              ${respImg.markup(image, 'feat_lg', 'respImg', null, true)}\n            </div>` : ''}\n            ${content.length ?\n              `<div class=\"event-content\" data-node=\"${content}\">${content}</div>` :\n              ''\n            }\n            ${content_link ? `\n              <a class=\"js-internalLink relatedItem relatedItem--${content_link_type}\"\n                data-type=\"${content_link_type}\"\n                data-id=\"${content_link_id}\"\n                href=${content_link}\n              >\n                ${icon(content_link_type, 'type')} ${content_link_text}\n              </a>\n            ` : ''}\n            <div class=\"event-social\">\n              ${shareLinks.render}\n            </div>\n          </li>\n        `\n      }\n    ).join(' ')}\n    </ul>\n  `\n\n  page.append(append)\n  shares.forEach(({id, options}) => { sharer().attachHandlers(id, options) })\n  if(cb) cb(page)\n}\n\nmodule.exports = buildTimeline\n","const buildCollectionsList = require('./buildCollectionsList')\nconst buildConnected = require('./buildConnected')\nconst icon = require('./icon')\nconst respImg = require('./respImg')\nconst sharer = require('./sharer')\n\nconst buildTimelineHeader = (\n  page,\n  {\n    link,\n    name,\n    image,\n    introduction,\n    related,\n    collections\n  },\n  type = null\n) => {\n  const shareLinks = sharer(link, name, name, {})\n\n  const append = `\n    <header class=\"contentHeader contentHeader--timeline\">\n      ${type !== false ? `\n        <span class=\"contentHeader-type\">\n          ${icon(type, 'type')}\n          ${type || 'Timeline'}\n        </span>\n      ` : ''}\n      <div class=\"contentHeader-inner\">\n        <h2 class=\"contentHeader-head\">${name}<?h2>\n        ${collections ? buildCollectionsList(collections) : ''}\n        ${introduction ? `<div class=\"contentHeader-introduction\">${introduction}</div>` : ''}\n        ${related ? `\n          <h3 class=\"contentHeader-relatedHead\">Related to</h3>\n          ${buildConnected(related)}\n        ` : ''}\n      </div>\n      <div class=\"contentHeader-imgWrapper\">\n        ${image ? respImg.markup(image, 'feat_lg', 'respImg contentHeader-img', null, true) : ''}\n        <div class=\"shareLinks\">\n          Share\n          ${shareLinks.render}\n        </div>\n      </div>\n    </header>\n  `\n\n  page.append(append)\n  shareLinks.attachHandlers()\n}\n\nmodule.exports = buildTimelineHeader\n","var cachebust             = require('./cachebust');\nvar buildTranscriptMarkup = require('./buildTranscriptMarkup');\nvar highlightTranscript   = require('./highlightTranscript');\nvar highlightSuppCont     = require('./highlightSuppCont');\nvar Cookies               = require('js-cookie');\n\nvar buildTranscript = function( wrapper, id, cb ){\n  var outer = $( '<section class=\"able-transcript-area transcript\" id=\"transcript-'+id+'\">' );\n  var transcript = $( '<div id=\"transcript-inner\" class=\"able-transcript\" />' );\n  var callback = cb || false;\n\n  let getUseDescription = (init) => {\n    if(init){\n      const cookies = Cookies.get('Able-Player')\n      if(!cookies) return false\n\n      const json = JSON.parse(cookies)\n      return json.preferences && json.preferences.prefDesc\n    } else {\n      return !$('.able-button-handler-descriptions').hasClass('buttonOff')\n    }\n  }\n\n  let getNodes = () => null\n\n  // Window scoped variables for quick fix\n  window.JUMPTOINIT = false\n  const onEachNode = (node) => {\n    window.JUMPTO = $('#select-'+id)\n    if(node.type === 'section_break'){\n      JUMPTO.append(`<option value=\"${node.start}\">${node.contents}</option>`)\n      if(!JUMPTOINIT){\n        window.JUMPTOINIT = true\n        JUMPTO.parent().show()\n        JUMPTO.on( 'change', function(){\n          var val = $(this).val();\n          var offset = 0;\n          if( val === 'default' ){\n            $('body,html').animate( {\n              scrollTop: 0\n            }, TRANSITIONTIME*2 );\n            return;\n          }\n          var offset = ( $(window).width() >= 568 ) ? $( '.contentHeaderOuter' ).height() + 16 : 0;\n          $('body,html').animate( {\n            scrollTop: $('.transcript-section[data-timestamp=\"'+val+'\"]').offset().top - offset\n          }, TRANSITIONTIME );\n          setTimeout( function(){\n            offset = offset - jumpto.height();\n            $('body,html').animate( {\n              scrollTop: $('.transcript-section[data-timestamp=\"'+val+'\"]').offset().top - offset\n            }, TRANSITIONTIME/2 );\n          }, TRANSITIONTIME )\n        });\n      }\n    }\n  }\n\n  const url = '/wp-json/v1/interviews/'+id+'/transcript?return=transcript_contents'+cachebust(true)\n\n  $.get(url, function( data ){\n\n    getNodes = () => data\n\n    if( !data ){\n      if( callback ) callback( data );\n      return;\n    }\n\n\n    const html = buildTranscriptMarkup(data, {\n      onEach: onEachNode,\n      useDescription: getUseDescription(true)\n    })\n\n    JUMPTO.append( '<option value=\"default\">Back to top</option>' );\n    transcript.append( html );\n    outer.append( transcript );\n    outer.append( '<div class=\"able-window-toolbar\" />' );\n    wrapper.append( '<div class=\"transcript-instructions\">'+window.INSTRUCTIONS+'</div>' );\n    wrapper.append( outer );\n    if( callback ) callback( data );\n  } );\n\n  // Rebuild on descriptions\n  $('body').on('click', '.able-button-handler-descriptions', () =>{\n    const html = buildTranscriptMarkup(getNodes(), {\n      onEach: onEachNode,\n      useDescription: getUseDescription()\n    })\n    transcript.html(html)\n  })\n\n  // Rebuild on search\n  let initDebuff = false\n  $('body').on('keyup', '#video-search', function(){\n    window.SEARCHDEBUFF = setTimeout(() => {\n      const value = $(this).val()\n      const keyword = (value.length > 2) ? value : false\n      highlightTranscript(transcript, '[data-node]', keyword)\n      highlightSuppCont('.suppCont-single', '[data-suppcont]', keyword)\n    }, 500)\n  })\n}\n\nmodule.exports = buildTranscript;\n","const buildTranscriptMarkup = (data, {\n  onEach,\n  onComplete,\n  useDescription\n}) => {\n  if(!data) return\n\n  let paragraphInit = true;\n  let paragraphOpen = false;\n  const html = data.reduce((acc, node) => {\n    let markup = '';\n    let replaced = false\n\n    const quotes = (string) => string.replace(/\"/g, '\\'')\n\n    switch(node.type){\n      case 'description':\n        if(useDescription){\n          markup += paragraphOpen ? '</div>' : '';\n          markup += `<div data-node=\"${node.contents}\" class=\"transcript-description\">${node.contents}</div>`;\n        }\n        break;\n      case 'paragraph_break':\n        markup += paragraphInit ? '<div class=\"able-transcript-block\">' : '</div>';\n        markup += paragraphOpen ? '<div class=\"able-transcript-block\">' : '';\n        paragraphInit = false;\n        paragraphOpen = !paragraphOpen;\n        break;\n      case 'section_break':\n        markup += paragraphOpen ? '</div>' : '';\n        markup += `<div data-node=\"${quotes(node.contents)}\" data-highlight=\"transcript\" class=\"transcript-section able-unspoken\" data-timestamp=\"${node.start}\">${node.contents}</div>`;\n        break;\n      case 'speaker_break':\n        markup += paragraphOpen ? '</div>' : '';\n        markup += `<div data-node=\"${quotes(node.contents)}\" data-highlight=\"next\" class=\"transcript-speaker able-unspoken\">${node.contents}</div>`;\n        break;\n      case 'transcript_node':\n        const contents = node.contents.replace('href', 'target=\"_blank\" data-highlight=\"parent\" href')\n        markup = `<span data-node=\"${quotes(node.contents)}\" tabindex=\"0\" class=\"able-transcript-seekpoint able-transcript-caption transcript-node\" data-highlight=\"transcript\" data-start=\"${node.start}\" data-end=\"${node.end}\">${contents}</span>&nbsp;`;\n        break;\n    }\n\n    if(typeof onEach === 'function') onEach(node)\n    return acc + markup;\n  }, '')\n  return html;\n}\n\nmodule.exports = buildTranscriptMarkup\n","var cachebust = function(hasArgs){\n  return (hasArgs ? '&' : '?') + 'c=' + Date.now();\n}\n\nmodule.exports = cachebust;\n","const cutoff = (elem, all = null) => {\n  const alt = $(elem).data('alt')\n  const orig = $(elem).text()\n\n  const handleChange = function() {\n    const $this = $(this)\n    const $target = $($this.data('cutoff'))\n    $this.data('orig', $this.data('orig') || $this.html())\n\n    $this.data('on', !$this.data('on'))\n\n    if($this.data('on')) {\n      $target.show()\n      $this.html($this.data('alttext'))\n    }\n    else {\n      $target.hide()\n      $this.html($this.data('orig'))\n    }\n  }\n\n  $(elem).click(function() {\n    handleChange.bind(this)()\n  })\n\n  if(all) {\n    $(all).click(function(e) {\n      const $this = $(this)\n      $this.data('on', !$this.data('on'))\n      $this.data('orig', $this.data('orig') || $this.html())\n      $this.html($this.data('on') ? $this.data('alttext') : $this.data('orig'))\n      $(elem).each(function() {\n        handleChange.bind(this)()\n      })\n    })\n  }\n}\n\nmodule.exports = cutoff\n","var destroyPage = function( wrapper, dir ){\n  var prev = wrapper.find( '.page:eq(0)' );\n  if( !IGNOREDIR ){\n    prev.css( {\n      'position': 'absolute',\n      'top '  : wrapper.offset().top,\n      'left'  : wrapper.offset().left,\n      'width' : wrapper.width()\n    } );\n    prev.addClass( 'pageTrans pageTrans--'+dir );\n    wrapper.css( 'min-height', wrapper.height() );\n    setTimeout( function(){\n      prev.remove();\n    }, TRANSITIONTIME );\n  } else {\n    prev.remove();\n  }\n}\n\nmodule.exports = destroyPage;\n","var eqHeight = function( target, cb ){\n  var height = 0;\n  var callback = cb || false;\n  var eq = function(){\n    height = 0;\n    $(target).css( 'height', '' );\n    $(target).each( function(){\n      var _height = $(this).height();\n\n      if( _height > height ) height = _height;\n\n      if( callback ) callback();\n    } );\n\n    $( target ).each( function(){\n      $(this).css( 'height', height );\n    } )\n  };\n\n  eq();\n  $( window ).resize( eq );\n\n}\n\nmodule.exports = eqHeight;\n","const getNodeFromTimestamp = () => {\n  if(window.location.hash){\n    const hash = window.location.hash\n    const match_id = hash.match(/\\#(\\d*)/)\n    if(match_id && match_id[1].length){\n      if($('[data-start=\"'+match_id[1]+'\"]').length){\n        return $('[data-start=\"'+match_id[1]+'\"]')\n      }\n    }\n  }\n  return false\n}\n\nmodule.exports = getNodeFromTimestamp\n","var getUrlWithNoHash = function(){\n  return window.location.href.split('#')[0];\n}\n\nmodule.exports = getUrlWithNoHash;\n","const respImg = require( './respImg' )\nconst escapeRegex = require('escape-string-regexp')\n\nconst highlightSuppCont = (nodes, subnodes, highlight) => {\n  if(!highlight) return\n  const HIGHLIGHT = new RegExp(`(${escapeRegex(highlight || '')})`, 'ig')\n  $(nodes).each(function(){\n    console.log(this)\n    const $subnodes = $(this).find(subnodes)\n    let isMatchAll = false\n    $subnodes.each(function(){\n      const text = $(this).attr('data-suppcont')\n      const isMatch = text.match(HIGHLIGHT)\n      if(isMatch) {\n        isMatchAll = true\n        $(this).html(text.replace(HIGHLIGHT, '<span class=\"transcript-highlight\">$1</span>'))\n      } else {\n        $(this).html(text)\n      }\n    })\n\n    if(isMatchAll){\n      $(this).addClass('expand')\n      $(this).find('[data-action=\"close\"] use').attr('xlink:href', '#contract')\n      const $img = $(this).find('.respImg-defer')\n      respImg.load($img)\n    } else {\n      $(this).removeClass('expand')\n      $(this).find('[data-action=\"close\"] use')\n      .attr( 'xlink:href', '#expand')\n    }\n  })\n\n}\n\nmodule.exports = highlightSuppCont\n","const escapeRegex = require('escape-string-regexp')\n\nconst highlightTranscript = (transcript, selector, highlight) => {\n  highlight = highlight && escapeRegex(highlight)\n  const nodes = transcript.find(selector)\n\n  $(nodes).each(function(){\n    const text = $(this).attr('data-node')\n    const html = $(this).html()\n\n    if(!highlight){\n      $(this).html(text)\n      return\n    }\n\n    const replaced = text.replace(\n      new RegExp(`(${highlight})`, 'ig'),\n      '<span class=\"transcript-highlight\">$1</span>'\n    )\n\n    // prevent unnecessary DOM mutations\n    if(replaced === text){\n      $(this).html(text)\n      return\n    }\n\n    if(replaced === html){\n      return\n    }\n\n    $(this).html(replaced)\n  })\n\n}\n\nmodule.exports = highlightTranscript\n","const getUrlWithNoHash = require('./getUrlWithNoHash')\nconst sharer = require('./sharer')\n\nconst highlighter = (target) => {\n  const makePopup = (url, title, text, style, className, isChangingFromSelection) => {\n    const shareLinks = sharer(url, title, text, {\n      clipboardText: `${text}\\n${url}`,\n      copyText: 'Selected text plus link copied to clipboard!'\n    })\n\n    const $markup = $(`\n      <span class=\"socialPopup ${className}\" style=\"${style}\">\n        ${shareLinks.render}\n      </span>\n    `)\n\n    const $popup = $('body').find('.socialPopup')\n\n    if($popup.length > 0) {\n      $popup.replaceWith($markup)\n      shareLinks.attachHandlers()\n    }\n    else {\n      $('body').append($markup)\n      shareLinks.attachHandlers()\n    }\n\n    $('.socialPopup').on('mousedown touchstart', (e) => {\n      window.SOCIAL_POPUP_SHOULD_BE_REMOVED = false\n      setTimeout(() => {\n        window.SOCIAL_POPUP_SHOULD_BE_REMOVED = true\n      }, 100)\n    })\n\n    if(isChangingFromSelection) return\n    setTimeout(() => {\n      window.SOCIAL_POPUP_SHOULD_BE_REMOVED = true\n    }, 300)\n  }\n\n  const isInverse = (selection) => {\n    const range = selection.getRangeAt(0)\n    const rects = range.getClientRects()\n    const offsetBottom = (rects[rects.length-1].bottom) // bottom of last element\n    const windowHeight = $(window).height()\n    return offsetBottom > windowHeight\n  }\n\n  const getLeft = (selection) => {\n    const range = selection.getRangeAt(0)\n    const rects = range.getClientRects()\n    if(rects.length) return (rects[0].left + rects[0].right) / 2\n  }\n\n  const getTop = (selection) => {\n    if(window.IS_TOUCH_SCREEN) { // Always display small screens below to account for device UI\n      const range = selection.getRangeAt(0)\n      const rects = range.getClientRects()\n      if(rects.length) return rects[rects.length - 1].bottom - 30 + $(window).scrollTop()\n    }\n    else {\n      const range = selection.getRangeAt(0)\n      const rects = range.getClientRects()\n      const mid = (rects[0].top + rects[0].bottom) / 2\n\n      if(isInverse(selection)) { // Below content\n        const offsetBottom = (rects[rects.length-1].bottom - 30) // bottom of last element\n        return offsetBottom + $(window).scrollTop()\n      }\n      else { // Above content\n        return mid + $(window).scrollTop()\n      }\n    }\n  }\n\n  const handleChange = (e, isChangingFromSelection) => {\n    let url = getUrlWithNoHash()\n    const selection = document.getSelection()\n    const text = selection.toString()\n\n    if(text.length === 0) {\n      //$('.socialPopup').remove()\n      return\n    }\n\n    const sanitized = text.replace('\"', '&quot;')\n    const { anchorNode, focusNode } = selection\n\n    const $anchor = $(anchorNode.parentNode)\n    const $focus = $(focusNode.parentNode)\n    const $first = $anchor.index() < $focus.index() ? $anchor : $focus\n\n    if(!$focus.parents(target).length) { // Is focused element in container?\n      return\n    }\n\n    if(!$anchor.length || !$focus.length) return\n\n    console.log($anchor, $focus)\n\n    if(\n      $anchor.data('highlight') ||\n      $focus.data('highlight')\n    ) {\n      if($first.attr('data-highlight') === 'next') {\n        const $next = $first.next()\n        const timestamp = $next.attr('data-start') || $next.attr('data-timestamp')\n        url = `${url}#${timestamp}`\n        window.TEMPURL = url\n      }\n      else if($focus.attr('data-highlight') === 'next') {\n        const $next = $focus.next()\n        const timestamp = $next.attr('data-start') || $next.attr('data-timestamp')\n        url = `${url}#${timestamp}`\n        window.TEMPURL = url\n      }\n      else if($first.attr('data-highlight') === 'parent') {\n        const $next = $first.parent()\n        const timestamp = $next.attr('data-start') || $next.attr('data-timestamp')\n        url = `${url}#${timestamp}`\n        window.TEMPURL = url\n      }\n      else if($focus.attr('data-highlight') === 'parent') {\n        const $next = $focus.parent()\n        const timestamp = $next.attr('data-start') || $next.attr('data-timestamp')\n        url = `${url}#${timestamp}`\n        window.TEMPURL = url\n      }\n      else if(\n        $first.attr('data-highlight') === 'transcript' ||\n        $focus.attr('data-highlight') === 'transcript'\n      ) {\n        const timestamp = $first.attr('data-start') ||\n          $first.attr('data-timestamp') ||\n          $focus.attr('data-start') ||\n          $focus.attr('data-timestamp')\n        url = `${url}#${timestamp}`\n        window.TEMPURL = url\n      }\n      else {\n        url = window.TEMPURL\n      }\n    }\n\n\n    const style = `\n      position: absolute;\n      left: ${getLeft(selection)|0}px;\n      top: ${getTop(selection)|0}px;\n    `\n\n    let className = ''\n    if(isInverse(selection) || window.IS_TOUCH_SCREEN) {\n      className = 'socialPopup--inverse'\n    }\n\n    window.POPUP = setTimeout(() => {\n      makePopup(url, document.title, text, style, className, isChangingFromSelection)\n    }, 250)\n  }\n\n  $(document).on('selectionchange', (e) => handleChange(e, true))\n  $(target).on('mouseup touchend', (e) => handleChange(e, false))\n}\n\nmodule.exports = highlighter\n","var icon = function( id, className ){\n  var className = className || false;\n  if( id === 'condense' || id === 'explode' ){ // handle mis-scaled svgs\n    return '<svg class=\"icon' + ( className ? ' icon--'+className : '' ) +'\" viewBox=\"0 0 72 72\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#'+id+'\"></use></svg>';\n  }\n  return '<svg class=\"icon' + ( className ? ' icon--'+className : '' ) +'\" viewBox=\"0 0 128 128\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#'+id+'\"></use></svg>';\n}\n\nmodule.exports = icon;\n","const internalLink = function({\n  type,\n  id,\n  link\n}, inner){\n  type = type + (type === 'interactive' ? '' : 's') // TODO: Clean this up\n  return `\n    <a class=\"js-internalLink\"\n      data-type=${type}\n      data-id=\"${id}\"\n      href=${link}\n    >${inner}</a>\n  `\n}\n\nmodule.exports = internalLink;\n","const cachebust = require('./cachebust')\n\nconst respBg = function(elem){\n  const id = $(elem).attr('data-id')\n  const set = $(elem).attr('data-set')\n\n  const getSize = function(){\n    const w = $(window).width()\n    if(w >= 1200) return 'lg'\n    if(w >= 992) return 'md'\n    if(w >= 768) return 'sm'\n    return 'xs'\n  }\n\n  const url = `/wp-json/v1/images/${id}/${set}_${getSize()}${cachebust()}`\n  console.log(url)\n\n  $.get(url, (data) => {\n    console.log(data)\n    $(elem).css('background-image', 'url('+data.requested+')')\n  })\n\n}\n\nmodule.exports = respBg\n","window.featherlight = require( './thirdparty/featherlight.min' );\nwindow.featherlightGallery = require( './thirdparty/featherlight.gallery.min.js' );\n\nvar cachebust = require('./cachebust');\nvar internalLink = require( './internalLink' );\n\nvar respImg = {\n\n  /*\n   * info {\n   *  alt\n   *  caption\n   *  group\n   * }\n   */\n  markup: function( id, size, className, info, hasExtCredit, link ){\n    if( info ){\n      var alt = info.alt || false;\n      var caption = info.caption || false;\n      var group = info.group || false;\n    }\n    var img = '';\n    img += '<img src=\"#\" class=\"'+className+'\" ';\n    img += 'data-size=\"'+size+'\" ';\n    img += 'data-src=\"'+id+'\" ';\n    if( alt )     img += 'alt=\"'+alt+'\" ';\n    if( caption ) img += 'data-caption=\"'+caption+'\" ';\n    if( group )   img += 'data-group=\"'+group+'\" ';\n    if( hasExtCredit ) img += 'data-showcredit';\n    img += ' />';\n    if( link ) return internalLink( link, img );\n    return img;\n  },\n\n  load: function( className, cb ){\n    var callback = cb || false;\n    var images = $( className );\n\n    var creditMarkup = function( info, className ){\n      var credit = '';\n      if( info.author && info.author.length ){\n        credit += '<span class=\"'+className+'\">Photo credit: ';\n        if( info.src.length ){\n          credit += '<a href=\"'+info.src+'\">'\n        }\n        credit += info.author;\n        if( info.src.length ){\n          credit += '</a>'\n        }\n        credit += '</span>';\n        return credit;\n      } else {\n        return '';\n      }\n    }\n\n    images.each( function( i ){\n      var src = $(this).attr( 'data-src' );\n      var size = $(this).attr( 'data-size' );\n      $.get( '/wp-json/v1/images/'+src+'/'+size+cachebust(), function( data ){\n\n        // data returns an object with four properties:\n        // requested = resized img\n        // original = full size img\n        // caption = img caption\n        // creds { name, url }\n        var temp = new Image(); // empty img\n\n        temp.onload = function(){ //when empty img has loaded, load img for actual element\n\n          $(this).attr( 'src', data.requested );\n          $(this).attr( 'alt', data.alt );\n          if( typeof $(this).attr( 'data-showcredit' ) !== 'undefined' ){\n            //if( !$( '.respImg-credit' ).length )\n            $(this).after( creditMarkup( data.credit, 'respImg-credit' ) );\n          }\n\n          // add loaded classes\n          if( typeof className === 'string' ){\n            $(this).addClass( className.substr(1)+'--loaded');\n          } else { // if we're passed a jquery wrapped object\n            var selector = className.selector;\n            var selectorSplit = selector.split( ' ' );\n            selector = selectorSplit[selectorSplit.length - 1 ];\n            $(this).addClass( selector.substr(1)+'--loaded');\n          }\n\n          // run callback only for last result\n          if( images.length - 1 === i && callback ) callback();\n\n        }.bind(this);\n\n        //load img for empty img\n        temp.src = data.requested;\n\n        // set lightbox target for full size img\n        $(this).attr( 'data-img', data.original );\n\n        // opts for featherlight\n        var opts = {\n          targetAttr: 'data-img',\n          afterContent: function(){\n            // can't pass captions through featherlight so we do this instead\n            $( '.img-caption' ).remove();\n            var lightbox = $( '.featherlight-content' );\n            var src = $( '.featherlight-image' ).attr( 'src' );\n            var caption = $( '[data-img=\"'+src+'\"]' ).attr( 'data-caption' ) || data.caption || false;\n            if( caption ){\n              var credit = '';\n              if( data.credit.author.length ){\n                credit = creditMarkup( data.credit, 'img-credit' );\n              }\n              lightbox.append( '<div class=\"img-caption\">'+caption+credit+'</div>' );\n            }\n            //prevent body scrolling\n            $( 'body' ).css( 'overflow', 'hidden' );\n          },\n          afterClose: function(){\n            //restore body scrolling\n            $( 'body' ).css( 'overflow', '' );\n          }\n        };\n\n        if( $(this).parent().hasClass('js-internalLink') ){\n          return;\n        } else if( !$(this).attr( 'data-group' ) ){\n          $(this).featherlight( opts );\n        } else {\n          $( '[data-group=\"'+$(this).attr( 'data-group' )+'\"]' ).featherlightGallery( opts );\n        }\n\n      }.bind(this) );\n    } );\n  }\n\n}\n\nmodule.exports = respImg;\n","const icon = require( './icon' );\n\nconst scrollIndicator = (ref) => {\n  const render = `<div class=\"scrollIndicator\">${icon('down', 'scrollIndicator')}</div>`\n\n  const toggle = (elem) => {\n    if(!$(elem).length) return\n    if($(window).scrollTop() + $(window).height() > $(elem).offset().top + 33) {\n      $('.scrollIndicator').addClass('scrollIndicator--hidden')\n    }\n    else {\n      $('.scrollIndicator').removeClass('scrollIndicator--hidden')\n    }\n  }\n\n  const attachHandlers = () => {\n    toggle(ref)\n    $(window).on('scroll resize', () => { toggle(ref) })\n    $('body').unbind('click.scrollIndicator').on('click.scrollIndicator', '.scrollIndicator', () => {\n      const scrollTop = $(ref).offset().top - 33\n      $('body,html').animate({ scrollTop }, 500)\n    })\n  }\n\n  return {\n    render,\n    attachHandlers: () => { attachHandlers() }\n  }\n}\n\nmodule.exports = scrollIndicator\n","const Clipboard = require('clipboard')\nconst fb = require('facebook-share-link')\nconst shortid = require('shortid')\nconst icon = require('./icon')\n\nconst sharer = (\n  url = window.location.href,\n  title,\n  quote,\n  {\n    clipboardText,\n    copyText\n  } = {}\n) => {\n  const isFbProvided = !!window.FB_APP_ID\n  const id = shortid.generate()\n\n  const options = {\n    url,\n    title,\n    quote,\n    clipboardText: clipboardText || url,\n    window: `\n      height: 450,\n      width: 550,\n      top=${$(window).height / 2 - 275},\n      left=${$(window).width() / 2 - 225},\n      toolbar=0,\n      location=0,\n      menubar=0\n      directories=0,\n      scrollbars=0\n    `\n  }\n\n  const render = `\n    <ul class=\"social social--inline\" data-share-id=${id}>\n      ${isFbProvided ? `<li data-soc=\"fb\" tabindex=\"0\"><span>Share on Facebook</span>${icon('facebook', 'social')}</li>` : ''}\n      <li data-soc=\"tw\" tabindex=\"0\"><span>Share on Twitter</span>${icon('twitter', 'social')}</li>\n      <li data-clipboard-text=\"${options.clipboardText}\" data-soc=\"link\" tabindex=\"0\"><span>Share on URL</span>${icon('link', 'social')}</li>\n    </ul>\n  `\n\n  const attachClipboardHandlers = (clipboard) => {\n    clipboard.on('success', () => {\n      $('body').append(`\n        <div class=\"socialCopy socialCopy--success\" style=\"position: fixed; right: 1em; bottom: 1em;\">\n          ${copyText || 'Link copied to clipboard!'}\n        </div>\n      `)\n      setTimeout(() => {\n        $('.socialCopy').remove()\n      }, 2000)\n    })\n  }\n\n  const attachHandlers = (specificId, specificOptions) => {\n    const _id = specificId || id\n    const _options = specificOptions || options\n\n    const clipboard = new Clipboard(`[data-share-id=\"${_id}\"] [data-soc=\"link\"]`)\n\n    attachClipboardHandlers(clipboard)\n\n    $('body').on('click', `[data-share-id=\"${_id}\"] li`, function(e) {\n      console.log('click')\n      const type = $(this).data('soc')\n      let link = ''\n      switch(type) {\n        case \"fb\":\n          if(!isFbProvided) break\n          const share = fb(window.FB_APP_ID)\n          link = share({\n            href: _options.url,\n            display: 'popup',\n            quote: _options.quote\n          })\n          window.open(link, 'fbShareWindow', _options.window)\n          return\n        case \"tw\":\n          const url = encodeURIComponent(_options.url)\n          const quote = encodeURIComponent(_options.quote)\n          link = `http://twitter.com/intent/tweet?url=${url}&text=${quote}`\n          window.open(link, 'twShareWinow', _options.window)\n          return\n        case \"link\":\n          e.preventDefault()\n          break\n      }\n    })\n  }\n\n  return {\n    render,\n    attachHandlers: (id, options) => { attachHandlers(id, options) },\n    id,\n    options\n  }\n}\n\nmodule.exports = sharer\n","var stickyHeader = function( page, elem, target ){\n\n  const bottom =  $(target).offset().top + $(target).height()\n  const height = $(elem).height();\n  let unsticky = true; // toggled on/off and checked before manipulating DOM\n  const hasVideo = $( 'video' ).length;\n  let oldTop = 0 // cache value so we can tell if we scrolled up/down\n\n  const handleOn = function(){\n    $(elem).addClass( elem.slice(1) + '--sticky' );\n    page.css( 'padding-top', height );\n    unsticky = false;\n    setTimeout( function(){\n      if( typeof AP !== 'undefined' ) AP.refreshControls();\n    }, 500 ); //offset by css transition time\n  }\n\n  const handleOff = function(){\n    $(elem).removeClass(elem.slice(1) + '--sticky');\n    page.css( 'padding-top', '' );\n    unsticky = true;\n    setTimeout( function(){\n      if( typeof AP !== 'undefined' ) AP.refreshControls();\n    }, 500 ); //offset by css transition time\n  }\n\n  const handler = function(){\n    // if( $(window).width() <= 568 || !hasVideo ){\n    if(!hasVideo){\n      handleOff()\n      return\n    }\n    var top = $(window).scrollTop()\n    if( top > bottom && unsticky ){\n      handleOn()\n    } else if( top < bottom && !unsticky ) {\n      handleOff()\n    }\n\n    if(top < oldTop) {\n      $(elem).addClass( elem.slice(1) + '--justScrolledUp' );\n    } else {\n      $(elem).removeClass( elem.slice(1) + '--justScrolledUp' );\n    }\n\n    oldTop = top\n  }\n\n  $(window).on( 'scroll resize orientationchange', handler );\n\n  $(elem).find( '[data-action=\"top\"]').click( function(){\n    $( 'body, html' ).animate( {\n      scrollTop: 0\n    }, TRANSITIONTIME );\n  });\n\n  $(elem).find( '[data-action=\"toggle\"] select').change( function(){\n    var size = $(this).val().toLowerCase();\n    var selector = $(this).parent().attr( 'data-target' )\n    var target = $( selector );\n    target.removeClass();\n    target.addClass( selector.slice(1) + ' ' + selector.slice(1) + '--' + size );\n    setTimeout( function(){\n      if( typeof AP !== 'undefined' ) AP.refreshControls();\n    }, 500 ); //offset by css transition time\n  } );\n\n  // Hack to allow pausing for small video\n  $(elem).on('click', '.able-fake-pause', function() {\n    if(typeof AP == 'undefined') return\n    if(AP.playing) {\n      AP.pauseMedia()\n    }\n    else {\n      AP.playMedia()\n    }\n  })\n\n};\n\nmodule.exports = stickyHeader;\n","const sublink = (elem) => {  \n  const handleOn = function() {\n    console.log('handleOn')\n    const $link = $(this).closest('a')\n    const sublink = $(this).attr('data-sublink')\n    const href = $link.data('href') || $link.attr('href') // Get original href\n    $link.data('href', href) // Cache original href\n    $link.attr('href', `${href}#${sublink}`) // Set new href\n  }\n\n  const handleOff = function() {\n    const $link = $(this).closest('a')\n    $link.attr('href', $link.data('href')) // Restore original href\n  }\n\n  const pseudoClick = function(e) {\n    console.log(e)\n    if(e.which !== 13) return\n    console.log('pseudoclick')\n    $(this).closest('a').trigger('click')\n  }\n\n\n  $(elem).hover(handleOn, handleOff)\n    .focus(handleOn)\n    .blur(handleOff)\n    .keypress(pseudoClick)\n}\n\nmodule.exports = sublink\n","window.Cookies = require('js-cookie')\nconst cachebust  = require('./cachebust')\nconst icon       = require('./icon')\nconst getNodeFromTimestamp = require('./getNodeFromTimestamp')\n\nconst syncAblePlayer = function(transcript, id, supp){\n  $('body').removeClass('hasAblePlayer')\n  $('video').each(function (index, element) {\n    $('body').addClass('hasAblePlayer')\n    if ($(element).data('able-player') !== undefined) {\n      window.AP = new AblePlayer($(this), $(element))\n\n      // transform transcript into useable format\n      const sections = transcript.filter(node => node.type === 'section_break')\n\n      const headings = sections.filter(node => !node.note_chapter).map(node => {\n        return {\n          text: node.contents,\n          start: node.start\n        }\n      })\n\n      const chapters = sections.filter(node => node.note_chapter).map(node => {\n        return {\n          text: node.contents,\n          start: node.start\n        }\n      })\n\n      const body = transcript.filter(node => {\n        return (\n          node.type !== 'paragraph_break' &&\n          node.type !== 'description'\n       )\n      }).map(node => {\n        return {\n          text: node.contents,\n          start: node.start\n        }\n      })\n\n      const suppContent = Object.entries(supp.timestamps).map(node => {\n        const values = ['content', 'blockquote', 'attribution', 'title', 'description', 'link_text']\n        const pieces = node[1]\n        return {\n          text: pieces.reduce((all, piece) => {\n            return all + values.reduce((acc, value) => {\n              if(piece.data[value]){\n                acc += piece.data[value]\n              }\n              return acc\n            }, '')\n          }, ''),\n          start: parseInt(node[0])\n        }\n      })\n\n      // hacky way to wait until youtube iframe is initialized before running add dot code\n      const tryYouTube = setInterval(() => {\n        const youTubePlayer = AP.youTubePlayer\n        if(youTubePlayer && youTubePlayer.getDuration && !!youTubePlayer.getDuration()){\n          const duration = youTubePlayer.getDuration()\n\n          ableplayerAddDots(AP, headings, {\n            duration,\n            format:  'array',\n            color:   window.HEADINGOPTS.COLOR   || '#fff',\n            width:   window.HEADINGOPTS.WIDTH   || 1,\n            height:  window.HEADINGOPTS.HEIGHT  || false,\n            display: window.HEADINGOPTS.DISPLAY || 'line',\n          })\n          .then(player => {\n            clearInterval(tryYouTube)\n            ableplayerAddDots(player, chapters, {\n              duration,\n              format: 'array',\n              color:   window.CHAPTEROPTS.COLOR   || '#fff',\n              width:   window.CHAPTEROPTS.WIDTH   || 1,\n              height:  window.CHAPTEROPTS.HEIGHT  || false,\n              display: window.CHAPTEROPTS.DISPLAY || 'line',\n            })\n            .then(player => {\n              ableplayerSearch(player, '#video-search', body, {\n                duration,\n                color:   window.SEARCHOPTS.COLOR   || '#fff',\n                width:   window.SEARCHOPTS.WIDTH   || 1,\n                height:  window.SEARCHOPTS.HEIGHT  || false,\n                display: window.SEARCHOPTS.DISPLAY || 'line',\n              }).then(player => {\n                ableplayerSearch(player, '#video-search', suppContent, {\n                  duration,\n                  color:   window.SUPP_CONT_OPTS.COLOR   || '#fff',\n                  width:   window.SUPP_CONT_OPTS.WIDTH   || 1,\n                  height:  window.SUPP_CONT_OPTS.HEIGHT  || false,\n                  display: window.SUPP_CONT_OPTS.DISPLAY || 'line',\n                }).then(player => {\n                  // Hack to trigger search\n                  $('#video-search').val(window.SEARCHTERM).trigger('keyup')\n                  $.ajax({\n                    url: `/wp-json/v1/interviews/${id}/description` + cachebust(),\n                    success: data => {\n                      const { description } = data\n                      if(!description.length) return\n                      ableplayerSearch(player, '#video-search', description, {\n                        duration,\n                        color:   window.SEARCHOPTS.COLOR   || '#fff',\n                        width:   window.SEARCHOPTS.WIDTH   || 1,\n                        height:  window.SEARCHOPTS.HEIGHT  || false,\n                        display: window.SEARCHOPTS.DISPLAY || 'line',\n                      }).then(player => {\n                      }).catch(err => console.log(err))\n                    }\n                  })\n                }).catch(err => console.log(err))\n              }).catch(err => console.log(err))\n            }).catch(err => console.log(err))\n          }).catch(err => console.log(err))\n\n        }\n      }, 200)\n\n      // disable closed captioning\n      var tryClick = setInterval(function(){\n        if(typeof AP.initializing === 'undefined') return\n        var captions = $('.able-wrapper .icon-captions')\n        var isClicked = false\n        captions.on('click', function(){\n          clearInterval(tryClick)\n          isClicked = true\n        })\n        if(!isClicked) captions.trigger('click')\n      }, 200)\n\n      var inViewport = 0 // 0 for in viewport, 1 for below, -1 for above\n      JUMPTOACTIVE = setInterval(function(){\n        var current = $('.able-highlight')\n        if(!current.length) return\n\n        var currentPos = {\n          top: current.offset().top,\n          bottom: current.offset().top + current.height()\n        }\n\n        var windowPos = {\n          top: $(window).scrollTop(),\n          bottom: $(window).scrollTop() + $(window).height()\n        }\n\n        if(currentPos.top > windowPos.bottom){\n          var _inViewport = 1\n        } else if(currentPos.bottom < windowPos.top){\n          var _inViewport = -1\n        } else {\n          var _inViewport = 0\n          $('.transcript-jumpToActive').remove()\n        }\n\n        if(_inViewport !== inViewport && _inViewport !== 0){\n          $('.transcript-jumpToActive').remove()\n          var jumpToActive = $('<button data-action=\"jumpToActive\" class=\"transcript-jumpToActive\">'+icon((_inViewport === 1 ? 'down' : 'up'), 'jump') +'Jump to active section</button>')\n          if(_inViewport === -1){\n            jumpToActive.css({\n              top: $(window).width() <= 568 ? 0 : $('.contentHeaderOuter').outerHeight(),\n              bottom: 'auto'\n            })\n          }\n          $('body').append(jumpToActive)\n        }\n        inViewport = _inViewport\n\n      }, 1000)\n    }\n\n    $('body').on('click', '[data-action=\"jumpToActive\"]', function(){\n      $(this).hide()\n      $('body,html').animate({\n        scrollTop: (function(){\n          const offset = $('.contentHeaderOuter').outerHeight() + 32\n          return $('.able-highlight').offset().top - offset\n        })()\n      }, TRANSITIONTIME)\n    })\n\n  })\n\n  if(getNodeFromTimestamp()){\n    const timestamp = getNodeFromTimestamp()\n    const offset = $('.contentHeaderOuter').outerHeight() + 32\n    setTimeout(() => {\n      $('body, html').scrollTop(timestamp.offset().top - offset)\n      timestamp.addClass('able-highlight')\n\n      // Hack to trigger play\n      const tryClick = setInterval(function(){\n        if(typeof AP.initializing === 'undefined') return\n        timestamp.trigger('click')\n        timestamp.on('click', function(){\n          clearInterval(tryClick)\n        })\n      }, 200)\n    }, 300)\n  }\n\n  $('.able-wrapper').addClass('able-wrapper--loaded')\n\n}\n\nmodule.exports = syncAblePlayer\n","var respImg = require( './respImg' );\nvar icon = require( './icon' );\n\n//vertically align supp cont with transcript and set appropriate handlers\nvar syncTimestamps = function( supp, node, transcript ){\n\n  var expand = function( target ){\n    if( $(window).width() > 568 ){ // from bootstrap\n      // $( '[data-action=\"expand\"]' ).removeClass( 'expand' )\n      //   .find( '[data-action=\"close\"] use' ).attr( 'xlink:href', '#expand' );\n      $('.suppCont-single').attr('style', '')\n      target.addClass( 'expand' );\n      target.find( '[data-action=\"close\"] use' ).attr( 'xlink:href', '#contract');\n      var img = target.find( '.respImg-defer' );\n      respImg.load( img );\n    } else {\n      var innerContent = $( target ).find( '.suppCont-content' ).html();\n      var type = $( target ).find( '.icon' )[0].outerHTML;\n      $.featherlight( {\n        html: '<div class=\"suppCont-lightbox\"><div class=\"suppCont-content\">'+type+innerContent+'</div></div>',\n        afterContent: function(){\n          $( 'body' ).css( 'overflow', 'hidden' );\n          var img = $( '.featherlight-content' ).find( '.respImg-defer' );\n          respImg.load( img );\n          $( '.featherlight-close-icon' ).html( icon( 'contract', 'suppContent-lightboxClose' )  );\n        },\n        afterClose: function(){\n          //restore body scrolling\n          $( 'body' ).css( 'overflow', '' );\n        }\n      } );\n    }\n  }\n\n  var expandMultiple = function(target){\n    if($(window).width() <= 568) return;\n    target.addClass('expand');\n    target.find( '[data-action=\"close\"] use' ).attr( 'xlink:href', '#contract');\n    var img = target.find('.respImg-defer');\n    respImg.load(img);\n  }\n\n  expandMultiple($('[data-opendefault=\"true\"]'));\n\n  var position = function(){\n    var lastBottom = 0;\n    $(supp).each( function(i){\n\n      // assign match data attribute if not already set\n      $(this).data( 'match', $(this).data('match') || (function(){\n        return $( node+'[data-start=\"' + $(this).attr( 'data-timestamp' ) + '\"]' )\n      }.bind(this))() );\n\n      var match = $(this).data( 'match' );\n      if( !match.length ) return;\n      var matchPos = $(match).offset().top;\n\n\n      if(i > 0){\n        var newTop = matchPos - lastBottom;\n        newTop = newTop > 0 ? newTop : 0;\n      } else {\n        var transcriptTop = $(transcript).offset().top;\n        var newTop = matchPos - transcriptTop;\n      }\n\n      $(this).css( {\n        marginTop: newTop,\n        marginBottom: '70px',\n        transform: 'translateY(-15px)',\n        left: 0,\n        right: 0\n      } );\n\n      lastBottom = $(this).offset().top + $(this).height();\n\n      $(this).on( 'mouseenter', function(){\n        $(match).addClass( node.slice(1)+'--suppHover' );\n      } ).on( 'mouseleave', function(){\n        $(match).removeClass( node.slice(1)+'--suppHover' );\n      } );\n\n      $(match).on( 'mouseenter', function(){\n        $(this).addClass( supp.slice(1)+'--suppHover' );\n      }.bind(this) ).on( 'mouseleave', function(){\n        $(this).removeClass( supp.slice(1)+'--suppHover' );\n      }.bind(this) );\n\n      var shouldAdvance = false;\n      $(match).blur( function(){\n        var next = $(match).next();\n        var item = $(this).find( 'li:eq(0)' )\n        var lastChild = item.find('li:last-of-type');\n        shouldAdvance = true;\n        item.focus();\n        lastChild.blur( function(){\n          if( shouldAdvance ){\n            next.focus();\n          }\n          shouldAdvance = false;\n        } );\n      }.bind(this) )\n    } );\n  };\n\n  position();\n  $( window ).resize( position );\n\n  if( window.location.hash ){\n    var hash = window.location.hash;\n    var match_id = hash.match(/\\#sc\\-(\\d*)/);\n    if( match_id ){\n      var match = $( '[data-supp=\"'+match_id[1]+'\"]' );\n      expand( match );\n      match.parent().data('match').addClass( 'able-highlight' );\n      var offset = $( '.contentHeaderOuter' ).height() + 16;\n      $( 'body, html' ).scrollTop( match.offset().top - offset );\n    }\n  }\n\n  $('body').on( 'click', '.expand [data-action=\"close\"]', function(e){\n    e.stopPropagation();\n    $(this).closest( '[data-action=\"expand\"] ').removeClass( 'expand' );\n    $(this).find( 'use' ).attr( 'xlink:href', '#expand' );\n    $('.suppCont-single').attr('style', '')\n    setTimeout(position, 500)\n  } );\n\n  $('body').on( 'click', '.expand [data-action=\"close-type\"]', function(e){\n    e.stopPropagation();\n    $(this).closest( '[data-action=\"expand\"] ').removeClass( 'expand' );\n    $('.suppCont-single').attr('style', '')\n    setTimeout(position, 500)\n  } );\n\n  $( 'body' ).on( 'click', '[data-action=\"expand\"]', function(){\n    const target = $(this)\n    expand(target);\n    setTimeout(position, 500)\n  } );\n\n}\n\nmodule.exports = syncTimestamps;\n","/**\n * Featherlight Gallery – an extension for the ultra slim jQuery lightbox\n * Version 1.5.0 - http://noelboss.github.io/featherlight/\n *\n * Copyright 2016, Noël Raoul Bossart (http://www.noelboss.com)\n * MIT Licensed.\n**/!function(a){\"use strict\";function b(c,d){if(!(this instanceof b)){var e=new b(a.extend({$source:c,$currentTarget:c.first()},d));return e.open(),e}a.featherlight.apply(this,arguments),this.chainCallbacks(h)}var c=function(a){window.console&&window.console.warn&&window.console.warn(\"FeatherlightGallery: \"+a)};if(\"undefined\"==typeof a)return c(\"Too much lightness, Featherlight needs jQuery.\");if(!a.featherlight)return c(\"Load the featherlight plugin before the gallery plugin\");var d=\"ontouchstart\"in window||window.DocumentTouch&&document instanceof DocumentTouch,e=a.event&&a.event.special.swipeleft&&a,f=window.Hammer&&function(a){var b=new window.Hammer.Manager(a[0]);return b.add(new window.Hammer.Swipe),b},g=d&&(e||f);d&&!g&&c(\"No compatible swipe library detected; one must be included before featherlightGallery for swipe motions to navigate the galleries.\");var h={afterClose:function(a,b){var c=this;return c.$instance.off(\"next.\"+c.namespace+\" previous.\"+c.namespace),c._swiper&&(c._swiper.off(\"swipeleft\",c._swipeleft).off(\"swiperight\",c._swiperight),c._swiper=null),a(b)},beforeOpen:function(a,b){var c=this;return c.$instance.on(\"next.\"+c.namespace+\" previous.\"+c.namespace,function(a){var b=\"next\"===a.type?1:-1;c.navigateTo(c.currentNavigation()+b)}),g?c._swiper=g(c.$instance).on(\"swipeleft\",c._swipeleft=function(){c.$instance.trigger(\"next\")}).on(\"swiperight\",c._swiperight=function(){c.$instance.trigger(\"previous\")}):c.$instance.find(\".\"+c.namespace+\"-content\").append(c.createNavigation(\"previous\")).append(c.createNavigation(\"next\")),a(b)},beforeContent:function(a,b){var c=this.currentNavigation(),d=this.slides().length;return this.$instance.toggleClass(this.namespace+\"-first-slide\",0===c).toggleClass(this.namespace+\"-last-slide\",c===d-1),a(b)},onKeyUp:function(a,b){var c={37:\"previous\",39:\"next\"}[b.keyCode];return c?(this.$instance.trigger(c),!1):a(b)}};a.featherlight.extend(b,{autoBind:\"[data-featherlight-gallery]\"}),a.extend(b.prototype,{previousIcon:\"&#9664;\",nextIcon:\"&#9654;\",galleryFadeIn:100,galleryFadeOut:300,slides:function(){return this.filter?this.$source.find(this.filter):this.$source},images:function(){return c(\"images is deprecated, please use slides instead\"),this.slides()},currentNavigation:function(){return this.slides().index(this.$currentTarget)},navigateTo:function(b){var c=this,d=c.slides(),e=d.length,f=c.$instance.find(\".\"+c.namespace+\"-inner\");return b=(b%e+e)%e,c.$currentTarget=d.eq(b),c.beforeContent(),a.when(c.getContent(),f.fadeTo(c.galleryFadeOut,.2)).always(function(a){c.setContent(a),c.afterContent(),a.fadeTo(c.galleryFadeIn,1)})},createNavigation:function(b){var c=this;return a('<span title=\"'+b+'\" class=\"'+this.namespace+\"-\"+b+'\"><span>'+this[b+\"Icon\"]+\"</span></span>\").click(function(){a(this).trigger(b+\".\"+c.namespace)})}}),a.featherlightGallery=b,a.fn.featherlightGallery=function(a){return b.attach(this,a)},a(document).ready(function(){b._onReady()})}(jQuery);\n","/**\n * Featherlight - ultra slim jQuery lightbox\n * Version 1.5.0 - http://noelboss.github.io/featherlight/\n *\n * Copyright 2016, Noël Raoul Bossart (http://www.noelboss.com)\n * MIT Licensed.\n**/\n!function(a){\"use strict\";function b(a,c){if(!(this instanceof b)){var d=new b(a,c);return d.open(),d}this.id=b.id++,this.setup(a,c),this.chainCallbacks(b._callbackChain)}if(\"undefined\"==typeof a)return void(\"console\"in window&&window.console.info(\"Too much lightness, Featherlight needs jQuery.\"));var c=[],d=function(b){return c=a.grep(c,function(a){return a!==b&&a.$instance.closest(\"body\").length>0})},e=function(a,b){var c={},d=new RegExp(\"^\"+b+\"([A-Z])(.*)\");for(var e in a){var f=e.match(d);if(f){var g=(f[1]+f[2].replace(/([A-Z])/g,\"-$1\")).toLowerCase();c[g]=a[e]}}return c},f={keyup:\"onKeyUp\",resize:\"onResize\"},g=function(c){a.each(b.opened().reverse(),function(){return c.isDefaultPrevented()||!1!==this[f[c.type]](c)?void 0:(c.preventDefault(),c.stopPropagation(),!1)})},h=function(c){if(c!==b._globalHandlerInstalled){b._globalHandlerInstalled=c;var d=a.map(f,function(a,c){return c+\".\"+b.prototype.namespace}).join(\" \");a(window)[c?\"on\":\"off\"](d,g)}};b.prototype={constructor:b,namespace:\"featherlight\",targetAttr:\"data-featherlight\",variant:null,resetCss:!1,background:null,openTrigger:\"click\",closeTrigger:\"click\",filter:null,root:\"body\",openSpeed:250,closeSpeed:250,closeOnClick:\"background\",closeOnEsc:!0,closeIcon:\"&#10005;\",loading:\"\",persist:!1,otherClose:null,beforeOpen:a.noop,beforeContent:a.noop,beforeClose:a.noop,afterOpen:a.noop,afterContent:a.noop,afterClose:a.noop,onKeyUp:a.noop,onResize:a.noop,type:null,contentFilters:[\"jquery\",\"image\",\"html\",\"ajax\",\"iframe\",\"text\"],setup:function(b,c){\"object\"!=typeof b||b instanceof a!=!1||c||(c=b,b=void 0);var d=a.extend(this,c,{target:b}),e=d.resetCss?d.namespace+\"-reset\":d.namespace,f=a(d.background||['<div class=\"'+e+\"-loading \"+e+'\">','<div class=\"'+e+'-content\">','<span class=\"'+e+\"-close-icon \"+d.namespace+'-close\">',d.closeIcon,\"</span>\",'<div class=\"'+d.namespace+'-inner\">'+d.loading+\"</div>\",\"</div>\",\"</div>\"].join(\"\")),g=\".\"+d.namespace+\"-close\"+(d.otherClose?\",\"+d.otherClose:\"\");return d.$instance=f.clone().addClass(d.variant),d.$instance.on(d.closeTrigger+\".\"+d.namespace,function(b){var c=a(b.target);(\"background\"===d.closeOnClick&&c.is(\".\"+d.namespace)||\"anywhere\"===d.closeOnClick||c.closest(g).length)&&(d.close(b),b.preventDefault())}),this},getContent:function(){if(this.persist!==!1&&this.$content)return this.$content;var b=this,c=this.constructor.contentFilters,d=function(a){return b.$currentTarget&&b.$currentTarget.attr(a)},e=d(b.targetAttr),f=b.target||e||\"\",g=c[b.type];if(!g&&f in c&&(g=c[f],f=b.target&&e),f=f||d(\"href\")||\"\",!g)for(var h in c)b[h]&&(g=c[h],f=b[h]);if(!g){var i=f;if(f=null,a.each(b.contentFilters,function(){return g=c[this],g.test&&(f=g.test(i)),!f&&g.regex&&i.match&&i.match(g.regex)&&(f=i),!f}),!f)return\"console\"in window&&window.console.error(\"Featherlight: no content filter found \"+(i?' for \"'+i+'\"':\" (no target specified)\")),!1}return g.process.call(b,f)},setContent:function(b){var c=this;return(b.is(\"iframe\")||a(\"iframe\",b).length>0)&&c.$instance.addClass(c.namespace+\"-iframe\"),c.$instance.removeClass(c.namespace+\"-loading\"),c.$instance.find(\".\"+c.namespace+\"-inner\").not(b).slice(1).remove().end().replaceWith(a.contains(c.$instance[0],b[0])?\"\":b),c.$content=b.addClass(c.namespace+\"-inner\"),c},open:function(b){var d=this;if(d.$instance.hide().appendTo(d.root),!(b&&b.isDefaultPrevented()||d.beforeOpen(b)===!1)){b&&b.preventDefault();var e=d.getContent();if(e)return c.push(d),h(!0),d.$instance.fadeIn(d.openSpeed),d.beforeContent(b),a.when(e).always(function(a){d.setContent(a),d.afterContent(b)}).then(d.$instance.promise()).done(function(){d.afterOpen(b)})}return d.$instance.detach(),a.Deferred().reject().promise()},close:function(b){var c=this,e=a.Deferred();return c.beforeClose(b)===!1?e.reject():(0===d(c).length&&h(!1),c.$instance.fadeOut(c.closeSpeed,function(){c.$instance.detach(),c.afterClose(b),e.resolve()})),e.promise()},resize:function(a,b){if(a&&b){this.$content.css(\"width\",\"\").css(\"height\",\"\");var c=Math.max(a/(parseInt(this.$content.parent().css(\"width\"),10)-1),b/(parseInt(this.$content.parent().css(\"height\"),10)-1));c>1&&(c=b/Math.floor(b/c),this.$content.css(\"width\",\"\"+a/c+\"px\").css(\"height\",\"\"+b/c+\"px\"))}},chainCallbacks:function(b){for(var c in b)this[c]=a.proxy(b[c],this,a.proxy(this[c],this))}},a.extend(b,{id:0,autoBind:\"[data-featherlight]\",defaults:b.prototype,contentFilters:{jquery:{regex:/^[#.]\\w/,test:function(b){return b instanceof a&&b},process:function(b){return this.persist!==!1?a(b):a(b).clone(!0)}},image:{regex:/\\.(png|jpg|jpeg|gif|tiff|bmp|svg)(\\?\\S*)?$/i,process:function(b){var c=this,d=a.Deferred(),e=new Image,f=a('<img src=\"'+b+'\" alt=\"\" class=\"'+c.namespace+'-image\" />');return e.onload=function(){f.naturalWidth=e.width,f.naturalHeight=e.height,d.resolve(f)},e.onerror=function(){d.reject(f)},e.src=b,d.promise()}},html:{regex:/^\\s*<[\\w!][^<]*>/,process:function(b){return a(b)}},ajax:{regex:/./,process:function(b){var c=a.Deferred(),d=a(\"<div></div>\").load(b,function(a,b){\"error\"!==b&&c.resolve(d.contents()),c.fail()});return c.promise()}},iframe:{process:function(b){var c=new a.Deferred,d=a(\"<iframe/>\").hide().attr(\"src\",b).css(e(this,\"iframe\")).on(\"load\",function(){c.resolve(d.show())}).appendTo(this.$instance.find(\".\"+this.namespace+\"-content\"));return c.promise()}},text:{process:function(b){return a(\"<div>\",{text:b})}}},functionAttributes:[\"beforeOpen\",\"afterOpen\",\"beforeContent\",\"afterContent\",\"beforeClose\",\"afterClose\"],readElementConfig:function(b,c){var d=this,e=new RegExp(\"^data-\"+c+\"-(.*)\"),f={};return b&&b.attributes&&a.each(b.attributes,function(){var b=this.name.match(e);if(b){var c=this.value,g=a.camelCase(b[1]);if(a.inArray(g,d.functionAttributes)>=0)c=new Function(c);else try{c=a.parseJSON(c)}catch(h){}f[g]=c}}),f},extend:function(b,c){var d=function(){this.constructor=b};return d.prototype=this.prototype,b.prototype=new d,b.__super__=this.prototype,a.extend(b,this,c),b.defaults=b.prototype,b},attach:function(b,c,d){var e=this;\"object\"!=typeof c||c instanceof a!=!1||d||(d=c,c=void 0),d=a.extend({},d);var f,g=d.namespace||e.defaults.namespace,h=a.extend({},e.defaults,e.readElementConfig(b[0],g),d);return b.on(h.openTrigger+\".\"+h.namespace,h.filter,function(g){var i=a.extend({$source:b,$currentTarget:a(this)},e.readElementConfig(b[0],h.namespace),e.readElementConfig(this,h.namespace),d),j=f||a(this).data(\"featherlight-persisted\")||new e(c,i);\"shared\"===j.persist?f=j:j.persist!==!1&&a(this).data(\"featherlight-persisted\",j),i.$currentTarget.blur(),j.open(g)}),b},current:function(){var a=this.opened();return a[a.length-1]||null},opened:function(){var b=this;return d(),a.grep(c,function(a){return a instanceof b})},close:function(a){var b=this.current();return b?b.close(a):void 0},_onReady:function(){var b=this;b.autoBind&&(a(b.autoBind).each(function(){b.attach(a(this))}),a(document).on(\"click\",b.autoBind,function(c){c.isDefaultPrevented()||\"featherlight\"===c.namespace||(c.preventDefault(),b.attach(a(c.currentTarget)),a(c.target).trigger(\"click.featherlight\"))}))},_callbackChain:{onKeyUp:function(b,c){return 27===c.keyCode?(this.closeOnEsc&&a.featherlight.close(c),!1):b(c)},onResize:function(a,b){return this.resize(this.$content.naturalWidth,this.$content.naturalHeight),a(b)},afterContent:function(a,b){var c=a(b);return this.onResize(b),c}}}),a.featherlight=b,a.fn.featherlight=function(a,c){return b.attach(this,a,c)},a(document).ready(function(){b._onReady()})}(jQuery);\n","var img = function( className ){\n  var images = $( className );\n\n  var creditMarkup = function( info, className ){\n    var credit = '';\n    if( info.author && info.author.length ){\n      credit += '<span class=\"'+className+'\">Photo credit: ';\n      if( info.src.length ){\n        credit += '<a href=\"'+info.src+'\">'\n      }\n      credit += info.author;\n      if( info.src.length ){\n        credit += '</a>'\n      }\n      credit += '</span>';\n      return credit;\n    } else {\n      return '';\n    }\n  }\n\n  images.each( function( i ){\n    var image = $(this).attr( 'data-img' );\n    if( !image.length ) return;\n    $.get( '/wp-json/v1/images/'+image+'/feat_lg', function( data ){\n\n      $(this).attr( 'data-img', data.original );\n\n      if( typeof $(this).attr( 'data-showcredit' ) !== 'undefined' ){\n        $(this).append( creditMarkup( data.credit, 'respImg-credit' ) );\n      }\n\n      // opts for featherlight\n      // var opts = {\n      //   targetAttr: 'data-img',\n      //   afterContent: function(){\n      //     // can't pass captions through featherlight so we do this instead\n      //     $( '.img-caption' ).remove();\n      //     var lightbox = $( '.featherlight-content' );\n      //     var src = $( '.featherlight-image' ).attr( 'src' );\n      //     var caption = $( '[data-img=\"'+src+'\"]' ).attr( 'data-caption' ) || data.caption || false;\n      //     if( caption ){\n      //       var credit = '';\n      //       if( data.credit.author.length ){\n      //         credit = creditMarkup( data.credit, 'img-credit' );\n      //       }\n      //       lightbox.append( '<div class=\"img-caption\">'+caption+credit+'</div>' );\n      //     }\n      //     //prevent body scrolling\n      //     $( 'body' ).css( 'overflow', 'hidden' );\n      //   },\n      //   afterClose: function(){\n      //     //restore body scrolling\n      //     $( 'body' ).css( 'overflow', '' );\n      //   }\n      // };\n      //\n      // $(this).featherlight( opts );\n\n    }.bind(this) );\n  } );\n\n}\n\nmodule.exports = img;\n","var eqHeight = require('./eqHeight');\nvar img = require('./img');\n\n$( document ).ready( function(){\n\n  var initEqHeight = (function(){\n    if( $(window).width() < 768 ) return;\n    // eqHeight( '.js-eqHeight--featured', function(){\n    //   $( '.js-eqHeight--featured' ).addClass( 'post--loaded' );\n    // } );\n    eqHeight( '.js-eqHeight--roll', function(){\n      $( '.js-eqHeight--roll' ).addClass( 'post--loaded' );\n    } );\n    eqHeight( '.js-eqHeight--bucket'  );\n  })();\n\n  $(window).resize( initEqHeight );\n\n  var toggleNav = function( target ){\n    $( target ).toggleClass( target.slice(1) + '--expand' );\n  }\n\n  $( '.header-navToggle' ).click( function(){\n    toggleNav( '.header-navInner' );\n    toggleNav( '.header-navToggleButton' );\n    var label = $( '.header-navToggleLabel' );\n    label.text( label.text() === 'Menu' ? 'Close' : 'Menu' );\n  } );\n\n  $( '.researchMenu-toggle' ).click( function(){\n    toggleNav( '.researchMenu' );\n  } );\n\n  img( '.js-img' );\n\n} );\n","exports = module.exports = ap;\nfunction ap (args, fn) {\n    return function () {\n        var rest = [].slice.call(arguments)\n            , first = args.slice()\n        first.push.apply(first, rest)\n        return fn.apply(this, first);\n    };\n}\n\nexports.pa = pa;\nfunction pa (args, fn) {\n    return function () {\n        var rest = [].slice.call(arguments)\n        rest.push.apply(rest, args)\n        return fn.apply(this, rest);\n    };\n}\n\nexports.apa = apa;\nfunction apa (left, right, fn) {\n    return function () {\n        return fn.apply(this,\n            left.concat.apply(left, arguments).concat(right)\n        );\n    };\n}\n\nexports.partial = partial;\nfunction partial (fn) {\n    var args = [].slice.call(arguments, 1);\n    return ap(args, fn);\n}\n\nexports.partialRight = partialRight;\nfunction partialRight (fn) {\n    var args = [].slice.call(arguments, 1);\n    return pa(args, fn);\n}\n\nexports.curry = curry;\nfunction curry (fn) {\n    return partial(partial, fn);\n}\n\nexports.curryRight = function curryRight (fn) {\n    return partial(partialRight, fn);\n}\n","'use strict'\n\nmodule.exports = function assertOk (value, message) {\n  if (!value) {\n    throw new Error(message || 'Expected true, got ' + value)\n  }\n}\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['module', 'select'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(module, require('select'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod, global.select);\n        global.clipboardAction = mod.exports;\n    }\n})(this, function (module, _select) {\n    'use strict';\n\n    var _select2 = _interopRequireDefault(_select);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    var ClipboardAction = function () {\n        /**\n         * @param {Object} options\n         */\n        function ClipboardAction(options) {\n            _classCallCheck(this, ClipboardAction);\n\n            this.resolveOptions(options);\n            this.initSelection();\n        }\n\n        /**\n         * Defines base properties passed from constructor.\n         * @param {Object} options\n         */\n\n\n        _createClass(ClipboardAction, [{\n            key: 'resolveOptions',\n            value: function resolveOptions() {\n                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n                this.action = options.action;\n                this.container = options.container;\n                this.emitter = options.emitter;\n                this.target = options.target;\n                this.text = options.text;\n                this.trigger = options.trigger;\n\n                this.selectedText = '';\n            }\n        }, {\n            key: 'initSelection',\n            value: function initSelection() {\n                if (this.text) {\n                    this.selectFake();\n                } else if (this.target) {\n                    this.selectTarget();\n                }\n            }\n        }, {\n            key: 'selectFake',\n            value: function selectFake() {\n                var _this = this;\n\n                var isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n\n                this.removeFake();\n\n                this.fakeHandlerCallback = function () {\n                    return _this.removeFake();\n                };\n                this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;\n\n                this.fakeElem = document.createElement('textarea');\n                // Prevent zooming on iOS\n                this.fakeElem.style.fontSize = '12pt';\n                // Reset box model\n                this.fakeElem.style.border = '0';\n                this.fakeElem.style.padding = '0';\n                this.fakeElem.style.margin = '0';\n                // Move element out of screen horizontally\n                this.fakeElem.style.position = 'absolute';\n                this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n                // Move element to the same position vertically\n                var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n                this.fakeElem.style.top = yPosition + 'px';\n\n                this.fakeElem.setAttribute('readonly', '');\n                this.fakeElem.value = this.text;\n\n                this.container.appendChild(this.fakeElem);\n\n                this.selectedText = (0, _select2.default)(this.fakeElem);\n                this.copyText();\n            }\n        }, {\n            key: 'removeFake',\n            value: function removeFake() {\n                if (this.fakeHandler) {\n                    this.container.removeEventListener('click', this.fakeHandlerCallback);\n                    this.fakeHandler = null;\n                    this.fakeHandlerCallback = null;\n                }\n\n                if (this.fakeElem) {\n                    this.container.removeChild(this.fakeElem);\n                    this.fakeElem = null;\n                }\n            }\n        }, {\n            key: 'selectTarget',\n            value: function selectTarget() {\n                this.selectedText = (0, _select2.default)(this.target);\n                this.copyText();\n            }\n        }, {\n            key: 'copyText',\n            value: function copyText() {\n                var succeeded = void 0;\n\n                try {\n                    succeeded = document.execCommand(this.action);\n                } catch (err) {\n                    succeeded = false;\n                }\n\n                this.handleResult(succeeded);\n            }\n        }, {\n            key: 'handleResult',\n            value: function handleResult(succeeded) {\n                this.emitter.emit(succeeded ? 'success' : 'error', {\n                    action: this.action,\n                    text: this.selectedText,\n                    trigger: this.trigger,\n                    clearSelection: this.clearSelection.bind(this)\n                });\n            }\n        }, {\n            key: 'clearSelection',\n            value: function clearSelection() {\n                if (this.trigger) {\n                    this.trigger.focus();\n                }\n\n                window.getSelection().removeAllRanges();\n            }\n        }, {\n            key: 'destroy',\n            value: function destroy() {\n                this.removeFake();\n            }\n        }, {\n            key: 'action',\n            set: function set() {\n                var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';\n\n                this._action = action;\n\n                if (this._action !== 'copy' && this._action !== 'cut') {\n                    throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n                }\n            },\n            get: function get() {\n                return this._action;\n            }\n        }, {\n            key: 'target',\n            set: function set(target) {\n                if (target !== undefined) {\n                    if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {\n                        if (this.action === 'copy' && target.hasAttribute('disabled')) {\n                            throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n                        }\n\n                        if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n                            throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n                        }\n\n                        this._target = target;\n                    } else {\n                        throw new Error('Invalid \"target\" value, use a valid Element');\n                    }\n                }\n            },\n            get: function get() {\n                return this._target;\n            }\n        }]);\n\n        return ClipboardAction;\n    }();\n\n    module.exports = ClipboardAction;\n});","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['module', './clipboard-action', 'tiny-emitter', 'good-listener'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(module, require('./clipboard-action'), require('tiny-emitter'), require('good-listener'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod, global.clipboardAction, global.tinyEmitter, global.goodListener);\n        global.clipboard = mod.exports;\n    }\n})(this, function (module, _clipboardAction, _tinyEmitter, _goodListener) {\n    'use strict';\n\n    var _clipboardAction2 = _interopRequireDefault(_clipboardAction);\n\n    var _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);\n\n    var _goodListener2 = _interopRequireDefault(_goodListener);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    function _possibleConstructorReturn(self, call) {\n        if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    }\n\n    function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n                value: subClass,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    }\n\n    var Clipboard = function (_Emitter) {\n        _inherits(Clipboard, _Emitter);\n\n        /**\n         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n         * @param {Object} options\n         */\n        function Clipboard(trigger, options) {\n            _classCallCheck(this, Clipboard);\n\n            var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));\n\n            _this.resolveOptions(options);\n            _this.listenClick(trigger);\n            return _this;\n        }\n\n        /**\n         * Defines if attributes would be resolved using internal setter functions\n         * or custom functions that were passed in the constructor.\n         * @param {Object} options\n         */\n\n\n        _createClass(Clipboard, [{\n            key: 'resolveOptions',\n            value: function resolveOptions() {\n                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n                this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n                this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n                this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n                this.container = _typeof(options.container) === 'object' ? options.container : document.body;\n            }\n        }, {\n            key: 'listenClick',\n            value: function listenClick(trigger) {\n                var _this2 = this;\n\n                this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {\n                    return _this2.onClick(e);\n                });\n            }\n        }, {\n            key: 'onClick',\n            value: function onClick(e) {\n                var trigger = e.delegateTarget || e.currentTarget;\n\n                if (this.clipboardAction) {\n                    this.clipboardAction = null;\n                }\n\n                this.clipboardAction = new _clipboardAction2.default({\n                    action: this.action(trigger),\n                    target: this.target(trigger),\n                    text: this.text(trigger),\n                    container: this.container,\n                    trigger: trigger,\n                    emitter: this\n                });\n            }\n        }, {\n            key: 'defaultAction',\n            value: function defaultAction(trigger) {\n                return getAttributeValue('action', trigger);\n            }\n        }, {\n            key: 'defaultTarget',\n            value: function defaultTarget(trigger) {\n                var selector = getAttributeValue('target', trigger);\n\n                if (selector) {\n                    return document.querySelector(selector);\n                }\n            }\n        }, {\n            key: 'defaultText',\n            value: function defaultText(trigger) {\n                return getAttributeValue('text', trigger);\n            }\n        }, {\n            key: 'destroy',\n            value: function destroy() {\n                this.listener.destroy();\n\n                if (this.clipboardAction) {\n                    this.clipboardAction.destroy();\n                    this.clipboardAction = null;\n                }\n            }\n        }], [{\n            key: 'isSupported',\n            value: function isSupported() {\n                var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n\n                var actions = typeof action === 'string' ? [action] : action;\n                var support = !!document.queryCommandSupported;\n\n                actions.forEach(function (action) {\n                    support = support && !!document.queryCommandSupported(action);\n                });\n\n                return support;\n            }\n        }]);\n\n        return Clipboard;\n    }(_tinyEmitter2.default);\n\n    /**\n     * Helper function to retrieve attribute value.\n     * @param {String} suffix\n     * @param {Element} element\n     */\n    function getAttributeValue(suffix, element) {\n        var attribute = 'data-clipboard-' + suffix;\n\n        if (!element.hasAttribute(attribute)) {\n            return;\n        }\n\n        return element.getAttribute(attribute);\n    }\n\n    module.exports = Clipboard;\n});","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","var DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n","var closest = require('./closest');\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction _delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element|String|Array} [elements]\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(elements, selector, type, callback, useCapture) {\n    // Handle the regular Element usage\n    if (typeof elements.addEventListener === 'function') {\n        return _delegate.apply(null, arguments);\n    }\n\n    // Handle Element-less usage, it defaults to global delegation\n    if (typeof type === 'function') {\n        // Use `document` as the first parameter, then apply arguments\n        // This is a short way to .unshift `arguments` without running into deoptimizations\n        return _delegate.bind(null, document).apply(null, arguments);\n    }\n\n    // Handle Selector-based usage\n    if (typeof elements === 'string') {\n        elements = document.querySelectorAll(elements);\n    }\n\n    // Handle Array-like based usage\n    return Array.prototype.map.call(elements, function (element) {\n        return _delegate(element, selector, type, callback, useCapture);\n    });\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n","'use strict';\n\nvar matchOperatorsRe = /[|\\\\{}()[\\]^$+*?.]/g;\n\nmodule.exports = function (str) {\n\tif (typeof str !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\treturn str.replace(matchOperatorsRe, '\\\\$&');\n};\n","'use strict'\n\nvar assert = require('assert-ok')\nvar Integer = require('parse-int')\nvar qs = require('query-string')\nvar setQuery = require('url-set-query')\nvar Snake = require('snakecase-keys')\nvar extend = require('xtend')\nvar partial = require('ap').partial\nvar pipe = require('value-pipe')\n\nvar base = 'https://www.facebook.com/dialog/share'\n\nmodule.exports = function FacebookShare (app) {\n  assert(Integer(app), 'facebook app id is required')\n\n  return pipe(\n    partial(extend, {\n      appId: app\n    }),\n    Snake,\n    qs.stringify,\n    partial(setQuery, base)\n  )\n}\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str) {\n\tif (typeof str !== 'string') {\n\t\treturn {};\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn {};\n\t}\n\n\treturn str.split('&').reduce(function (ret, param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\tkey = decodeURIComponent(key);\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tif (!ret.hasOwnProperty(key)) {\n\t\t\tret[key] = val;\n\t\t} else if (Array.isArray(ret[key])) {\n\t\t\tret[key].push(val);\n\t\t} else {\n\t\t\tret[key] = [ret[key], val];\n\t\t}\n\n\t\treturn ret;\n\t}, {});\n};\n\nexports.stringify = function (obj) {\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn key;\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\treturn val.slice().sort().map(function (val2) {\n\t\t\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val2);\n\t\t\t}).join('&');\n\t\t}\n\n\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n","/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n","var is = require('./is');\nvar delegate = require('delegate');\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n","'use strict';\nvar numberIsNan = require('number-is-nan');\n\nmodule.exports = Number.isFinite || function (val) {\n\treturn !(typeof val !== 'number' || numberIsNan(val) || val === Infinity || val === -Infinity);\n};\n","// https://github.com/paulmillr/es6-shim\n// http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger\nvar isFinite = require(\"is-finite\");\nmodule.exports = Number.isInteger || function(val) {\n  return typeof val === \"number\" &&\n    isFinite(val) &&\n    Math.floor(val) === val;\n};\n","/*!\n * JavaScript Cookie v2.2.0\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\tvar stringifiedAttributes = '';\n\n\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t}\n\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!this.json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","'use strict';\nmodule.exports = function (obj, cb) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar res = cb(key, obj[key], obj);\n\t\tret[res[0]] = res[1];\n\t}\n\n\treturn ret;\n};\n","'use strict';\nmodule.exports = Number.isNaN || function (x) {\n\treturn x !== x;\n};\n","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n","'use strict'\n\nvar isInteger = require('is-integer')\n\nmodule.exports = function parseIntStrict (integer) {\n  if (typeof integer === 'number') {\n    return isInteger(integer) ? integer : undefined\n  }\n  if (typeof integer === 'string') {\n    return /^-?\\d+$/.test(integer) ? parseInt(integer, 10) : undefined\n  }\n}\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\nvar objectAssign = require('object-assign');\nvar decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(opts) {\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, index) {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, opts),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value) {\n\t\t\t\treturn value === null ? encode(key, opts) : [\n\t\t\t\t\tencode(key, opts),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, opts)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(opts) {\n\tvar result;\n\n\tswitch (opts.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\n\t\tcase 'bracket':\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t} else if (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\n\t\tdefault:\n\t\t\treturn function (key, value, accumulator) {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, opts) {\n\tif (opts.encode) {\n\t\treturn opts.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t} else if (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input)).sort(function (a, b) {\n\t\t\treturn Number(a) - Number(b);\n\t\t}).map(function (key) {\n\t\t\treturn input[key];\n\t\t});\n\t}\n\n\treturn input;\n}\n\nfunction extract(str) {\n\tvar queryStart = str.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn str.slice(queryStart + 1);\n}\n\nfunction parse(str, opts) {\n\topts = objectAssign({arrayFormat: 'none'}, opts);\n\n\tvar formatter = parserForArrayFormat(opts);\n\n\t// Create an object with no prototype\n\t// https://github.com/sindresorhus/query-string/issues/47\n\tvar ret = Object.create(null);\n\n\tif (typeof str !== 'string') {\n\t\treturn ret;\n\t}\n\n\tstr = str.trim().replace(/^[?#&]/, '');\n\n\tif (!str) {\n\t\treturn ret;\n\t}\n\n\tstr.split('&').forEach(function (param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeComponent(val);\n\n\t\tformatter(decodeComponent(key), val, ret);\n\t});\n\n\treturn Object.keys(ret).sort().reduce(function (result, key) {\n\t\tvar val = ret[key];\n\t\tif (Boolean(val) && typeof val === 'object' && !Array.isArray(val)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(val);\n\t\t} else {\n\t\t\tresult[key] = val;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = function (obj, opts) {\n\tvar defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\topts = objectAssign(defaults, opts);\n\n\tif (opts.sort === false) {\n\t\topts.sort = function () {};\n\t}\n\n\tvar formatter = encoderForArrayFormat(opts);\n\n\treturn obj ? Object.keys(obj).sort(opts.sort).map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn encode(key, opts);\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\tvar result = [];\n\n\t\t\tval.slice().forEach(function (val2) {\n\t\t\t\tif (val2 === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, val2, result.length));\n\t\t\t});\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, opts) + '=' + encode(val, opts);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n\nexports.parseUrl = function (str, opts) {\n\treturn {\n\t\turl: str.split('?')[0] || '',\n\t\tquery: parse(extract(str), opts)\n\t};\n};\n","function select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n","'use strict';\nmodule.exports = require('./lib/index');\n","'use strict';\n\nvar randomFromSeed = require('./random/random-from-seed');\n\nvar ORIGINAL = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ_-';\nvar alphabet;\nvar previousSeed;\n\nvar shuffled;\n\nfunction reset() {\n    shuffled = false;\n}\n\nfunction setCharacters(_alphabet_) {\n    if (!_alphabet_) {\n        if (alphabet !== ORIGINAL) {\n            alphabet = ORIGINAL;\n            reset();\n        }\n        return;\n    }\n\n    if (_alphabet_ === alphabet) {\n        return;\n    }\n\n    if (_alphabet_.length !== ORIGINAL.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. You submitted ' + _alphabet_.length + ' characters: ' + _alphabet_);\n    }\n\n    var unique = _alphabet_.split('').filter(function(item, ind, arr){\n       return ind !== arr.lastIndexOf(item);\n    });\n\n    if (unique.length) {\n        throw new Error('Custom alphabet for shortid must be ' + ORIGINAL.length + ' unique characters. These characters were not unique: ' + unique.join(', '));\n    }\n\n    alphabet = _alphabet_;\n    reset();\n}\n\nfunction characters(_alphabet_) {\n    setCharacters(_alphabet_);\n    return alphabet;\n}\n\nfunction setSeed(seed) {\n    randomFromSeed.seed(seed);\n    if (previousSeed !== seed) {\n        reset();\n        previousSeed = seed;\n    }\n}\n\nfunction shuffle() {\n    if (!alphabet) {\n        setCharacters(ORIGINAL);\n    }\n\n    var sourceArray = alphabet.split('');\n    var targetArray = [];\n    var r = randomFromSeed.nextValue();\n    var characterIndex;\n\n    while (sourceArray.length > 0) {\n        r = randomFromSeed.nextValue();\n        characterIndex = Math.floor(r * sourceArray.length);\n        targetArray.push(sourceArray.splice(characterIndex, 1)[0]);\n    }\n    return targetArray.join('');\n}\n\nfunction getShuffled() {\n    if (shuffled) {\n        return shuffled;\n    }\n    shuffled = shuffle();\n    return shuffled;\n}\n\n/**\n * lookup shuffled letter\n * @param index\n * @returns {string}\n */\nfunction lookup(index) {\n    var alphabetShuffled = getShuffled();\n    return alphabetShuffled[index];\n}\n\nmodule.exports = {\n    characters: characters,\n    seed: setSeed,\n    lookup: lookup,\n    shuffled: getShuffled\n};\n","'use strict';\n\nvar encode = require('./encode');\nvar alphabet = require('./alphabet');\n\n// Ignore all milliseconds before a certain time to reduce the size of the date entropy without sacrificing uniqueness.\n// This number should be updated every year or so to keep the generated id short.\n// To regenerate `new Date() - 0` and bump the version. Always bump the version!\nvar REDUCE_TIME = 1459707606518;\n\n// don't change unless we change the algos or REDUCE_TIME\n// must be an integer and less than 16\nvar version = 6;\n\n// Counter is used when shortid is called multiple times in one second.\nvar counter;\n\n// Remember the last time shortid was called in case counter is needed.\nvar previousSeconds;\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction build(clusterWorkerId) {\n\n    var str = '';\n\n    var seconds = Math.floor((Date.now() - REDUCE_TIME) * 0.001);\n\n    if (seconds === previousSeconds) {\n        counter++;\n    } else {\n        counter = 0;\n        previousSeconds = seconds;\n    }\n\n    str = str + encode(alphabet.lookup, version);\n    str = str + encode(alphabet.lookup, clusterWorkerId);\n    if (counter > 0) {\n        str = str + encode(alphabet.lookup, counter);\n    }\n    str = str + encode(alphabet.lookup, seconds);\n\n    return str;\n}\n\nmodule.exports = build;\n","'use strict';\nvar alphabet = require('./alphabet');\n\n/**\n * Decode the id to get the version and worker\n * Mainly for debugging and testing.\n * @param id - the shortid-generated id.\n */\nfunction decode(id) {\n    var characters = alphabet.shuffled();\n    return {\n        version: characters.indexOf(id.substr(0, 1)) & 0x0f,\n        worker: characters.indexOf(id.substr(1, 1)) & 0x0f\n    };\n}\n\nmodule.exports = decode;\n","'use strict';\n\nvar randomByte = require('./random/random-byte');\n\nfunction encode(lookup, number) {\n    var loopCounter = 0;\n    var done;\n\n    var str = '';\n\n    while (!done) {\n        str = str + lookup( ( (number >> (4 * loopCounter)) & 0x0f ) | randomByte() );\n        done = number < (Math.pow(16, loopCounter + 1 ) );\n        loopCounter++;\n    }\n    return str;\n}\n\nmodule.exports = encode;\n","'use strict';\n\nvar alphabet = require('./alphabet');\nvar encode = require('./encode');\nvar decode = require('./decode');\nvar build = require('./build');\nvar isValid = require('./is-valid');\n\n// if you are using cluster or multiple servers use this to make each instance\n// has a unique value for worker\n// Note: I don't know if this is automatically set when using third\n// party cluster solutions such as pm2.\nvar clusterWorkerId = require('./util/cluster-worker-id') || 0;\n\n/**\n * Set the seed.\n * Highly recommended if you don't want people to try to figure out your id schema.\n * exposed as shortid.seed(int)\n * @param seed Integer value to seed the random alphabet.  ALWAYS USE THE SAME SEED or you might get overlaps.\n */\nfunction seed(seedValue) {\n    alphabet.seed(seedValue);\n    return module.exports;\n}\n\n/**\n * Set the cluster worker or machine id\n * exposed as shortid.worker(int)\n * @param workerId worker must be positive integer.  Number less than 16 is recommended.\n * returns shortid module so it can be chained.\n */\nfunction worker(workerId) {\n    clusterWorkerId = workerId;\n    return module.exports;\n}\n\n/**\n *\n * sets new characters to use in the alphabet\n * returns the shuffled alphabet\n */\nfunction characters(newCharacters) {\n    if (newCharacters !== undefined) {\n        alphabet.characters(newCharacters);\n    }\n\n    return alphabet.shuffled();\n}\n\n/**\n * Generate unique id\n * Returns string id\n */\nfunction generate() {\n  return build(clusterWorkerId);\n}\n\n// Export all other functions as properties of the generate function\nmodule.exports = generate;\nmodule.exports.generate = generate;\nmodule.exports.seed = seed;\nmodule.exports.worker = worker;\nmodule.exports.characters = characters;\nmodule.exports.decode = decode;\nmodule.exports.isValid = isValid;\n","'use strict';\nvar alphabet = require('./alphabet');\n\nfunction isShortId(id) {\n    if (!id || typeof id !== 'string' || id.length < 6 ) {\n        return false;\n    }\n\n    var characters = alphabet.characters();\n    var len = id.length;\n    for(var i = 0; i < len;i++) {\n        if (characters.indexOf(id[i]) === -1) {\n            return false;\n        }\n    }\n    return true;\n}\n\nmodule.exports = isShortId;\n","'use strict';\n\nvar crypto = typeof window === 'object' && (window.crypto || window.msCrypto); // IE 11 uses window.msCrypto\n\nfunction randomByte() {\n    if (!crypto || !crypto.getRandomValues) {\n        return Math.floor(Math.random() * 256) & 0x30;\n    }\n    var dest = new Uint8Array(1);\n    crypto.getRandomValues(dest);\n    return dest[0] & 0x30;\n}\n\nmodule.exports = randomByte;\n","'use strict';\n\n// Found this seed-based random generator somewhere\n// Based on The Central Randomizer 1.3 (C) 1997 by Paul Houle (houle@msc.cornell.edu)\n\nvar seed = 1;\n\n/**\n * return a random number based on a seed\n * @param seed\n * @returns {number}\n */\nfunction getNextValue() {\n    seed = (seed * 9301 + 49297) % 233280;\n    return seed/(233280.0);\n}\n\nfunction setSeed(_seed_) {\n    seed = _seed_;\n}\n\nmodule.exports = {\n    nextValue: getNextValue,\n    seed: setSeed\n};\n","'use strict';\n\nmodule.exports = 0;\n","'use strict'\n\nvar map = require('map-obj')\nvar snakeCase = require('to-snake-case')\n\nmodule.exports = function (obj) {\n  return map(obj, function (key, val) {\n    return [snakeCase(key), val]\n  })\n}\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","\n/**\n * Expose `toNoCase`.\n */\n\nmodule.exports = toNoCase;\n\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/;\nvar hasCamel = /[a-z][A-Z]/;\nvar hasSeparator = /[\\W_]/;\n\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase (string) {\n  if (hasSpace.test(string)) return string.toLowerCase();\n\n  if (hasSeparator.test(string)) string = unseparate(string);\n  if (hasCamel.test(string)) string = uncamelize(string);\n  return string.toLowerCase();\n}\n\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g;\n\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate (string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : '';\n  });\n}\n\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g;\n\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize (string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ');\n  });\n}","var toSpace = require('to-space-case');\n\n\n/**\n * Expose `toSnakeCase`.\n */\n\nmodule.exports = toSnakeCase;\n\n\n/**\n * Convert a `string` to snake case.\n *\n * @param {String} string\n * @return {String}\n */\n\n\nfunction toSnakeCase (string) {\n  return toSpace(string).replace(/\\s/g, '_');\n}\n","\nvar clean = require('to-no-case');\n\n\n/**\n * Expose `toSpaceCase`.\n */\n\nmodule.exports = toSpaceCase;\n\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\n\nfunction toSpaceCase (string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : '';\n  });\n}","module.exports = urlSetQuery\nfunction urlSetQuery (url, query) {\n  if (query) {\n    // remove optional leading symbols\n    query = query.trim().replace(/^(\\?|#|&)/, '')\n\n    // don't append empty query\n    query = query ? ('?' + query) : query\n\n    var parts = url.split(/[\\?\\#]/)\n    var start = parts[0]\n    if (query && /\\:\\/\\/[^\\/]*$/.test(start)) {\n      // e.g. http://foo.com -> http://foo.com/\n      start = start + '/'\n    }\n    var match = url.match(/(\\#.*)$/)\n    url = start + query\n    if (match) { // add hash back in\n      url = url + match[0]\n    }\n  }\n  return url\n}\n","'use strict'\n\nmodule.exports = valuePipe\n\nfunction valuePipe (fns) {\n  if (!fns) throw new TypeError('At least one function is required')\n  if (!Array.isArray(fns)) {\n    fns = Array.prototype.slice.call(arguments)\n  }\n\n  return function valuePipeline (value) {\n    for (var i = 0; i < fns.length; i++) {\n      value = fns[i](value)\n    }\n    return value\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}