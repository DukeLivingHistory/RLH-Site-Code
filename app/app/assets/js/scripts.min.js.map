{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/ap/index.js","node_modules/assert-ok/index.js","node_modules/clipboard/lib/clipboard-action.js","node_modules/clipboard/lib/clipboard.js","node_modules/delegate/src/closest.js","node_modules/delegate/src/delegate.js","node_modules/facebook-share-link/index.js","node_modules/good-listener/src/is.js","node_modules/good-listener/src/listen.js","node_modules/is-finite/index.js","node_modules/is-integer/index.js","node_modules/js-cookie/src/js.cookie.js","node_modules/map-obj/index.js","node_modules/number-is-nan/index.js","node_modules/parse-int/index.js","node_modules/query-string/index.js","node_modules/select/src/select.js","node_modules/snakecase-keys/index.js","node_modules/strict-uri-encode/index.js","node_modules/tiny-emitter/index.js","node_modules/to-array/index.js","node_modules/to-no-case/index.js","node_modules/to-snake-case/index.js","node_modules/to-space-case/index.js","node_modules/url-set-query/index.js","node_modules/value-pipe/index.js","node_modules/xtend/immutable.js","src/js/animatePage.js","src/js/app.js","src/js/buildArchive.js","src/js/buildCollectionFeed.js","src/js/buildCollectionHeader.js","src/js/buildCollectionsList.js","src/js/buildConnected.js","src/js/buildContentNode.js","src/js/buildInterviewsHeader.js","src/js/buildOtherInCollection.js","src/js/buildPage.js","src/js/buildSupp.js","src/js/buildSuppInner.js","src/js/buildTimeline.js","src/js/buildTimelineHeader.js","src/js/buildTranscript.js","src/js/buildTranscriptMarkup.js","src/js/cachebust.js","src/js/destroyPage.js","src/js/eqHeight.js","src/js/getUrlWithNoHash.js","src/js/highlightSuppCont.js","src/js/highlightTranscript.js","src/js/icon.js","src/js/internalLink.js","src/js/respBg.js","src/js/respImg.js","src/js/scrollIndicator.js","src/js/socialHighlight.js","src/js/socialLinks.js","src/js/stickyHeader.js","src/js/syncAblePlayer.js","src/js/syncTimestamps.js","src/js/thirdparty/featherlight.gallery.min.js","src/js/thirdparty/featherlight.min.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChpjCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC5CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACjrKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AClEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACzEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;ACnBA,IAAI,cAAc,SAAd,WAAc,CAAU,OAAV,EAAmB,IAAnB,EAAyB,GAAzB,EAA8B,EAA9B,EAAkC;AAClD,MAAI,WAAW,MAAM,KAArB;;AAEA,UAAQ,GAAR,CAAa,YAAb,EAA2B,OAA3B;AACA,UAAQ,MAAR,CAAgB,IAAhB;;AAEA,MAAI,OAAO,CAAC,SAAZ,EAAuB;AACrB,SAAK,QAAL,CAAe,0BAAwB,GAAvC;AACA,eAAY,YAAU;AACpB,WAAK,WAAL,CAAkB,gBAAc,GAAhC;AACD,KAFD,EAEG,EAFH;AAGA,eAAY,YAAU;AACpB,WAAK,WAAL,CAAkB,WAAlB;AACA,UAAI,QAAJ,EAAe;AAChB,KAHD,EAGG,cAHH;AAID,GATD,MASO;AACL,QAAI,QAAJ,EAAe;AAChB;;AAED,UAAQ,GAAR,CAAa,YAAb;AAED,CArBD;;AAuBA,OAAO,OAAP,GAAiB,WAAjB;;;;;ACvBA,IAAI,YAA0B,QAAQ,aAAR,CAA9B;AACA,IAAI,cAA0B,QAAQ,eAAR,CAA9B;AACA,IAAI,WAA0B,QAAQ,YAAR,CAA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","file":"scripts.min.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","exports = module.exports = ap;\nfunction ap (args, fn) {\n    return function () {\n        var rest = [].slice.call(arguments)\n            , first = args.slice()\n        first.push.apply(first, rest)\n        return fn.apply(this, first);\n    };\n}\n\nexports.pa = pa;\nfunction pa (args, fn) {\n    return function () {\n        var rest = [].slice.call(arguments)\n        rest.push.apply(rest, args)\n        return fn.apply(this, rest);\n    };\n}\n\nexports.apa = apa;\nfunction apa (left, right, fn) {\n    return function () {\n        return fn.apply(this,\n            left.concat.apply(left, arguments).concat(right)\n        );\n    };\n}\n\nexports.partial = partial;\nfunction partial (fn) {\n    var args = [].slice.call(arguments, 1);\n    return ap(args, fn);\n}\n\nexports.partialRight = partialRight;\nfunction partialRight (fn) {\n    var args = [].slice.call(arguments, 1);\n    return pa(args, fn);\n}\n\nexports.curry = curry;\nfunction curry (fn) {\n    return partial(partial, fn);\n}\n\nexports.curryRight = function curryRight (fn) {\n    return partial(partialRight, fn);\n}\n","'use strict'\n\nmodule.exports = function assertOk (value, message) {\n  if (!value) {\n    throw new Error(message || 'Expected true, got ' + value)\n  }\n}\n","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['module', 'select'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(module, require('select'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod, global.select);\n        global.clipboardAction = mod.exports;\n    }\n})(this, function (module, _select) {\n    'use strict';\n\n    var _select2 = _interopRequireDefault(_select);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    var ClipboardAction = function () {\n        /**\n         * @param {Object} options\n         */\n        function ClipboardAction(options) {\n            _classCallCheck(this, ClipboardAction);\n\n            this.resolveOptions(options);\n            this.initSelection();\n        }\n\n        /**\n         * Defines base properties passed from constructor.\n         * @param {Object} options\n         */\n\n\n        _createClass(ClipboardAction, [{\n            key: 'resolveOptions',\n            value: function resolveOptions() {\n                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n                this.action = options.action;\n                this.container = options.container;\n                this.emitter = options.emitter;\n                this.target = options.target;\n                this.text = options.text;\n                this.trigger = options.trigger;\n\n                this.selectedText = '';\n            }\n        }, {\n            key: 'initSelection',\n            value: function initSelection() {\n                if (this.text) {\n                    this.selectFake();\n                } else if (this.target) {\n                    this.selectTarget();\n                }\n            }\n        }, {\n            key: 'selectFake',\n            value: function selectFake() {\n                var _this = this;\n\n                var isRTL = document.documentElement.getAttribute('dir') == 'rtl';\n\n                this.removeFake();\n\n                this.fakeHandlerCallback = function () {\n                    return _this.removeFake();\n                };\n                this.fakeHandler = this.container.addEventListener('click', this.fakeHandlerCallback) || true;\n\n                this.fakeElem = document.createElement('textarea');\n                // Prevent zooming on iOS\n                this.fakeElem.style.fontSize = '12pt';\n                // Reset box model\n                this.fakeElem.style.border = '0';\n                this.fakeElem.style.padding = '0';\n                this.fakeElem.style.margin = '0';\n                // Move element out of screen horizontally\n                this.fakeElem.style.position = 'absolute';\n                this.fakeElem.style[isRTL ? 'right' : 'left'] = '-9999px';\n                // Move element to the same position vertically\n                var yPosition = window.pageYOffset || document.documentElement.scrollTop;\n                this.fakeElem.style.top = yPosition + 'px';\n\n                this.fakeElem.setAttribute('readonly', '');\n                this.fakeElem.value = this.text;\n\n                this.container.appendChild(this.fakeElem);\n\n                this.selectedText = (0, _select2.default)(this.fakeElem);\n                this.copyText();\n            }\n        }, {\n            key: 'removeFake',\n            value: function removeFake() {\n                if (this.fakeHandler) {\n                    this.container.removeEventListener('click', this.fakeHandlerCallback);\n                    this.fakeHandler = null;\n                    this.fakeHandlerCallback = null;\n                }\n\n                if (this.fakeElem) {\n                    this.container.removeChild(this.fakeElem);\n                    this.fakeElem = null;\n                }\n            }\n        }, {\n            key: 'selectTarget',\n            value: function selectTarget() {\n                this.selectedText = (0, _select2.default)(this.target);\n                this.copyText();\n            }\n        }, {\n            key: 'copyText',\n            value: function copyText() {\n                var succeeded = void 0;\n\n                try {\n                    succeeded = document.execCommand(this.action);\n                } catch (err) {\n                    succeeded = false;\n                }\n\n                this.handleResult(succeeded);\n            }\n        }, {\n            key: 'handleResult',\n            value: function handleResult(succeeded) {\n                this.emitter.emit(succeeded ? 'success' : 'error', {\n                    action: this.action,\n                    text: this.selectedText,\n                    trigger: this.trigger,\n                    clearSelection: this.clearSelection.bind(this)\n                });\n            }\n        }, {\n            key: 'clearSelection',\n            value: function clearSelection() {\n                if (this.trigger) {\n                    this.trigger.focus();\n                }\n\n                window.getSelection().removeAllRanges();\n            }\n        }, {\n            key: 'destroy',\n            value: function destroy() {\n                this.removeFake();\n            }\n        }, {\n            key: 'action',\n            set: function set() {\n                var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'copy';\n\n                this._action = action;\n\n                if (this._action !== 'copy' && this._action !== 'cut') {\n                    throw new Error('Invalid \"action\" value, use either \"copy\" or \"cut\"');\n                }\n            },\n            get: function get() {\n                return this._action;\n            }\n        }, {\n            key: 'target',\n            set: function set(target) {\n                if (target !== undefined) {\n                    if (target && (typeof target === 'undefined' ? 'undefined' : _typeof(target)) === 'object' && target.nodeType === 1) {\n                        if (this.action === 'copy' && target.hasAttribute('disabled')) {\n                            throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n                        }\n\n                        if (this.action === 'cut' && (target.hasAttribute('readonly') || target.hasAttribute('disabled'))) {\n                            throw new Error('Invalid \"target\" attribute. You can\\'t cut text from elements with \"readonly\" or \"disabled\" attributes');\n                        }\n\n                        this._target = target;\n                    } else {\n                        throw new Error('Invalid \"target\" value, use a valid Element');\n                    }\n                }\n            },\n            get: function get() {\n                return this._target;\n            }\n        }]);\n\n        return ClipboardAction;\n    }();\n\n    module.exports = ClipboardAction;\n});","(function (global, factory) {\n    if (typeof define === \"function\" && define.amd) {\n        define(['module', './clipboard-action', 'tiny-emitter', 'good-listener'], factory);\n    } else if (typeof exports !== \"undefined\") {\n        factory(module, require('./clipboard-action'), require('tiny-emitter'), require('good-listener'));\n    } else {\n        var mod = {\n            exports: {}\n        };\n        factory(mod, global.clipboardAction, global.tinyEmitter, global.goodListener);\n        global.clipboard = mod.exports;\n    }\n})(this, function (module, _clipboardAction, _tinyEmitter, _goodListener) {\n    'use strict';\n\n    var _clipboardAction2 = _interopRequireDefault(_clipboardAction);\n\n    var _tinyEmitter2 = _interopRequireDefault(_tinyEmitter);\n\n    var _goodListener2 = _interopRequireDefault(_goodListener);\n\n    function _interopRequireDefault(obj) {\n        return obj && obj.__esModule ? obj : {\n            default: obj\n        };\n    }\n\n    var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n        return typeof obj;\n    } : function (obj) {\n        return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n\n    function _classCallCheck(instance, Constructor) {\n        if (!(instance instanceof Constructor)) {\n            throw new TypeError(\"Cannot call a class as a function\");\n        }\n    }\n\n    var _createClass = function () {\n        function defineProperties(target, props) {\n            for (var i = 0; i < props.length; i++) {\n                var descriptor = props[i];\n                descriptor.enumerable = descriptor.enumerable || false;\n                descriptor.configurable = true;\n                if (\"value\" in descriptor) descriptor.writable = true;\n                Object.defineProperty(target, descriptor.key, descriptor);\n            }\n        }\n\n        return function (Constructor, protoProps, staticProps) {\n            if (protoProps) defineProperties(Constructor.prototype, protoProps);\n            if (staticProps) defineProperties(Constructor, staticProps);\n            return Constructor;\n        };\n    }();\n\n    function _possibleConstructorReturn(self, call) {\n        if (!self) {\n            throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n        }\n\n        return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n    }\n\n    function _inherits(subClass, superClass) {\n        if (typeof superClass !== \"function\" && superClass !== null) {\n            throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n        }\n\n        subClass.prototype = Object.create(superClass && superClass.prototype, {\n            constructor: {\n                value: subClass,\n                enumerable: false,\n                writable: true,\n                configurable: true\n            }\n        });\n        if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n    }\n\n    var Clipboard = function (_Emitter) {\n        _inherits(Clipboard, _Emitter);\n\n        /**\n         * @param {String|HTMLElement|HTMLCollection|NodeList} trigger\n         * @param {Object} options\n         */\n        function Clipboard(trigger, options) {\n            _classCallCheck(this, Clipboard);\n\n            var _this = _possibleConstructorReturn(this, (Clipboard.__proto__ || Object.getPrototypeOf(Clipboard)).call(this));\n\n            _this.resolveOptions(options);\n            _this.listenClick(trigger);\n            return _this;\n        }\n\n        /**\n         * Defines if attributes would be resolved using internal setter functions\n         * or custom functions that were passed in the constructor.\n         * @param {Object} options\n         */\n\n\n        _createClass(Clipboard, [{\n            key: 'resolveOptions',\n            value: function resolveOptions() {\n                var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n                this.action = typeof options.action === 'function' ? options.action : this.defaultAction;\n                this.target = typeof options.target === 'function' ? options.target : this.defaultTarget;\n                this.text = typeof options.text === 'function' ? options.text : this.defaultText;\n                this.container = _typeof(options.container) === 'object' ? options.container : document.body;\n            }\n        }, {\n            key: 'listenClick',\n            value: function listenClick(trigger) {\n                var _this2 = this;\n\n                this.listener = (0, _goodListener2.default)(trigger, 'click', function (e) {\n                    return _this2.onClick(e);\n                });\n            }\n        }, {\n            key: 'onClick',\n            value: function onClick(e) {\n                var trigger = e.delegateTarget || e.currentTarget;\n\n                if (this.clipboardAction) {\n                    this.clipboardAction = null;\n                }\n\n                this.clipboardAction = new _clipboardAction2.default({\n                    action: this.action(trigger),\n                    target: this.target(trigger),\n                    text: this.text(trigger),\n                    container: this.container,\n                    trigger: trigger,\n                    emitter: this\n                });\n            }\n        }, {\n            key: 'defaultAction',\n            value: function defaultAction(trigger) {\n                return getAttributeValue('action', trigger);\n            }\n        }, {\n            key: 'defaultTarget',\n            value: function defaultTarget(trigger) {\n                var selector = getAttributeValue('target', trigger);\n\n                if (selector) {\n                    return document.querySelector(selector);\n                }\n            }\n        }, {\n            key: 'defaultText',\n            value: function defaultText(trigger) {\n                return getAttributeValue('text', trigger);\n            }\n        }, {\n            key: 'destroy',\n            value: function destroy() {\n                this.listener.destroy();\n\n                if (this.clipboardAction) {\n                    this.clipboardAction.destroy();\n                    this.clipboardAction = null;\n                }\n            }\n        }], [{\n            key: 'isSupported',\n            value: function isSupported() {\n                var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['copy', 'cut'];\n\n                var actions = typeof action === 'string' ? [action] : action;\n                var support = !!document.queryCommandSupported;\n\n                actions.forEach(function (action) {\n                    support = support && !!document.queryCommandSupported(action);\n                });\n\n                return support;\n            }\n        }]);\n\n        return Clipboard;\n    }(_tinyEmitter2.default);\n\n    /**\n     * Helper function to retrieve attribute value.\n     * @param {String} suffix\n     * @param {Element} element\n     */\n    function getAttributeValue(suffix, element) {\n        var attribute = 'data-clipboard-' + suffix;\n\n        if (!element.hasAttribute(attribute)) {\n            return;\n        }\n\n        return element.getAttribute(attribute);\n    }\n\n    module.exports = Clipboard;\n});","var DOCUMENT_NODE_TYPE = 9;\n\n/**\n * A polyfill for Element.matches()\n */\nif (typeof Element !== 'undefined' && !Element.prototype.matches) {\n    var proto = Element.prototype;\n\n    proto.matches = proto.matchesSelector ||\n                    proto.mozMatchesSelector ||\n                    proto.msMatchesSelector ||\n                    proto.oMatchesSelector ||\n                    proto.webkitMatchesSelector;\n}\n\n/**\n * Finds the closest parent that matches a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @return {Function}\n */\nfunction closest (element, selector) {\n    while (element && element.nodeType !== DOCUMENT_NODE_TYPE) {\n        if (typeof element.matches === 'function' &&\n            element.matches(selector)) {\n          return element;\n        }\n        element = element.parentNode;\n    }\n}\n\nmodule.exports = closest;\n","var closest = require('./closest');\n\n/**\n * Delegates event to a selector.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @param {Boolean} useCapture\n * @return {Object}\n */\nfunction delegate(element, selector, type, callback, useCapture) {\n    var listenerFn = listener.apply(this, arguments);\n\n    element.addEventListener(type, listenerFn, useCapture);\n\n    return {\n        destroy: function() {\n            element.removeEventListener(type, listenerFn, useCapture);\n        }\n    }\n}\n\n/**\n * Finds closest match and invokes callback.\n *\n * @param {Element} element\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Function}\n */\nfunction listener(element, selector, type, callback) {\n    return function(e) {\n        e.delegateTarget = closest(e.target, selector);\n\n        if (e.delegateTarget) {\n            callback.call(element, e);\n        }\n    }\n}\n\nmodule.exports = delegate;\n","'use strict'\n\nvar assert = require('assert-ok')\nvar Integer = require('parse-int')\nvar qs = require('query-string')\nvar setQuery = require('url-set-query')\nvar Snake = require('snakecase-keys')\nvar extend = require('xtend')\nvar partial = require('ap').partial\nvar pipe = require('value-pipe')\n\nvar base = 'https://www.facebook.com/dialog/share'\n\nmodule.exports = function FacebookShare (app) {\n  assert(Integer(app), 'facebook app id is required')\n\n  return pipe(\n    partial(extend, {\n      appId: app\n    }),\n    Snake,\n    qs.stringify,\n    partial(setQuery, base)\n  )\n}\n","/**\n * Check if argument is a HTML element.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.node = function(value) {\n    return value !== undefined\n        && value instanceof HTMLElement\n        && value.nodeType === 1;\n};\n\n/**\n * Check if argument is a list of HTML elements.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.nodeList = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return value !== undefined\n        && (type === '[object NodeList]' || type === '[object HTMLCollection]')\n        && ('length' in value)\n        && (value.length === 0 || exports.node(value[0]));\n};\n\n/**\n * Check if argument is a string.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.string = function(value) {\n    return typeof value === 'string'\n        || value instanceof String;\n};\n\n/**\n * Check if argument is a function.\n *\n * @param {Object} value\n * @return {Boolean}\n */\nexports.fn = function(value) {\n    var type = Object.prototype.toString.call(value);\n\n    return type === '[object Function]';\n};\n","var is = require('./is');\nvar delegate = require('delegate');\n\n/**\n * Validates all params and calls the right\n * listener function based on its target type.\n *\n * @param {String|HTMLElement|HTMLCollection|NodeList} target\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listen(target, type, callback) {\n    if (!target && !type && !callback) {\n        throw new Error('Missing required arguments');\n    }\n\n    if (!is.string(type)) {\n        throw new TypeError('Second argument must be a String');\n    }\n\n    if (!is.fn(callback)) {\n        throw new TypeError('Third argument must be a Function');\n    }\n\n    if (is.node(target)) {\n        return listenNode(target, type, callback);\n    }\n    else if (is.nodeList(target)) {\n        return listenNodeList(target, type, callback);\n    }\n    else if (is.string(target)) {\n        return listenSelector(target, type, callback);\n    }\n    else {\n        throw new TypeError('First argument must be a String, HTMLElement, HTMLCollection, or NodeList');\n    }\n}\n\n/**\n * Adds an event listener to a HTML element\n * and returns a remove listener function.\n *\n * @param {HTMLElement} node\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNode(node, type, callback) {\n    node.addEventListener(type, callback);\n\n    return {\n        destroy: function() {\n            node.removeEventListener(type, callback);\n        }\n    }\n}\n\n/**\n * Add an event listener to a list of HTML elements\n * and returns a remove listener function.\n *\n * @param {NodeList|HTMLCollection} nodeList\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenNodeList(nodeList, type, callback) {\n    Array.prototype.forEach.call(nodeList, function(node) {\n        node.addEventListener(type, callback);\n    });\n\n    return {\n        destroy: function() {\n            Array.prototype.forEach.call(nodeList, function(node) {\n                node.removeEventListener(type, callback);\n            });\n        }\n    }\n}\n\n/**\n * Add an event listener to a selector\n * and returns a remove listener function.\n *\n * @param {String} selector\n * @param {String} type\n * @param {Function} callback\n * @return {Object}\n */\nfunction listenSelector(selector, type, callback) {\n    return delegate(document.body, selector, type, callback);\n}\n\nmodule.exports = listen;\n","'use strict';\nvar numberIsNan = require('number-is-nan');\n\nmodule.exports = Number.isFinite || function (val) {\n\treturn !(typeof val !== 'number' || numberIsNan(val) || val === Infinity || val === -Infinity);\n};\n","// https://github.com/paulmillr/es6-shim\n// http://people.mozilla.org/~jorendorff/es6-draft.html#sec-number.isinteger\nvar isFinite = require(\"is-finite\");\nmodule.exports = Number.isInteger || function(val) {\n  return typeof val === \"number\" &&\n    isFinite(val) &&\n    Math.floor(val) === val;\n};\n","/*!\n * JavaScript Cookie v2.2.0\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader = false;\n\tif (typeof define === 'function' && define.amd) {\n\t\tdefine(factory);\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (typeof exports === 'object') {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api (key, value, attributes) {\n\t\t\tvar result;\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Write\n\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tattributes = extend({\n\t\t\t\t\tpath: '/'\n\t\t\t\t}, api.defaults, attributes);\n\n\t\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\t\tvar expires = new Date();\n\t\t\t\t\texpires.setMilliseconds(expires.getMilliseconds() + attributes.expires * 864e+5);\n\t\t\t\t\tattributes.expires = expires;\n\t\t\t\t}\n\n\t\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\t\ttry {\n\t\t\t\t\tresult = JSON.stringify(value);\n\t\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\t\tvalue = result;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\n\t\t\t\tif (!converter.write) {\n\t\t\t\t\tvalue = encodeURIComponent(String(value))\n\t\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\t\t\t\t} else {\n\t\t\t\t\tvalue = converter.write(value, key);\n\t\t\t\t}\n\n\t\t\t\tkey = encodeURIComponent(String(key));\n\t\t\t\tkey = key.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent);\n\t\t\t\tkey = key.replace(/[\\(\\)]/g, escape);\n\n\t\t\t\tvar stringifiedAttributes = '';\n\n\t\t\t\tfor (var attributeName in attributes) {\n\t\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName];\n\t\t\t\t}\n\t\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t\t}\n\n\t\t\t// Read\n\n\t\t\tif (!key) {\n\t\t\t\tresult = {};\n\t\t\t}\n\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all. Also prevents odd result when\n\t\t\t// calling \"get()\"\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar rdecode = /(%[0-9A-Z]{2})+/g;\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!this.json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = parts[0].replace(rdecode, decodeURIComponent);\n\t\t\t\t\tcookie = converter.read ?\n\t\t\t\t\t\tconverter.read(cookie, name) : converter(cookie, name) ||\n\t\t\t\t\t\tcookie.replace(rdecode, decodeURIComponent);\n\n\t\t\t\t\tif (this.json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tresult = cookie;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!key) {\n\t\t\t\t\t\tresult[name] = cookie;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tapi.set = api;\n\t\tapi.get = function (key) {\n\t\t\treturn api.call(api, key);\n\t\t};\n\t\tapi.getJSON = function () {\n\t\t\treturn api.apply({\n\t\t\t\tjson: true\n\t\t\t}, [].slice.call(arguments));\n\t\t};\n\t\tapi.defaults = {};\n\n\t\tapi.remove = function (key, attributes) {\n\t\t\tapi(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n","'use strict';\nmodule.exports = function (obj, cb) {\n\tvar ret = {};\n\tvar keys = Object.keys(obj);\n\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar key = keys[i];\n\t\tvar res = cb(key, obj[key], obj);\n\t\tret[res[0]] = res[1];\n\t}\n\n\treturn ret;\n};\n","'use strict';\nmodule.exports = Number.isNaN || function (x) {\n\treturn x !== x;\n};\n","'use strict'\n\nvar isInteger = require('is-integer')\n\nmodule.exports = function parseIntStrict (integer) {\n  if (typeof integer === 'number') {\n    return isInteger(integer) ? integer : undefined\n  }\n  if (typeof integer === 'string') {\n    return /^-?\\d+$/.test(integer) ? parseInt(integer, 10) : undefined\n  }\n}\n","'use strict';\nvar strictUriEncode = require('strict-uri-encode');\n\nexports.extract = function (str) {\n\treturn str.split('?')[1] || '';\n};\n\nexports.parse = function (str) {\n\tif (typeof str !== 'string') {\n\t\treturn {};\n\t}\n\n\tstr = str.trim().replace(/^(\\?|#|&)/, '');\n\n\tif (!str) {\n\t\treturn {};\n\t}\n\n\treturn str.split('&').reduce(function (ret, param) {\n\t\tvar parts = param.replace(/\\+/g, ' ').split('=');\n\t\t// Firefox (pre 40) decodes `%3D` to `=`\n\t\t// https://github.com/sindresorhus/query-string/pull/37\n\t\tvar key = parts.shift();\n\t\tvar val = parts.length > 0 ? parts.join('=') : undefined;\n\n\t\tkey = decodeURIComponent(key);\n\n\t\t// missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tval = val === undefined ? null : decodeURIComponent(val);\n\n\t\tif (!ret.hasOwnProperty(key)) {\n\t\t\tret[key] = val;\n\t\t} else if (Array.isArray(ret[key])) {\n\t\t\tret[key].push(val);\n\t\t} else {\n\t\t\tret[key] = [ret[key], val];\n\t\t}\n\n\t\treturn ret;\n\t}, {});\n};\n\nexports.stringify = function (obj) {\n\treturn obj ? Object.keys(obj).sort().map(function (key) {\n\t\tvar val = obj[key];\n\n\t\tif (val === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (val === null) {\n\t\t\treturn key;\n\t\t}\n\n\t\tif (Array.isArray(val)) {\n\t\t\treturn val.slice().sort().map(function (val2) {\n\t\t\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val2);\n\t\t\t}).join('&');\n\t\t}\n\n\t\treturn strictUriEncode(key) + '=' + strictUriEncode(val);\n\t}).filter(function (x) {\n\t\treturn x.length > 0;\n\t}).join('&') : '';\n};\n","function select(element) {\n    var selectedText;\n\n    if (element.nodeName === 'SELECT') {\n        element.focus();\n\n        selectedText = element.value;\n    }\n    else if (element.nodeName === 'INPUT' || element.nodeName === 'TEXTAREA') {\n        var isReadOnly = element.hasAttribute('readonly');\n\n        if (!isReadOnly) {\n            element.setAttribute('readonly', '');\n        }\n\n        element.select();\n        element.setSelectionRange(0, element.value.length);\n\n        if (!isReadOnly) {\n            element.removeAttribute('readonly');\n        }\n\n        selectedText = element.value;\n    }\n    else {\n        if (element.hasAttribute('contenteditable')) {\n            element.focus();\n        }\n\n        var selection = window.getSelection();\n        var range = document.createRange();\n\n        range.selectNodeContents(element);\n        selection.removeAllRanges();\n        selection.addRange(range);\n\n        selectedText = selection.toString();\n    }\n\n    return selectedText;\n}\n\nmodule.exports = select;\n","'use strict'\n\nvar map = require('map-obj')\nvar snakeCase = require('to-snake-case')\n\nmodule.exports = function (obj) {\n  return map(obj, function (key, val) {\n    return [snakeCase(key), val]\n  })\n}\n","'use strict';\nmodule.exports = function (str) {\n\treturn encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n\t\treturn '%' + c.charCodeAt(0).toString(16).toUpperCase();\n\t});\n};\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\n","module.exports = toArray\n\nfunction toArray(list, index) {\n    var array = []\n\n    index = index || 0\n\n    for (var i = index || 0; i < list.length; i++) {\n        array[i - index] = list[i]\n    }\n\n    return array\n}\n","\n/**\n * Expose `toNoCase`.\n */\n\nmodule.exports = toNoCase;\n\n\n/**\n * Test whether a string is camel-case.\n */\n\nvar hasSpace = /\\s/;\nvar hasCamel = /[a-z][A-Z]/;\nvar hasSeparator = /[\\W_]/;\n\n\n/**\n * Remove any starting case from a `string`, like camel or snake, but keep\n * spaces and punctuation that may be important otherwise.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction toNoCase (string) {\n  if (hasSpace.test(string)) return string.toLowerCase();\n\n  if (hasSeparator.test(string)) string = unseparate(string);\n  if (hasCamel.test(string)) string = uncamelize(string);\n  return string.toLowerCase();\n}\n\n\n/**\n * Separator splitter.\n */\n\nvar separatorSplitter = /[\\W_]+(.|$)/g;\n\n\n/**\n * Un-separate a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction unseparate (string) {\n  return string.replace(separatorSplitter, function (m, next) {\n    return next ? ' ' + next : '';\n  });\n}\n\n\n/**\n * Camelcase splitter.\n */\n\nvar camelSplitter = /(.)([A-Z]+)/g;\n\n\n/**\n * Un-camelcase a `string`.\n *\n * @param {String} string\n * @return {String}\n */\n\nfunction uncamelize (string) {\n  return string.replace(camelSplitter, function (m, previous, uppers) {\n    return previous + ' ' + uppers.toLowerCase().split('').join(' ');\n  });\n}","var toSpace = require('to-space-case');\n\n\n/**\n * Expose `toSnakeCase`.\n */\n\nmodule.exports = toSnakeCase;\n\n\n/**\n * Convert a `string` to snake case.\n *\n * @param {String} string\n * @return {String}\n */\n\n\nfunction toSnakeCase (string) {\n  return toSpace(string).replace(/\\s/g, '_');\n}\n","\nvar clean = require('to-no-case');\n\n\n/**\n * Expose `toSpaceCase`.\n */\n\nmodule.exports = toSpaceCase;\n\n\n/**\n * Convert a `string` to space case.\n *\n * @param {String} string\n * @return {String}\n */\n\n\nfunction toSpaceCase (string) {\n  return clean(string).replace(/[\\W_]+(.|$)/g, function (matches, match) {\n    return match ? ' ' + match : '';\n  });\n}","module.exports = urlSetQuery\nfunction urlSetQuery (url, query) {\n  if (query) {\n    // remove optional leading symbols\n    query = query.trim().replace(/^(\\?|#|&)/, '')\n\n    // don't append empty query\n    query = query ? ('?' + query) : query\n\n    var parts = url.split(/[\\?\\#]/)\n    var start = parts[0]\n    if (query && /\\:\\/\\/[^\\/]*$/.test(start)) {\n      // e.g. http://foo.com -> http://foo.com/\n      start = start + '/'\n    }\n    var match = url.match(/(\\#.*)$/)\n    url = start + query\n    if (match) { // add hash back in\n      url = url + match[0]\n    }\n  }\n  return url\n}\n","'use strict'\n\nvar toArray = require('to-array')\n\nmodule.exports = valuePipe\n\nfunction valuePipe (fns) {\n  if (!fns) throw new TypeError('At least one function is required')\n  if (!Array.isArray(fns)) return valuePipe(toArray(arguments))\n  return function valuePipeline (value) {\n    for (var i = 0; i < fns.length; i++) {\n      value = fns[i](value)\n    }\n    return value\n  }\n}\n","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n","var animatePage = function( wrapper, page, dir, cb ){\n  var callback = cb || false;\n\n  wrapper.css( 'min-height', '100vh' );\n  wrapper.append( page );\n\n  if( dir && !IGNOREDIR ){\n    page.addClass( 'pageTrans pageTrans--'+dir );\n    setTimeout( function(){\n      page.removeClass( 'pageTrans--'+dir );\n    }, 20 );\n    setTimeout( function(){\n      page.removeClass( 'pageTrans' );\n      if( callback ) callback();\n    }, TRANSITIONTIME )\n  } else {\n    if( callback ) callback();\n  }\n\n  wrapper.css( 'min-height' );\n\n}\n\nmodule.exports = animatePage;\n","var buildPage               = require('./buildPage');\nvar destroyPage             = require('./destroyPage');\nvar eqHeight                = require('./eqHeight');\n\n$( document ).ready( function(){\n  $( 'html' ).removeClass( 'no-js' );\n\n  window.HASPAGE = false; // set to true upon first page build. this way we can check to see if we have a page before popping state\n  window.TRANSITIONTIME = 500; // should match CSS values\n  window.SOCIALINIT = false; // only add social event handlers once, see socialLinks.js\n  window.DESCRIPTION = ''; // used in sharing links\n  window.JUMPTOACTIVE = false; // set ableplayer polling as a window-scoped object so it can be overwritten\n\n  // some broswers call popstate on page load\n  // and have their own forward/backward ui\n  // for these, we'll avoid replicating this behavior\n  // (this refers to safari)\n  window.IGNOREDIR = false;\n\n  var History         = window.history;\n  var wrapper         = $( '.app-wrapper' );\n  var endpoint        = $( 'body' ).attr( 'data-endpoint' );\n  var queriedObject   = $( 'body' ).attr( 'data-id' );\n\n  // store navigation history as object\n  // sequence uses pure ordinals, not IDs, for simplicity\n  var sequence        = { prev: 0, curr: 0 };\n\n  wrapper.empty();\n  buildPage( wrapper, endpoint, queriedObject, false );\n\n  $( 'body' ).on( 'click', '.js-internalLink', function(e){\n    HASPAGE = true;\n    if( IGNOREDIR ) return;\n    e.preventDefault();\n    var target           = $(this).attr( 'href' );\n    var _endpoint        = $(this).attr( 'data-type' );\n    var _queriedObject   = $(this).attr( 'data-id' );\n\n    $( 'html, body' ).animate( {\n      scrollTop: 0\n    }, TRANSITIONTIME );\n\n    destroyPage( wrapper, 'left' );\n    buildPage( wrapper, _endpoint, _queriedObject, 'right' );\n\n    sequence = { prev: sequence.curr, curr: sequence.curr + 1 }; // update sequence sequentially\n\n    History.pushState(\n      { endpoint: _endpoint,\n        queriedObject: _queriedObject,\n        sequence: sequence // store the current sequence at this point in navigation history\n      }, null, target );\n\n  } );\n\n  $( window ).on( 'popstate', function(){\n    if( !HASPAGE ){\n      IGNOREDIR = true;\n    }\n    var _endpoint      = history.state ?  history.state.endpoint : endpoint;\n    var _queriedObject = history.state ?  history.state.queriedObject : queriedObject;\n    var _sequence      = history.state ?  history.state.sequence : false; //sanity check\n\n    if( IGNOREDIR ) return;\n    if( _sequence ){\n      // active previous matches historical current\n      // so we go backwards\n      if( sequence.prev === _sequence.curr ){\n        destroyPage( wrapper, 'right' );\n        buildPage( wrapper, _endpoint, _queriedObject, 'left' );\n      }\n      // active current matches historical previous\n      // so we go forwards\n      if( sequence.curr === _sequence.prev ){\n        destroyPage( wrapper, 'left' );\n        buildPage( wrapper, _endpoint, _queriedObject, 'right' );\n      }\n      // update our place in history\n      sequence = _sequence;\n\n    //default to backwards\n    } else {\n      destroyPage( wrapper, 'right' );\n      buildPage( wrapper, _endpoint, _queriedObject, 'left' );\n    }\n  } );\n\n  eqHeight( '.js-eqHeight' );\n\n} );\n","var cachebust = require('./cachebust');\nvar buildContentNode = require( './buildContentNode' );\nvar icon             = require( './icon' );\nvar respBg           = require( './respBg' );\nvar Cookies          = require('js-cookie');\n\nvar buildArchive = function( page, data, endpoint, canBeCondensed ){\n  var header = $( '<header class=\"contentHeader contentHeader--archive\">' );\n  if( data.image ) {\n    var hero = $('<figure class=\"heroImg js-respBg\" data-set=\"hero\" data-id=\"'+data.image+'\">');\n  }\n  var feed = $( '<ul class=\"content-feed\"/>' );\n  var load = $( '<button class=\"content-load\">Load More</button>' );\n  var isAbc = false;\n\n  header.append( '<h2>'+decodeURI( data.name )+'</h2>' );\n  if( data.image ){\n    header.append( hero );\n    respBg( hero );\n  }\n\n\n  if( data.items ){\n    for( var i = 0, x = data.items.length; i < x; i++ ){\n      feed.append( buildContentNode( data.items[i] ) );\n    }\n  } else {\n    feed.append( 'Sorry, no results were found.' );\n  }\n\n  page.append( header );\n  if( canBeCondensed ){\n    var btnCondense = $( '<input type=\"radio\" name=\"list-view\" value=\"condense\">' );\n    var btnExplode   = $( '<input type=\"radio\" name=\"list-view\" value=\"explode\">' );\n\n    if( Cookies.get('ARCHIVEVIEW') === 'condense' ){\n      btnCondense.attr( 'checked', 'checked' );\n      feed.addClass( 'content-feed--contracted' );\n    } else {\n      btnExplode.attr( 'checked', 'checked' );\n    }\n\n    btnCondense.click(function(){\n      feed.addClass( 'content-feed--contracted' );\n    });\n\n    btnExplode.click(function(){\n      feed.removeClass( 'content-feed--contracted' );\n    })\n\n    var viewSelect = $('<select name=\"list-order\"/>');\n\n    viewSelect.append('<option value=\"abc_asc\">A-Z</option>');\n    viewSelect.append('<option value=\"abc_desc\">Z-A</option>');\n    viewSelect.append('<option value=\"date_desc\">Date Interviewed</option>');\n    viewSelect.append('<option value=\"publish_desc\">Date Published</option>');\n    viewSelect.append('<option value=\"date_asc\">Date Interviewed (reverse)</option>');\n    viewSelect.append('<option value=\"publish_asc\">Date Published (reverse)</option>');\n\n    var archiveOrder = Cookies.get( 'ARCHIVEORDER' );\n\n    viewSelect.find('[value=\"'+archiveOrder+'\"]').attr('selected', 'selected');\n\n    var listView = $( '<div class=\"listView\"/>' );\n    listView\n      .append( '<span class=\"listView-label\">change view:</span')\n      .append( btnExplode )\n      .append( icon( 'explode', 'listView' ) )\n      .append( btnCondense )\n      .append( icon( 'condense', 'listView' ) )\n      .append( '<span class=\"listView-label\">sort by:</span>' )\n      .append( viewSelect );\n    page.append( listView );\n  }\n\n  page.append( feed );\n\n  if( data.items && data.items.length >= COUNT ){\n    page.append( load );\n  }\n\n  load.data( 'offset', 0 );\n  load.click( function(){\n    load.data( 'offset', load.data( 'offset' ) + 1 );\n    var dest = endpoint === 'search' ? endpoint+'/'+$('body').attr('data-search') : endpoint;\n    var params = '';\n\n    var order = $('[name=\"list-order\"]').val()\n\n    params = '&order=' + order;\n\n    console.log(order)\n\n    var url  = '/wp-json/v1/'+dest+'?count='+COUNT+'&offset=' + ( load.data( 'offset' ) * COUNT )+cachebust(true) + params;\n\n    $.get(url, function(data){\n      for( var i = 0, x = data.items.length; i < x; i++ ){\n        feed.append( buildContentNode( data.items[i] ) );\n      }\n      if( data.items.length < COUNT ){\n        load.hide();\n      }\n    } );\n  } );\n\n  var handleListChange = function(){\n    load.data('offset', 0);\n    var view  = $( 'input[name=\"list-view\"]:checked' ).val();\n    var order = $( 'select[name=\"list-order\"]' ).val();\n\n    Cookies.set( 'ARCHIVEVIEW', view );\n    Cookies.set( 'ARCHIVEORDER', order );\n\n    var dest = endpoint === 'search' ? endpoint+'/'+$('body').attr('data-search')  : endpoint;\n    var url  = '/wp-json/v1/'+dest+'?order=' + order + '&offset=0&count='+COUNT+cachebust(true);\n\n\n    $.get(url, function(data){\n      feed.empty();\n      for( var i = 0, x = data.items.length; i < x; i++ ){\n        feed.append( buildContentNode( data.items[i] ) );\n      }\n      if( data.items.length < COUNT ){\n        load.hide();\n      } else {\n        load.show();\n      }\n    } );\n  }\n\n  if( listView ){\n    listView.click(handleListChange);\n    listView.find('select').change(handleListChange);\n  }\n\n  $( 'body' ).on( 'click', '.content', function(e){\n    var link             = $(this).find('.js-internalLink')\n    var target           = link.attr( 'href' );\n    var _endpoint        = link.attr( 'data-type' );\n    var _queriedObject   = link.attr( 'data-id' );\n  } );\n}\n\nmodule.exports = buildArchive;\n","var cachebust = require('./cachebust');\nvar buildContentNode = require( './buildContentNode' );\nvar icon = require( './icon' );\nvar respImg = require( './respImg' );\n\nvar buildCollectionFeed = function( page, data ){\n  var intro = $( '<div class=\"collection-intro\" />' );\n  var description = $( '<div class=\"collection-description\">'+data.description+'</div>' );\n  var search = $( '<div class=\"collection-introBottom\"><label class=\"collection-searchLabel\" for=\"filter\">Search within this collection</label><span class=\"collection-search\">'+icon( 'search', 'type' )+'<input name=\"filter\" type=\"text\" placeholder=\"Search\" /></span></div>')\n  var feed = $( '<ul class=\"collection\" />' );\n  var content = data.content;\n\n  for( var i = 0, x = content.length; i<x; i++ ){\n    feed.append( buildContentNode( content[i] ) );\n  }\n\n  intro.append( description );\n  intro.append( search );\n  page.append( intro );\n  page.append( feed );\n\n  search.find('input').on( 'keyup', function(e) {\n    const term = $(this).val()\n    const endpoint = `/wp-json/v1/collections/${data.id}?s=${encodeURIComponent(term)}${cachebust(true)}`\n    console.log(endpoint)\n    // after a delay in typing, search\n    window.TIMEOUT = setTimeout( function(){\n      $.get(endpoint, function( results ){\n        var newContent = results.content;\n        feed.empty();\n        for( var i = 0, x = newContent.length; i<x; i++ ){\n          feed.append( buildContentNode( newContent[i] ) );\n          //respImg.load( '.respImg' );\n        }\n      } );\n    }.bind(this), 200 )\n  } ).on( 'submit', function(e){\n    e.preventDefault();\n  } );\n\n\n}\n\nmodule.exports = buildCollectionFeed;\n","var icon = require('./icon');\nvar respBg = require('./respBg');\nvar respImg = require('./respImg');\nvar socialLinks = require('./socialLinks');\nvar eqHeight = require('./eqHeight');\n\nvar buildCollectionHeader = function( page, data ){\n  var header = $('<header class=\"contentHeader contentHeader--collection\" />');\n  var hero = $('<figure class=\"heroImg js-respBg\" data-set=\"hero\" data-id=\"'+data.image+'\">');\n  var inner = $('<div class=\"contentHeader-inner contentHeader-inner--hasBottom\" />');\n  var bottom = $('<div class=\"contentHeader-bottom\" />');\n  var imgWrapper = $('<div class=\"contentHeader-imgWrapper\" />');\n  header.append( hero );\n  bottom.append( '<span class=\"contentHeader-type contentHeader-type--collection\">'+icon( 'collection', 'type' )+'Collection</span>')\n  bottom.append( '<h2 class=\"collection-head\">'+data.name+'</h2>' );\n  inner.append( bottom );\n  imgWrapper.append( respImg.markup( data.image, 'feat_lg', 'respImg contentHeader-img', null, true ) );\n  imgWrapper.append( '<div class=\"shareLinks\">Share this collection'+socialLinks( data.link, data.title, data.description.replace(/(<([^>]+)>)/ig,\"\"), data.description.replace(/(<([^>]+)>)/ig,\"\") )+'</div>')\n  header.append( inner );\n  header.append( imgWrapper );\n  page.append( header );\n  respBg( hero );\n};\n\nmodule.exports = buildCollectionHeader;\n","var internalLink = require('./internalLink');\n\nvar buildCollectionsList = function( collections ){\n  // don't display the word \"the\" if first collection starts with \"the\"\n\n  var the = collections[0].link_text.startsWith('The') ? '' : 'the ';\n\n  var html = '<p class=\"contentHeader-collectionsList\">Part of ' + the + '<strong> ';\n  html +=      internalLink( collections[0], collections[0].link_text );\n  if( collections.length > 2 ){\n    for( var i = 1, x = collections.length - 1; i < x; i++ ){\n      html +=       ', ' + internalLink( collections[i], collections[i].link_text );;\n    }\n  }\n  if( collections.length > 1 ){\n    if( collections.length > 2) html += ', '; //oxford comma\n    html +=     ' <span class=\"contentheader-collectionsAnd\">and</span> ';\n    html +=     internalLink( collections[collections.length - 1], collections[collections.length - 1].link_text );\n  }\n  html +=     '</strong> collection'\n  if( collections.length > 1 ){\n    html +=     's';\n  }\n  html +=     '</p>';\n  return html;\n}\n\nmodule.exports = buildCollectionsList;\n","var icon = require( './icon' );\nvar internalLink = require( './internalLink' );\n\nvar buildConnected = function( related ){\n  var list = $( '<ul class=\"relatedItem-wrapper\"/>' );\n  for( var i = 0, x = related.length; i < x; i++ ){\n    var listItem = $( '<li class=\"relatedItem relatedItem--'+related[i].type+'\" />');\n    listItem.append( internalLink( related[i], icon( related[i].type, 'type' )+related[i].name ) );\n    list.append( listItem );\n  }\n  return list;\n}\n\nmodule.exports = buildConnected;\n","var icon = require( './icon' );\nvar internalLink = require( './internalLink' );\nvar respImg = require( './respImg' );\n\nvar buildContentNode = function( data ){\n  var content = $( '<article class=\"content content--'+data.type+'\" data-id=\"'+data.id+'\"/>' );\n  var inner = $( '<div class=\"content-inner\" />' );\n  inner.append(  '<span class=\"content-type\">'+icon(data.type, 'type')+' '+data.type.replace('-', ' ')+'</span>' );\n  inner.append(  '<h3 class=\"content-head\">'+data.title+'</h3>' );\n  if( data.excerpt ){\n    inner.append(  '<div class=\"content-excerpt\">'+data.excerpt+'</div>' );\n  }\n  inner.append(  '<div class=\"content-link\">View The '+data.type+' '+icon( 'right', 'link' )+'</div>' );\n  content.append( inner );\n\n  if(data.img_set){\n    var img = '';\n    img += '<img src=\"'+data.img_set.sizes.md+'\" class=\"respImg-none\" ';\n    if( data.img_set.alt )     img += 'alt=\"'+data.img_set.alt+'\" ';\n    if( data.img_set.caption ) img += 'data-caption=\"'+data.img_set.caption+'\" ';\n    if( data.img_set.group )   img += 'data-group=\"'+data.img_set.group+'\" ';\n    img += ' />';\n\n    content.append('<div class=\"content-imgWrapper\">'+img+'</div>');\n  }\n\n  return internalLink( data, content[0].outerHTML );\n};\n\nmodule.exports = buildContentNode\n","var buildCollectionsList = require('./buildCollectionsList');\nvar buildConnected = require('./buildConnected');\nvar icon = require('./icon');\nvar scrollIndicator = require('./scrollIndicator');\nvar socialLinks = require('./socialLinks');\n\nvar buildInterviewsHeader = function(wrapper, data){\n\n  var outer = $('<div class=\"contentHeaderOuter\" />');\n  var header = $('<header class=\"contentHeader contentHeader--interview\"/>');\n  var inner = $('<div class=\"contentHeader-inner\" />');\n  var imgWrapper = $('<div class=\"contentHeader-imgWrapper\" />');\n\n  header.append( '<span class=\"contentHeader-type\">'+icon('interview', 'type')+'Interview</span>');\n\n  //inner.append('<button class=\"contentHeader-backToTop\" data-action=\"top\">Back to top</button>');\n  inner.append('<h2 class=\"contentHeader-head\">'+data.name+'</h2>');\n\n  if(data.collections){\n    var collections = buildCollectionsList(data.collections);\n    inner.append(collections);\n  }\n\n  if(data.introduction){\n    inner.append('<div class=\"contentHeader-introduction\">'+data.introduction+'</div>');\n  }\n\n  if(data.related){\n    var related = buildConnected(data.related);\n    inner.append('<h3 class=\"contentHeader-relatedHead\">Related to</h3>');\n    inner.append(related);\n  }\n\n  inner.append('<span class=\"contentHeader-selectWrapper\" id=\"selectwrap-'+data.id+'\" style=\"display:none;\"><select class=\"contentHeader-select\" id=\"select-'+data.id+'\"><option value=\"null\">Contents</option></select></span>');\n\n  var video = $('<video data-able-player data-youtube-id=\"'+data.video_id+'\" data-youtube-playsinline>');\n\n  if(data.transcript_url){\n    video.attr('data-transcript-src', 'transcript-'+data.id);\n    video.append('<track kind=\"captions\" src=\"'+data.transcript_url+'\"/>');\n  }\n\n  if(data.description_url){\n    video.append('<track kind=\"descriptions\" src=\"'+data.description_url+'\"/>');\n  }\n\n  header.append(inner);\n\n  if(data.video_id){\n    imgWrapper.append('<span class=\"contentHeader-toggleVid\" data-action=\"toggle\" data-target=\".contentHeader-imgWrapper\"><label for=\"toggleVid\">Video Display:</label><select id=\"toggleVid\"><option>Small</option><option>Medium</option><option>Large</option><option>Hidden</option></select></span >')\n    imgWrapper.append(video)\n    imgWrapper.append('<a class=\"able-fake-pause\"></a><div class=\"contentHeader-searchwrap\"><input class=\"contentHeader-search\" id=\"video-search\" placeholder=\"Search transcript, annotations & descriptions...\"></div>')\n  }\n\n  imgWrapper.append('<div class=\"shareLinks\">Share this interview'+socialLinks(data.link, data.title, data.introduction.replace(/(<([^>]+)>)/ig,\"\"), data.introduction.replace(/(<([^>]+)>)/ig,\"\"))+'</div>');\n\n  header.append(imgWrapper);\n  header.append(scrollIndicator.add('.transcript'));\n  outer.append(header);\n  wrapper.append(outer);\n}\n\nmodule.exports = buildInterviewsHeader;\n","var cachebust = require('./cachebust');\nvar eqHeight = require( './eqHeight' );\nvar icon = require( './icon' );\nvar internalLink = require( './internalLink' );\n\nvar buildOtherInCollection = function( page, id, collection ){\n  $.get( '/wp-json/v1/collections/'+collection.id+'/?count=3&not='+id+cachebust(true), function(data){\n    if ( !data.content.length ) return;\n    var others = $( '<div class=\"others\" />' );\n    others.append( '<h3 class=\"others-head\">Other interviews and timelines in the <strong>' + data.name + '</strong> collection</h3>' );\n    for( var i = 0, x = data.content.length; i < x; i++ ){\n      var html = '<article class=\"others-single others-single--' + data.content[i].type + '\">';\n      html +=   '<span class=\"others-singleType\">'+icon( data.content[i].type, 'type' ) + ' ' + data.content[i].type + '</span>'\n      html +=   '<h4 class=\"others-singleHead\">' + data.content[i].title + '</h4>';\n      html +=   '<p class=\"others-singleDescription\">'+data.content[i].excerpt;\n      html +=   internalLink( data.content[i], 'View the '+data.content[i].type + ' ' + icon( 'right', 'link' ) )+'</p>';\n      html += '</article>';\n      others.append( html );\n    }\n    others.append( '<div class=\"others-wrap\"><div class=\"others-link\">' + internalLink( collection, 'View The Collection' + icon( 'right', 'link' ) ) + '</div></div>' );\n    page.append(others);\n    eqHeight( '.others-single' );\n  } );\n}\n\nmodule.exports = buildOtherInCollection;\n","var cachebust = require('./cachebust')\nvar animatePage           = require('./animatePage')\nvar buildArchive          = require('./buildArchive')\nvar buildCollectionHeader = require('./buildCollectionHeader')\nvar buildCollectionFeed   = require('./buildCollectionFeed')\nvar buildTimeline         = require('./buildTimeline')\nvar buildTimelineHeader   = require('./buildTimelineHeader')\nvar buildInterviewsHeader = require('./buildInterviewsHeader')\nvar buildOtherInCollection = require('./buildOtherInCollection')\nvar buildTranscript       = require('./buildTranscript')\nvar buildSupp             = require('./buildSupp')\nvar eqHeight              = require('./eqHeight')\nvar socialHighlight       = require('./socialHighlight')\nvar stickyHeader          = require('./stickyHeader')\nvar syncAblePlayer        = require('./syncAblePlayer')\nvar respBg                = require('./respBg')\nvar respImg               = require('./respImg')\nvar Cookies               = require('js-cookie')\n\nvar buildPage = function(wrapper, endpoint, queriedObject, dir){\n  console.log(endpoint, queriedObject)\n\n  $('[data-action=\"jumpToActive\"], .socialPopup').remove() // shouldn't have to do this but we do\n\n  clearInterval(JUMPTOACTIVE) // from syncAblePlayer – stop polling went creating new page\n\n  var page = $('<article class=\"page\"/>')\n\n  $('body').attr('data-endpoint', endpoint)\n  $('body').attr('data-id', queriedObject)\n\n  if(queriedObject === 'archive'){\n    if(endpoint === 'search'){\n      var term = $('body').attr('data-search')\n      document.title = 'Search for '+term\n      $.get('/wp-json/v1/'+endpoint+'/'+term+'?count='+COUNT+'&offset=0'+cachebust(true), function(data){\n        buildArchive(page, data, endpoint)\n        animatePage(wrapper, page, dir, function(){\n          respImg.load('.respImg')\n        })\n      })\n    }\n    else {\n      if(endpoint === 'rich-text') {\n        document.title = 'Rich Text'\n      }\n      else {\n        document.title = endpoint.charAt(0).toUpperCase() + endpoint.slice(1)\n      }\n      if(endpoint === 'interviews'){\n        var order = Cookies.get('ARCHIVEORDER')\n        var url = '/wp-json/v1/'+endpoint+'?order=' + order + '&count='+COUNT+cachebust(true)\n        $.get(url, function(data){\n          buildArchive(page, data, endpoint, (endpoint === 'interviews'))\n          animatePage(wrapper, page, dir, function(){\n            respImg.load('.respImg')\n          })\n        })\n      } else {\n        const url = '/wp-json/v1/'+endpoint+'?count='+COUNT+'&offset=0'+cachebust(true)\n        console.log(url)\n        $.get(url, function(data){\n          buildArchive(page, data, endpoint, (endpoint === 'interviews'))\n          animatePage(wrapper, page, dir, function(){\n            respImg.load('.respImg')\n          })\n        })\n      }\n    }\n  } else {\n    const url = `/wp-json/v1/${endpoint}/${queriedObject}`+cachebust()\n    $.get(url, function(data){\n      if(data.name) document.title = data.name\n      DESCRIPTION = data.description\n      if(endpoint === 'timelines'){\n        buildTimelineHeader(page, data)\n        buildTimeline(page, data.events, data.intro, function(){\n          if(window.location.hash){\n            var hash = window.location.hash\n            setTimeout(function(){\n              $('body, html').scrollTop($(hash).offset().top)\n            }, TRANSITIONTIME)\n          }\n        })\n      }\n      else if(endpoint === 'interviews'){\n        buildInterviewsHeader(page, data)\n        buildTranscript(page, data.id, function(transcript){\n          socialHighlight('.transcript')\n          buildSupp(page, endpoint, queriedObject, function(supp){\n            if(data.collections.length){\n              buildOtherInCollection(page, data.id, data.collections[0])\n            }\n            syncAblePlayer(transcript, data.id, supp)\n          }, transcript)\n          stickyHeader(page, '.contentHeaderOuter', '.contentHeader-inner')\n        })\n      }\n      else if(endpoint === 'rich-text') {\n        console.log('rich text!')\n        buildTimelineHeader(page, data)\n        buildTranscript(page, data.id, function(transcript) {\n          socialHighlight('.transcript')\n          buildSupp(page, endpoint, queriedObject, function() {\n            if(data.collections.length) {\n              buildOtherInCollection(page, data.id, data.collections[0])\n            }\n          }, transcript)\n        })\n      }\n      else if(endpoint === 'collections'){\n        buildCollectionHeader(page, data)\n        buildCollectionFeed(page, data)\n      }\n\n      animatePage(wrapper, page, dir, function(){\n        if(endpoint === 'timelines' && $('.respImg').length < 1){\n          buildSupp(page, endpoint, queriedObject, function(){\n            if(data.collections.length){\n              buildOtherInCollection(page, data.id, data.collections[0])\n            }\n          }, true)\n          return\n        }\n\n        respImg.load('.respImg', function(){\n          // run this as a callback so that height can be based on returned images\n          if(endpoint === 'timelines'){\n            buildSupp(page, endpoint, queriedObject, function(){\n              if(data.collections.length){\n                buildOtherInCollection(page, data.id, data.collections[0])\n              }\n            }, true)\n          }\n        })\n        eqHeight('.others-single')\n      })\n\n    })\n  }\n\n}\n\nmodule.exports = buildPage\n","var cachebust = require('./cachebust');\nvar buildSuppInner = require( './buildSuppInner' );\nvar getUrlWithNoHash = require( './getUrlWithNoHash' );\nvar icon = require( './icon' );\nvar internalLink = require( './internalLink' );\nvar socialLinks = require( './socialLinks' );\nvar syncTimestamps = require( './syncTimestamps' );\n\nvar buildSupp = function( page, endpoint, queriedObject, callback, mainContentExists ){\n\n  var aside = $( '<aside class=\"suppCont\" />' );\n\n\n  $.get( '/wp-json/v1/'+endpoint+'/'+queriedObject+'/supp'+cachebust(), function(data){\n\n    // ensure that repeated timestamps nest all content inside themselves\n    var timestamps = {};\n    var unmatched = [];\n    var index = 0;\n\n    $(data).each( function(){\n      var timestamp = this.timestamp.toString()\n      if( timestamp || timestamp === 0 && mainContentExists ){\n        timestamps[timestamp] = timestamps[timestamp] || [];\n        timestamps[timestamp].push( {\n          type: this.type,\n          data: this.data,\n          open: this.open\n        } );\n      } else {\n        unmatched.push( {\n          type: this.type,\n          data: this.data\n        } );\n      }\n    } );\n\n    for( var timestamp in timestamps ){\n      var asideInner = $( '<ul class=\"suppCont-inner\" data-timestamp=\"'+timestamp+'\" />' );\n      for( var i = 0, x = timestamps[timestamp].length; i<x; i++ ){\n        var content = timestamps[timestamp][i]\n        var suppContSingle = $( '<li tabindex=\"0\" data-opendefault=\"'+content.open+'\" data-action=\"expand\" data-supp=\"'+index+'\" class=\"suppCont-single suppCont-single--'+content.type+'\"/>' )\n        var inner = ''\n        var innerContent = buildSuppInner(content)\n        var preview = innerContent.preview\n        var cont = innerContent.cont\n\n        suppContSingle.append( '<button class=\"suppCont-expand suppCont-expand--type\" data-action=\"close-type\">'+icon( content.type, 'suppExpand' )+'</button>' );\n        if( content.class ) suppContSingle.addClass( 'suppCont-single--'+content.class );\n        var inner =  '<div class=\"suppCont-singleInner\">';\n        inner +=        '<div data-suppcont=\"'+preview+'\" class=\"suppCont-preview\" aria-hidden>' + preview + '</div>';\n        inner +=        '<div class=\"suppCont-content\">'+cont;\n        inner +=        '<div class=\"suppCont-share\">Share this';\n        inner +=          socialLinks( getUrlWithNoHash() + '#sc-'+index++, innerContent.preview, window.DESCRIPTION );\n        inner +=        '</div>';\n        inner +=      '</div></div\">';\n        suppContSingle.append( inner );\n        suppContSingle.append( '<button data-action=\"close\" class=\"suppCont-expand\">'+ icon( 'expand', 'suppExpand' ) + '</button>' );\n        asideInner.append( suppContSingle );\n      }\n      aside.append( asideInner )\n    } // end for...in\n\n    if( mainContentExists ) page.append( aside );\n\n    if( unmatched.length ){\n      var type = 'content'; // sanity check\n      if( endpoint === 'timelines' ){\n        type = 'timeline';\n      } else if( endpoint === 'interviews' ){\n        type = 'interview';\n      }\n      var unmatchedWrapper = $( '<section class=\"unmatched\" />');\n      var unmatchedList = $( '<ul class=\"unmatched-list\" />' );\n      for( var item in unmatched ){\n        var content = unmatched[item];\n        var unmatchedItem = $( '<li class=\"unmatched-item unmatched-item--'+content.type+'\" />')\n        var label = function( content ){\n          switch( content.type ){\n            case 'text':\n              return content.data.content;\n            case 'blockquote':\n              return content.data.quote;\n            default:\n              return content.data.title;\n          }\n        }\n        var innerContent = buildSuppInner( content ).cont;\n        unmatchedItem.append( icon( content.type, 'type' ) + ' ' + label( content ) );\n        unmatchedList.append( unmatchedItem );\n        unmatchedItem.featherlight( {\n          html: '<div class=\"suppCont-lightbox\"><div class=\"suppCont-content\">'+innerContent+'</div></div>',\n          afterContent: function(){\n            $( 'body' ).css( 'overflow', 'hidden' );\n            $( '.featherlight-close-icon' ).html( icon( 'contract', 'suppContent-lightboxClose' )  );\n          },\n          afterClose: function(){\n            //restore body scrolling\n            $( 'body' ).css( 'overflow', '' );\n          }\n        } );\n      }\n      unmatchedWrapper.append( '<h3 class=\"unmatched-head\">Additional content related to this ' + type + '</h3>' );\n      unmatchedWrapper.append( unmatchedList );\n      page.append( unmatchedWrapper );\n\n    }\n\n    if( endpoint === 'interviews' ){\n      syncTimestamps( '.suppCont-inner', '.transcript-node', '.transcript' );\n    } else if( endpoint === 'timelines' ){\n      syncTimestamps( '.suppCont-inner', '.event', '.timeline' );\n    }\n\n    if( callback ) callback({\n      timestamps,\n      unmatched\n    });\n\n  } );\n}\n\nmodule.exports = buildSupp;\n","var icon = require( './icon' );\nvar internalLink = require( './internalLink' );\nvar respImg = require( './respImg' );\n\nvar buildSuppInner = function( content ){\n\n  var preview = '';\n  var cont = '';\n\n  switch( content.type ){\n    case 'blockquote':\n      preview = content.data.quote;\n      cont =  '<blockquote data-suppcont=\"'+content.data.quote+'\" class=\"suppCont-quote\">'+content.data.quote+'&rdquo;';\n      cont +=  '<footer data-suppcont=\"'+content.data.attribution+'\" class=\"suppCont-attribution\">&mdash; '+content.data.attribution+'</footer>';\n      cont += '</blockquote>';\n      break;\n    case 'externallink':\n      preview = content.data.title;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      if( content.data.description ) cont += '<p data-suppcont=\"'+content.data.description+'\">'+content.data.description+'</p>';\n      cont += '<a target=\"_blank\" href=\"' + content.data.link_url + '\">';\n      cont +=  ( content.data.link_text || 'Visit Link' ) + icon( 'right', 'link' );\n      cont += '</a>';\n      content.type = 'link';\n      break;\n    case 'file':\n      preview = content.data.title;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      if( content.data.description ) cont += '<p data-suppcont=\"'+content.data.description+'\">'+content.data.description+'</p>';\n      cont += '<a target=\"_blank\" href=\"' + content.data.file + '\">';\n      cont +=  'Download ' + icon( 'right', 'link' );\n      cont += '</a>';\n      break;\n    case 'gallery':\n      preview = content.data.title;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      if( content.data.description ) cont += '<p data-suppcont=\"'+content.data.description+'\">'+content.data.description+'</p>';\n      cont += '<div class=\"suppCont-gallery\">';\n      for( var i = 0, x = content.data.imgs.length; i < x; i++ ){\n        var img = content.data.imgs[i];\n        cont += '<span class=\"suppCont-galleryImage\">';\n        cont += respImg.markup( img.img_id, 'feat_xs', 'respImg-defer', {\n          alt: img.alt,\n          caption: img.caption,\n          group: content.data.title\n        } );\n        cont += '</span>';\n      }\n      cont += '</div>'\n      break;\n    case 'image':\n      preview = content.data.title;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      cont += respImg.markup( content.data.img_id, 'feat_sm', 'respImg-defer', {\n        alt: content.data.alt,\n        caption: content.data.caption\n      } );\n      if( content.data.caption ) cont += '<p data-suppcont=\"'+content.data.caption+'\">'+content.data.caption+'</p>';\n      break;\n    case 'internallink':\n      preview = content.data.title;\n      content.type = content.data.type;\n      content.class = content.data.type;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      cont += respImg.markup( content.data.feat_img, 'feat', 'respImg-defer gallery-single' );\n      cont += '<p data-suppcont=\"'+(content.data.link_description || content.data.description)+'\">'+(content.data.link_description || content.data.description)+'</p>';\n      cont += internalLink( content.data, 'View ' + content.type + icon( 'right', 'link' ) );\n      break;\n    case 'map_location':\n      var zoom = content.data.zoom || 17;\n      var map_url = 'https://maps.googleapis.com/maps/api/staticmap?center='+content.data.coords.lat+','+content.data.coords.lng+'&size=600x300&zoom='+zoom+'&markers=color:red%7C'+content.data.coords.lat+','+content.data.coords.lng+'&key='+MAPS_APP_ID; // TODO: make API key a site option\n      preview = content.data.title;\n      cont += '<span data-suppcont=\"'+content.data.title+'\" class=\"suppCont-contentTitle\">'+content.data.title+'</span>';\n      cont += '<img src=\"' + map_url + '\" alt=\"Map of '+content.data.title+'\" />';\n      break;\n    case 'text':\n      var tempHtml = document.createElement('div');\n      tempHtml.innerHTML = content.data.content;\n      preview = tempHtml.textContent || tempHtml.innerText\n      cont = '<div data-suppcont=\"'+content.data.content+'\">'+content.data.content+'</div>'\n      break;\n  }\n\n  return {\n    preview: preview,\n    cont: cont\n  }\n}\n\nmodule.exports = buildSuppInner;\n","var icon = require('./icon');\nvar respImg = require('./respImg');\nvar socialLinks = require('./socialLinks');\n\nvar buildTimeline = function ( wrapper, events, intro, callback ){\n  var intro = $( '<div class=\"content-intro\">'+intro+'</div>' );\n  var timeline = $( '<ul class=\"timeline\"/>' );\n  wrapper.append( intro );\n  wrapper.append( timeline );\n\n  $(events).each( function(i){\n    var eventHtml = '';\n    eventHtml += '<li id=\"'+i+'\" class=\"event\" data-start=\"'+this.event_date+'\">';\n    eventHtml += '<span class=\"event-dot\"></span>';\n    eventHtml   += '<date class=\"event-date\">'+this.event_date+'</date>';\n    eventHtml   += '<h3 class=\"event-head\">'+this.title+'</h3>';\n    if( this.image ){\n      eventHtml += '<div class=\"event-imageWrapper\">';\n      eventHtml += respImg.markup( this.image, 'feat_lg', 'respImg', null, true );\n      eventHtml += '</div>'\n    }\n    if( this.content.length ){\n      eventHtml += '<div class=\"event-content\">'+this.content+'</div>';\n    }\n    if( this.content_link ){\n      eventHtml += '<a class=\"js-internalLink relatedItem relatedItem--'+this.content_link_type+'\"';\n      eventHtml += ' data-type=\"'+this.content_link_type+'s\" ';\n      eventHtml += ' data-id=\"'+this.content_link_id+'\" ';\n      eventHtml += 'href=\"'+this.content_link+'\">'+icon( this.content_link_type, 'type' )+' '+this.content_link_text+'</a>';\n    }\n    eventHtml += '<div class=\"event-social\">'+socialLinks( window.location.href.split('#')[0]+'#'+i, this.title, this.content )+'</div>';\n    eventHtml += '</li>';\n    var eventHtml = $( eventHtml );\n    timeline.append( eventHtml );\n    eventHtml.addClass('loaded');\n  } );\n  callback();\n}\n\nmodule.exports = buildTimeline;\n","var buildCollectionsList = require('./buildCollectionsList');\nvar buildConnected = require('./buildConnected');\nvar icon = require('./icon');\nvar respImg = require( './respImg' );\nvar socialLinks = require('./socialLinks');\n\nvar buildTimelineHeader = function ( wrapper, data ){\n  var header = $( '<header class=\"contentHeader contentHeader--timeline\"/>' );\n  var inner = $( '<div class=\"contentHeader-inner\" />' );\n  var imgWrapper = $('<div class=\"contentHeader-imgWrapper\" />');\n  header.append(  '<span class=\"contentHeader-type\">'+icon( data.type, 'type' )+(data.type === 'rich-text' ? 'Rich Text': 'Timeline')+'</span>' );\n  inner.append( '<h2 class=\"contentHeader-head\">'+data.name+'</h2>' );\n\n  if( data.collections ){\n    var collections = buildCollectionsList( data.collections );\n    inner.append( collections );\n  }\n\n  if(data.introduction){\n    inner.append('<div class=\"contentHeader-introduction\">'+data.introduction+'</div>');\n  }\n\n  if( data.related ){\n    var related = buildConnected( data.related );\n    inner.append( '<h3 class=\"contentHeader-relatedHead\">Related to</h3>' );\n    inner.append( related );\n  }\n\n  header.append( inner );\n\n  if( data.image ){\n    imgWrapper.append( respImg.markup( data.image, 'feat_lg', 'respImg contentHeader-img', null, true ) );\n  }\n\n  var intro = data.intro || data.introduction || ''\n  imgWrapper.append('<div class=\"shareLinks\">Share this collection'+socialLinks(\n    data.link,\n    data.title,\n    intro.replace(/(<([^>]+)>)/ig,\"\"),\n    intro.replace(/(<([^>]+)>)/ig,\"\")\n  )+'</div>')\n  header.append( imgWrapper );\n  wrapper.append( header );\n}\n\nmodule.exports = buildTimelineHeader;\n","var cachebust             = require('./cachebust');\nvar buildTranscriptMarkup = require('./buildTranscriptMarkup');\nvar highlightTranscript   = require('./highlightTranscript');\nvar highlightSuppCont     = require('./highlightSuppCont');\nvar Cookies               = require('js-cookie');\n\nvar buildTranscript = function( wrapper, id, cb ){\n\n  var outer = $( '<section class=\"able-transcript-area transcript\" id=\"transcript-'+id+'\">' );\n  var transcript = $( '<div id=\"transcript-inner\" class=\"able-transcript\" />' );\n  var callback = cb || false;\n\n  let getUseDescription = (init) => {\n    if(init){\n      const cookies = Cookies.get('Able-Player')\n      if(!cookies) return false\n\n      const json = JSON.parse(cookies)\n      return json.preferences && json.preferences.prefDesc\n    } else {\n      return !$('.able-button-handler-descriptions').hasClass('buttonOff')\n    }\n  }\n\n  let getNodes = () => null\n\n  // Window scoped variables for quick fix\n  window.JUMPTOINIT = false\n  const onEachNode = (node) => {\n    window.JUMPTO = $('#select-'+id)\n    if(node.type === 'section_break'){\n      JUMPTO.append(`<option value=\"${node.start}\">${node.contents}</option>`)\n      if(!JUMPTOINIT){\n        window.JUMPTOINIT = true\n        JUMPTO.parent().show()\n        JUMPTO.on( 'change', function(){\n          var val = $(this).val();\n          var offset = 0;\n          if( val === 'default' ){\n            $('body,html').animate( {\n              scrollTop: 0\n            }, TRANSITIONTIME*2 );\n            return;\n          }\n          var offset = ( $(window).width() >= 568 ) ? $( '.contentHeaderOuter' ).height() + 16 : 0;\n          $('body,html').animate( {\n            scrollTop: $('.transcript-section[data-timestamp=\"'+val+'\"]').offset().top - offset\n          }, TRANSITIONTIME );\n          setTimeout( function(){\n            offset = offset - jumpto.height();\n            $('body,html').animate( {\n              scrollTop: $('.transcript-section[data-timestamp=\"'+val+'\"]').offset().top - offset\n            }, TRANSITIONTIME/2 );\n          }, TRANSITIONTIME )\n        });\n      }\n    }\n  }\n\n  const url = '/wp-json/v1/interviews/'+id+'/transcript?return=transcript_contents'+cachebust(true)\n\n  $.get(url, function( data ){\n\n    getNodes = () => data\n\n    if( !data ){\n      if( callback ) callback( data );\n      return;\n    }\n\n\n    const html = buildTranscriptMarkup(data, {\n      onEach: onEachNode,\n      useDescription: getUseDescription(true)\n    })\n\n    JUMPTO.append( '<option value=\"default\">Back to top</option>' );\n    transcript.append( html );\n    outer.append( transcript );\n    outer.append( '<div class=\"able-window-toolbar\" />' );\n    wrapper.append( '<div class=\"transcript-instructions\">'+window.INSTRUCTIONS+'</div>' );\n    wrapper.append( outer );\n    if( callback ) callback( data );\n  } );\n\n  // Rebuild on descriptions\n  $('body').on('click', '.able-button-handler-descriptions', () =>{\n    const html = buildTranscriptMarkup(getNodes(), {\n      onEach: onEachNode,\n      useDescription: getUseDescription()\n    })\n    transcript.html(html)\n  })\n\n  // Rebuild on search\n  let initDebuff = false\n  $('body').on('keyup', '#video-search', function(){\n    window.SEARCHDEBUFF = setTimeout(() => {\n      const value = $(this).val()\n      const keyword = (value.length > 2) ? value : false\n      highlightTranscript(transcript, '[data-node]', keyword)\n      highlightSuppCont('.suppCont-single', '[data-suppcont]', keyword)\n    }, 500)\n  })\n}\n\nmodule.exports = buildTranscript;\n","const buildTranscriptMarkup = (data, {\n  onEach,\n  onComplete,\n  useDescription\n}) => {\n  if(!data) return\n\n  let paragraphInit = true;\n  let paragraphOpen = false;\n  const html = data.reduce((acc, node) => {\n    let markup = '';\n    let replaced = false\n\n    const quotes = (string) => string.replace(/\"/g, '\\'')\n\n    switch(node.type){\n      case 'description':\n        if(useDescription){\n          markup += paragraphOpen ? '</div>' : '';\n          markup += `<div data-node=\"${node.contents}\" class=\"transcript-description\">${node.contents}</div>`;\n        }\n        break;\n      case 'paragraph_break':\n        markup += paragraphInit ? '<div class=\"able-transcript-block\">' : '</div>';\n        markup += paragraphOpen ? '<div class=\"able-transcript-block\">' : '';\n        paragraphInit = false;\n        paragraphOpen = !paragraphOpen;\n        break;\n      case 'section_break':\n        markup += paragraphOpen ? '</div>' : '';\n        markup += `<div data-node=\"${quotes(node.contents)}\" data-highlight=\"transcript\" class=\"transcript-section able-unspoken\" data-timestamp=\"${node.start}\">${node.contents}</div>`;\n        break;\n      case 'speaker_break':\n        markup += paragraphOpen ? '</div>' : '';\n        markup += `<div data-node=\"${quotes(node.contents)}\" data-highlight=\"next\" class=\"transcript-speaker able-unspoken\">${node.contents}</div>`;\n        break;\n      case 'transcript_node':\n        const contents = node.contents.replace('href', 'target=\"_blank\" href')\n        markup = `<span data-node=\"${quotes(node.contents)}\" tabindex=\"0\" class=\"able-transcript-seekpoint able-transcript-caption transcript-node\" data-highlight=\"transcript\" data-start=\"${node.start}\" data-end=\"${node.end}\">${contents}</span>&nbsp;`;\n        break;\n    }\n\n    if(typeof onEach === 'function') onEach(node)\n    return acc + markup;\n  }, '')\n  return html;\n}\n\nmodule.exports = buildTranscriptMarkup\n","var cachebust = function(hasArgs){\n  return (hasArgs ? '&' : '?') + 'c=' + Date.now();\n}\n\nmodule.exports = cachebust;\n","var destroyPage = function( wrapper, dir ){\n  var prev = wrapper.find( '.page:eq(0)' );\n  if( !IGNOREDIR ){\n    prev.css( {\n      'position': 'absolute',\n      'top '  : wrapper.offset().top,\n      'left'  : wrapper.offset().left,\n      'width' : wrapper.width()\n    } );\n    prev.addClass( 'pageTrans pageTrans--'+dir );\n    wrapper.css( 'min-height', wrapper.height() );\n    setTimeout( function(){\n      prev.remove();\n    }, TRANSITIONTIME );\n  } else {\n    prev.remove();\n  }\n}\n\nmodule.exports = destroyPage;\n","var eqHeight = function( target, cb ){\n  var height = 0;\n  var callback = cb || false;\n  var eq = function(){\n    height = 0;\n    $(target).css( 'height', '' );\n    $(target).each( function(){\n      var _height = $(this).height();\n\n      if( _height > height ) height = _height;\n\n      if( callback ) callback();\n    } );\n\n    $( target ).each( function(){\n      $(this).css( 'height', height );\n    } )\n  };\n\n  eq();\n  $( window ).resize( eq );\n\n}\n\nmodule.exports = eqHeight;\n","var getUrlWithNoHash = function(){\n  return window.location.href.split('#')[0];\n}\n\nmodule.exports = getUrlWithNoHash;\n","var respImg = require( './respImg' )\n\nvar highlightSuppCont = (nodes, subnodes, highlight) => {\n  const HIGHLIGHT = new RegExp(`(${highlight})`, 'ig')\n  $(nodes).each(function(){\n    const $subnodes = $(this).find(subnodes)\n    let isMatchAll = false\n    $subnodes.each(function(){\n      const text = $(this).attr('data-suppcont')\n      const isMatch = text.match(HIGHLIGHT)\n      if(isMatch) {\n        isMatchAll = true\n        $(this).html(text.replace(\n          new RegExp(`(${highlight})`, 'ig'),\n      '<span class=\"transcript-highlight\">$1</span>'\n        ))\n      } else {\n        $(this).html(text)\n      }\n    })\n\n    if(isMatchAll){\n      $(this).addClass('expand')\n      $(this).find('[data-action=\"close\"] use').attr('xlink:href', '#contract')\n      const $img = $(this).find('.respImg-defer')\n      respImg.load($img)\n    } else {\n      $(this).removeClass('expand')\n      $(this).find('[data-action=\"close\"] use')\n      .attr( 'xlink:href', '#expand')\n    }\n  })\n\n}\n\nmodule.exports = highlightSuppCont\n","var highlightTranscript = (transcript, selector, highlight) => {\n  const nodes = transcript.find(selector)\n\n  $(nodes).each(function(){\n    const text = $(this).attr('data-node')\n    const html = $(this).html()\n\n    if(!highlight){\n      $(this).html(text)\n      return\n    }\n\n    const replaced = text.replace(\n      new RegExp(`(${highlight})`, 'ig'),\n      '<span class=\"transcript-highlight\">$1</span>'\n    )\n\n    // prevent unnecessary DOM mutations\n    if(replaced === text){\n      $(this).html(text)\n      return\n    }\n\n    if(replaced === html){\n      return\n    }\n\n    $(this).html(replaced)\n  })\n\n}\n\nmodule.exports = highlightTranscript\n","var icon = function( id, className ){\n  var className = className || false;\n  if( id === 'condense' || id === 'explode' ){ // handle mis-scaled svgs\n    return '<svg class=\"icon' + ( className ? ' icon--'+className : '' ) +'\" viewBox=\"0 0 72 72\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#'+id+'\"></use></svg>';\n  }\n  return '<svg class=\"icon' + ( className ? ' icon--'+className : '' ) +'\" viewBox=\"0 0 128 128\"><use xmlns:xlink=\"http://www.w3.org/1999/xlink\" xlink:href=\"#'+id+'\"></use></svg>';\n}\n\nmodule.exports = icon;\n","var internalLink = function( content, inner ){\n  const type = content.type + (content.type === 'rich-text' ? '' : 's') // TODO: Clean this up\n  var item =  '<a class=\"js-internalLink\"';\n  item += ' data-type=\"'+type+'\" ';\n  item += ' data-id=\"'+content.id+'\" ';\n  item += 'href=\"'+content.link+'\">'+inner+'</a>';\n  return item;\n}\n\nmodule.exports = internalLink;\n","var cachebust = require('./cachebust');\n\nvar respBg = function( elem ){\n  var id = elem.attr( 'data-id' );\n  var set = elem.attr( 'data-set' );\n  var getSize = function(){\n    var w = $(window).width();\n    if( w >= 1200) return 'lg';\n    if( w >= 992 ) return 'md';\n    if( w >= 768 ) return 'sm';\n    return 'xs';\n  };\n\n\n  $.get( '/wp-json/v1/images/'+id+'/'+set+'_'+getSize()+cachebust(), function( data ){\n    elem.css( 'background-image', 'url('+data.requested+')' );\n  } );\n\n}\n\nmodule.exports = respBg;\n","window.featherlight = require( './thirdparty/featherlight.min' );\nwindow.featherlightGallery = require( './thirdparty/featherlight.gallery.min.js' );\n\nvar cachebust = require('./cachebust');\nvar internalLink = require( './internalLink' );\n\nvar respImg = {\n\n  /*\n   * info {\n   *  alt\n   *  caption\n   *  group\n   * }\n   */\n  markup: function( id, size, className, info, hasExtCredit, link ){\n    if( info ){\n      var alt = info.alt || false;\n      var caption = info.caption || false;\n      var group = info.group || false;\n    }\n    var img = '';\n    img += '<img src=\"#\" class=\"'+className+'\" ';\n    img += 'data-size=\"'+size+'\" ';\n    img += 'data-src=\"'+id+'\" ';\n    if( alt )     img += 'alt=\"'+alt+'\" ';\n    if( caption ) img += 'data-caption=\"'+caption+'\" ';\n    if( group )   img += 'data-group=\"'+group+'\" ';\n    if( hasExtCredit ) img += 'data-showcredit';\n    img += ' />';\n    if( link ) return internalLink( link, img );\n    return img;\n  },\n\n  load: function( className, cb ){\n    var callback = cb || false;\n    var images = $( className );\n\n    var creditMarkup = function( info, className ){\n      var credit = '';\n      if( info.author && info.author.length ){\n        credit += '<span class=\"'+className+'\">Photo credit: ';\n        if( info.src.length ){\n          credit += '<a href=\"'+info.src+'\">'\n        }\n        credit += info.author;\n        if( info.src.length ){\n          credit += '</a>'\n        }\n        credit += '</span>';\n        return credit;\n      } else {\n        return '';\n      }\n    }\n\n    images.each( function( i ){\n      var src = $(this).attr( 'data-src' );\n      var size = $(this).attr( 'data-size' );\n      $.get( '/wp-json/v1/images/'+src+'/'+size+cachebust(), function( data ){\n\n        // data returns an object with four properties:\n        // requested = resized img\n        // original = full size img\n        // caption = img caption\n        // creds { name, url }\n        var temp = new Image(); // empty img\n\n        temp.onload = function(){ //when empty img has loaded, load img for actual element\n\n          $(this).attr( 'src', data.requested );\n          $(this).attr( 'alt', data.alt );\n          if( typeof $(this).attr( 'data-showcredit' ) !== 'undefined' ){\n            //if( !$( '.respImg-credit' ).length )\n            $(this).after( creditMarkup( data.credit, 'respImg-credit' ) );\n          }\n\n          // add loaded classes\n          if( typeof className === 'string' ){\n            $(this).addClass( className.substr(1)+'--loaded');\n          } else { // if we're passed a jquery wrapped object\n            var selector = className.selector;\n            var selectorSplit = selector.split( ' ' );\n            selector = selectorSplit[selectorSplit.length - 1 ];\n            $(this).addClass( selector.substr(1)+'--loaded');\n          }\n\n          // run callback only for last result\n          if( images.length - 1 === i && callback ) callback();\n\n        }.bind(this);\n\n        //load img for empty img\n        temp.src = data.requested;\n\n        // set lightbox target for full size img\n        $(this).attr( 'data-img', data.original );\n\n        // opts for featherlight\n        var opts = {\n          targetAttr: 'data-img',\n          afterContent: function(){\n            // can't pass captions through featherlight so we do this instead\n            $( '.img-caption' ).remove();\n            var lightbox = $( '.featherlight-content' );\n            var src = $( '.featherlight-image' ).attr( 'src' );\n            var caption = $( '[data-img=\"'+src+'\"]' ).attr( 'data-caption' ) || data.caption || false;\n            if( caption ){\n              var credit = '';\n              if( data.credit.author.length ){\n                credit = creditMarkup( data.credit, 'img-credit' );\n              }\n              lightbox.append( '<div class=\"img-caption\">'+caption+credit+'</div>' );\n            }\n            //prevent body scrolling\n            $( 'body' ).css( 'overflow', 'hidden' );\n          },\n          afterClose: function(){\n            //restore body scrolling\n            $( 'body' ).css( 'overflow', '' );\n          }\n        };\n\n        if( $(this).parent().hasClass('js-internalLink') ){\n          return;\n        } else if( !$(this).attr( 'data-group' ) ){\n          $(this).featherlight( opts );\n        } else {\n          $( '[data-group=\"'+$(this).attr( 'data-group' )+'\"]' ).featherlightGallery( opts );\n        }\n\n      }.bind(this) );\n    } );\n  }\n\n}\n\nmodule.exports = respImg;\n","var icon = require( './icon' );\n\nvar scrollIndicator = {\n\n  scrollIndicator: $( '<div class=\"scrollIndicator\">'+icon( 'down', 'scrollIndicator' )+'</div>' ),\n\n  remove: function(){\n    this.scrollIndicator.remove();\n  },\n\n  add: function( ref ){\n    this.toggle( ref );\n    $( window ).on( 'scroll resize', function(){\n      this.toggle( ref );\n    }.bind(this) );\n\n    this.scrollIndicator.click( function(){\n      $( 'body,html' ).animate( {\n        scrollTop: (function(){\n          var offset = 110;\n          return $( ref ).offset().top - offset;\n        })()\n      }, 500 );\n    } );\n\n    return this.scrollIndicator;\n  },\n\n  toggle: function( elem ){\n    if( !$(elem).length ) return;\n    // 33 = padding-top of transcript\n    if( $( window ).scrollTop() + $( window ).height() > $( elem ).offset().top + 33 ){\n      this.scrollIndicator.addClass( 'scrollIndicator--hidden' );\n    } else {\n      this.scrollIndicator.removeClass( 'scrollIndicator--hidden' );\n    }\n  }\n\n\n}\n\nmodule.exports = scrollIndicator;\n","var getUrlWithNoHash = require( './getUrlWithNoHash' );\nvar socialLinks = require( './socialLinks' );\n\nvar socialHighlight = function( target ){\n\n  var popup = $( '<span class=\"socialPopup\" />' );\n  var popupOpen = false;\n\n  // iOS normalization\n  if( $(window).width() < 544 ){\n    $( document ).on( 'selectionchange', function(){\n      var selection = document.getSelection();\n      // leave popup intact so users can interact with it after dealing with os ui\n      var handler = function(){\n        popup.show();\n        $( 'body' ).unbind( 'touchend', handler );\n      }\n      $( 'body' ).on( 'touchend', handler, top );\n      // trigger touchend so popup will display\n      $( target ).trigger( 'touchend' );\n    } );\n  }\n\n  $( 'body' ).on( 'mousedown', function(){\n    if( popupOpen ){\n      popup.hide();\n      popupOpen = false;\n    }\n  } );\n\n  popup.on( 'mousedown', function(e){\n    e.preventDefault();\n    e.stopPropagation();\n  } );\n\n  $( target ).on( 'mouseup touchend', function(e){\n    e.stopPropagation();\n    var url = getUrlWithNoHash();\n    var selection = document.getSelection();\n    var text = selection.toString();\n    text = text.replace('\"', '&quot;');\n\n    if( !selection.anchorNode || !selection.focusNode ) return; // quick sanity check\n\n    var anchor = $( selection.anchorNode.parentNode ); // where drag started\n    var focus = $( selection.focusNode.parentNode ); // where drag ended\n    var first = anchor.index() < focus.index() ? anchor : focus; // which comes first in DOM\n\n    if( anchor.attr( 'data-highlight') || focus.attr( 'data-highlight' ) ){ //check for special cases\n      if( first.attr( 'data-highlight') === 'next' ){\n        var next = first.next();\n        var timestamp =  next.attr( 'data-start' ) || next.attr( 'data-timestamp' );\n        url += '#'+timestamp;\n      } else if( first.attr( 'data-highlight') === 'transcript' || focus.attr( 'data-highlight' ) === 'transcript' ){\n        var timestamp =  first.attr( 'data-start' ) || first.attr( 'data-timestamp' ) || focus.attr( 'data-start' ) || focus.attr( 'data-timestamp' );\n        url += '#'+timestamp;\n      }\n    }\n\n    var pos = {\n      position: 'absolute',\n      left: (function(){\n        var range = selection.getRangeAt(0);\n        var rects = range.getClientRects();\n        if( rects.length ){\n          return ( rects[0].left + rects[0].right ) /2;\n        }\n      })()\n    };\n\n    if( $( window ).width() >= 544 ){ // from bootstrap. this is done so that mobile selection uis don't obscure ours\n      pos.position = 'absolute';\n      pos.top = function(){\n        var range = selection.getRangeAt(0);\n        var rects = range.getClientRects();\n        var _top = ( rects[0].top + rects[0].bottom ) / 2;\n        var _bottom = ( rects[rects.length-1].bottom + 60 );\n        var wBottom = $(window).height();\n        if( _bottom < wBottom ){\n          popup.addClass( 'socialPopup--inverse' );\n          return rects[rects.length-1].bottom + 60 + $(window).scrollTop();\n        } else {\n          popup.removeClass( 'socialPopup--inverse' );\n          return _top + $(window).scrollTop();\n        }\n      };\n    } else {\n      pos.top = function(){\n        var range = selection.getRangeAt(0);\n        var rects = range.getClientRects();\n        if( rects.length ){\n          return rects[0].bottom + $(window).scrollTop();\n        }\n      };\n    }\n\n    popup.css( pos )\n    .empty()\n    .append( '<span>Share this</span>' + socialLinks( url, document.title, text, text ) );\n\n    if( text.length ){\n      popup.show();\n    }\n\n    popupOpen = true;\n    window.HIGHLIGHTED = text; // so that socialLinks.js doesn't reuse the same one ever time – see callback\n    if( $( '.socialPopup' ).length ) return; // otherwise this gets called twice in some versions of safari bc both events fire\n    $( '.body-wrap' ).append( popup );\n\n  } );\n\n}\n\nmodule.exports = socialHighlight;\n","var fb = require('facebook-share-link');\nvar Clipboard = require('clipboard');\nvar icon = require('./icon');\n\nvar socialLinks = function( url, title, excerpt, extraClipBoardText ){\n  const isFbProvided = !!window.FB_APP_ID\n\n  var url = url || window.location.href;\n  var clipBoardText = extraClipBoardText ? extraClipBoardText.trim() + '\\n' + url + '\\n' : title + ' ' + url;\n  var linkList = $( '<ul class=\"social social--inline\" data-url=\"'+url+'\" data-excerpt=\"'+excerpt+'\" data-title=\"'+title+'\" />' );\n  var facebook = $( '<li tabindex=\"0\" data-soc=\"fb\"><span>Share on Facebook</span>'+icon( 'facebook', 'social')+'</li>' );\n  var twitter = $( '<li tabindex=\"0\" data-soc=\"tw\"><span>Share on Twitter</span>'+icon( 'twitter', 'social')+'</li>' );\n  var link = $( '<li tabindex=\"0\" readonly=\"readonly\" data-soc=\"link\" data-clipboard-text=\"'+clipBoardText+'\"><span class=\"inner\" style=\"position:static;\"><span>Share URL</span>'+icon( 'link', 'social')+'</span></li>' );\n\n  var response = function( error, isHighlight ){\n    var message = '';\n    if( error ){\n      message = 'Your browser doesn\\'t support direct copying.'\n    } else if( isHighlight ) {\n      message = \"Selected text plus link copied to clipboard!\"\n    } else {\n      message = \"Link copied to clipboard!\"\n    }\n    var className = 'socialCopy ';\n    className += error ? 'socialCopy--error' : 'socialCopy--success';\n    return '<div class=\"'+className+'\">'+message+'</div>';\n  }\n\n  if(isFbProvided){\n    linkList.append( facebook )\n  }\n  linkList.append( twitter )\n  linkList.append( link )\n\n  if( !window.SOCIALINIT ){\n    window.SOCIALINIT = true;\n    var getQuote = function( elem ){\n      var _excerpt = $(elem).parent().attr( 'data-excerpt' );\n      var _title = $(elem).parent().attr( 'data-title' );\n      return window.HIGHLIGHTED || _title || _excerpt || window.DESCRIPTION;\n    }\n\n    if(isFbProvided) {\n      var share = fb( window.FB_APP_ID )\n    }\n\n    var quote = getQuote();\n    var clipboard = new Clipboard( '[data-soc=\"link\"]' );\n    var clipboardHL = new Clipboard( '.socialPopup [data-soc=\"link\"]' );\n    quote = encodeURIComponent( quote );\n\n    $( 'body' ).on( 'keyup', function(){\n      var link = $( '[data-soc=\"link\"]' );\n      if( !link ) return;\n      var selection = document.getSelection();\n      var text = selection.toString();\n      text = text.replace('\"', '&quot;');\n      if( text.length ) window.HIGHLIGHTED = text;\n\n      var anchor = $( selection.anchorNode.parentNode ); // where drag started\n      var focus = $( selection.focusNode.parentNode ); // where drag ended\n      var first = anchor.index() < focus.index() ? anchor : focus; // which comes first in DOM\n      var _url;\n\n      if( anchor.attr( 'data-highlight') ){ //check for special cases\n        if( first.attr( 'data-highlight') === 'next' ){\n          var next = first.next();\n          var timestamp =  next.attr( 'data-start' ) || next.attr( 'data-timestamp' );\n          _url = url + '#'+timestamp;\n        } else if( anchor.attr( 'data-highlight') === 'transcript' ){\n          var timestamp =  first.attr( 'data-start' ) || first.attr( 'data-timestamp' );\n          _url = url + '#'+timestamp;\n        }\n      }\n\n      link.attr( 'data-clipboard-text', ( text ? text + '\\n' + _url + '\\n' : _url )  );\n      clipboard = new Clipboard( '[data-soc=\"link\"]' );\n    } );\n\n    if(isFbProvided) {\n      $('body').on( 'click', '[data-soc=\"fb\"]', function(){\n        var url = $(this).parent().attr( 'data-url' );\n        var quote = getQuote(this);\n        var link = share( {\n          href: url,\n          display: 'popup',\n          quote: quote\n        } );\n        window.open( link, 'fbShareWindow', 'height=450, width=550, top=' + ( $(window).height() / 2 - 275) + ', left=' + ($(window).width() / 2 - 225) + ', toolbar=0, location=0, menubar=0, directories=0, scrollbars=0');\n      });\n    }\n\n    $( 'body' ).on( 'click', '[data-soc=\"tw\"]', function(){\n      var url = encodeURIComponent( $(this).parent().attr( 'data-url' ) );\n      var quote = encodeURIComponent( getQuote(this) );\n      var link = 'https://twitter.com/intent/tweet?url='+url+'&text='+quote;\n      window.open( link, 'twShareWindow', 'height=450, width=550, top=' + ( $(window).height() / 2 - 275) + ', left=' + ($(window).width() / 2 - 225) + ', toolbar=0, location=0, menubar=0, directories=0, scrollbars=0');\n    } );\n\n    var wasClipboardSuccessful = false;\n\n    clipboard.on( 'success', function(){\n      wasClipboardSuccessful = true;\n      $('body').append( response() );\n      $( '.socialCopy' ).css( {\n        position: 'absolute',\n        right: '1em',\n        bottom: 'auto',\n        top: function(){\n          var bottom = $(window).scrollTop() + $(window).height() - 16 - $(this).height() +'px';\n          return bottom;\n        }\n      } );\n      setTimeout( function(){\n        $( '.socialCopy' ).remove();\n      }, 2000 );\n    } );\n\n    clipboardHL.on( 'success', function(){\n      wasClipboardSuccessful = true;\n      $('body').append( response( false, true ) );\n      $( '.socialCopy' ).css( {\n        position: 'absolute',\n        right: '1em',\n        bottom: 'auto',\n        top: function(){\n          var bottom = $(window).scrollTop() + $(window).height() - 16 - $(this).height() +'px';\n          return bottom;\n        }\n      } );\n      setTimeout( function(){\n        $( '.socialCopy' ).remove();\n      }, 2000 );\n    } );\n\n    $( 'body' ).on( 'click', '[data-soc=\"link\"]', function(e){\n      e.preventDefault();\n      setTimeout( function(){\n        if( !wasClipboardSuccessful ){\n          handleClipboardError();\n        }\n        wasClipboardSuccessful = false;\n      }, 250 );\n    } );\n\n    var handleClipboardError = function(){\n      var _url = $('body > textarea').val(); // text value\n      $( 'body > textarea' ).remove(); // iOS thing\n      $.featherlight( {\n        html:  '<div class=\"featherlight-inner\"><div class=\"featherlight-textarea\"><p>Copy the link and text below.</p><textarea>'+_url+'</textarea></div></div>',\n        afterContent: function(){\n          $( 'body' ).css( 'overflow', 'hidden' );\n          $( '.featherlight-close').addClass( 'featherlight-close--textarea' );\n          $( '.featherlight-inner' ).append( response(true) );\n          $( '.socialCopy' ).css( {\n            position: 'absolute',\n            right: '1em',\n            bottom: 'auto',\n            top: function(){\n              var bottom = $(window).scrollTop() + $(window).height() - 16 - $(this).height() +'px';\n              return bottom;\n            }\n          } );\n          var input = $( '.featherlight-inner' ).find( 'textarea' );\n\n          input.each( function(){\n            this.style.height = this.scrollHeight+'px';\n            this.selectionStart = 0;\n            this.selectionEnd = 999;\n          } );\n\n        },\n        afterClose: function(){\n          //restore body scrolling\n          $( 'body' ).css( 'overflow', '' );\n        }\n      } );\n      setTimeout( function(){\n        $( '.socialCopy' ).remove();\n      }, 2000 );\n    }\n\n    clipboard.on( 'error', handleClipboardError );\n\n  }\n\n  return linkList[0].outerHTML;\n\n}\n\nmodule.exports = socialLinks\n","var stickyHeader = function( page, elem, target ){\n\n  const bottom =  $(target).offset().top + $(target).height()\n  const height = $(elem).height();\n  let unsticky = true; // toggled on/off and checked before manipulating DOM\n  const hasVideo = $( 'video' ).length;\n  let oldTop = 0 // cache value so we can tell if we scrolled up/down\n\n  const handleOn = function(){\n    $(elem).addClass( elem.slice(1) + '--sticky' );\n    page.css( 'padding-top', height );\n    unsticky = false;\n    setTimeout( function(){\n      if( typeof AP !== 'undefined' ) AP.refreshControls();\n    }, 500 ); //offset by css transition time\n  }\n\n  const handleOff = function(){\n    $(elem).removeClass(elem.slice(1) + '--sticky');\n    page.css( 'padding-top', '' );\n    unsticky = true;\n    setTimeout( function(){\n      if( typeof AP !== 'undefined' ) AP.refreshControls();\n    }, 500 ); //offset by css transition time\n  }\n\n  const handler = function(){\n    // if( $(window).width() <= 568 || !hasVideo ){\n    if(!hasVideo){\n      handleOff()\n      return\n    }\n    var top = $(window).scrollTop()\n    if( top > bottom && unsticky ){\n      handleOn()\n    } else if( top < bottom && !unsticky ) {\n      handleOff()\n    }\n\n    if(top < oldTop) {\n      $(elem).addClass( elem.slice(1) + '--justScrolledUp' );\n    } else {\n      $(elem).removeClass( elem.slice(1) + '--justScrolledUp' );\n    }\n\n    oldTop = top\n  }\n\n  $(window).on( 'scroll resize orientationchange', handler );\n\n  $(elem).find( '[data-action=\"top\"]').click( function(){\n    $( 'body, html' ).animate( {\n      scrollTop: 0\n    }, TRANSITIONTIME );\n  });\n\n  $(elem).find( '[data-action=\"toggle\"] select').change( function(){\n    var size = $(this).val().toLowerCase();\n    var selector = $(this).parent().attr( 'data-target' )\n    var target = $( selector );\n    target.removeClass();\n    target.addClass( selector.slice(1) + ' ' + selector.slice(1) + '--' + size );\n    setTimeout( function(){\n      if( typeof AP !== 'undefined' ) AP.refreshControls();\n    }, 500 ); //offset by css transition time\n  } );\n\n  // Hack to allow pausing for small video\n  $(elem).on('click', '.able-fake-pause', function() {\n    if(typeof AP == 'undefined') return\n    if(AP.playing) {\n      AP.pauseMedia()\n    }\n    else {\n      AP.playMedia()\n    }\n  })\n\n};\n\nmodule.exports = stickyHeader;\n","window.Cookies = require( 'js-cookie' );\nvar cachebust  = require('./cachebust');\nvar icon       = require( './icon' );\n\nvar syncAblePlayer = function(transcript, id, supp){\n  console.log('syncing able')\n  $( 'body' ).removeClass( 'hasAblePlayer' );\n  $('video').each(function (index, element) {\n    console.log('video found')\n    $( 'body' ).addClass( 'hasAblePlayer' );\n    if ($(element).data('able-player') !== undefined) {\n      window.AP = new AblePlayer($(this), $(element))\n\n      // transform transcript into useable format\n      const sections = transcript.filter(node => node.type === 'section_break')\n\n      const headings = sections.filter(node => !node.note_chapter).map(node => {\n        return {\n          text: node.contents,\n          start: node.start\n        }\n      })\n\n      const chapters = sections.filter(node => node.note_chapter).map(node => {\n        return {\n          text: node.contents,\n          start: node.start\n        }\n      })\n\n      const body = transcript.filter(node => {\n        return (\n          node.type !== 'paragraph_break' &&\n          node.type !== 'description'\n        )\n      }).map(node => {\n        return {\n          text: node.contents,\n          start: node.start\n        }\n      })\n\n      const suppContent = Object.entries(supp.timestamps).map(node => {\n        const values = ['content', 'blockquote', 'attribution', 'title', 'description', 'link_text']\n        const pieces = node[1]\n        return {\n          text: pieces.reduce((all, piece) => {\n            return all + values.reduce((acc, value) => {\n              if(piece.data[value]){\n                acc += piece.data[value]\n              }\n              return acc\n            }, '')\n          }, ''),\n          start: parseInt(node[0])\n        }\n      })\n\n      // hacky way to wait until youtube iframe is initialized before running add dot code\n      const tryYouTube = setInterval(() => {\n        const youTubePlayer = AP.youTubePlayer\n        if(youTubePlayer && youTubePlayer.getDuration && !!youTubePlayer.getDuration()){\n          const duration = youTubePlayer.getDuration()\n\n          ableplayerAddDots(AP, headings, {\n            duration,\n            format:  'array',\n            color:   window.HEADINGOPTS.COLOR   || '#fff',\n            width:   window.HEADINGOPTS.WIDTH   || 1,\n            height:  window.HEADINGOPTS.HEIGHT  || false,\n            display: window.HEADINGOPTS.DISPLAY || 'line',\n          })\n          .then(player => {\n            clearInterval(tryYouTube)\n            ableplayerAddDots(player, chapters, {\n              duration,\n              format: 'array',\n              color:   window.CHAPTEROPTS.COLOR   || '#fff',\n              width:   window.CHAPTEROPTS.WIDTH   || 1,\n              height:  window.CHAPTEROPTS.HEIGHT  || false,\n              display: window.CHAPTEROPTS.DISPLAY || 'line',\n            })\n            .then(player => {\n              ableplayerSearch(player, '#video-search', body, {\n                duration,\n                color:   window.SEARCHOPTS.COLOR   || '#fff',\n                width:   window.SEARCHOPTS.WIDTH   || 1,\n                height:  window.SEARCHOPTS.HEIGHT  || false,\n                display: window.SEARCHOPTS.DISPLAY || 'line',\n              }).then(player => {\n                ableplayerSearch(player, '#video-search', suppContent, {\n                  duration,\n                  color:   window.SUPP_CONT_OPTS.COLOR   || '#fff',\n                  width:   window.SUPP_CONT_OPTS.WIDTH   || 1,\n                  height:  window.SUPP_CONT_OPTS.HEIGHT  || false,\n                  display: window.SUPP_CONT_OPTS.DISPLAY || 'line',\n                }).then(player => {\n                  $.ajax({\n                    url: `/wp-json/v1/interviews/${id}/description` + cachebust(),\n                    success: data => {\n                      const { description } = data\n                      if(!description.length) return;\n                      ableplayerSearch(player, '#video-search', description, {\n                        duration,\n                        color:   window.SEARCHOPTS.COLOR   || '#fff',\n                        width:   window.SEARCHOPTS.WIDTH   || 1,\n                        height:  window.SEARCHOPTS.HEIGHT  || false,\n                        display: window.SEARCHOPTS.DISPLAY || 'line',\n                      }).then(player => {\n                        console.log('Plugins instantiated successfully.')\n                      }).catch(err => console.log(err))\n                    }\n                  })\n                }).catch(err => console.log(err))\n              }).catch(err => console.log(err))\n            }).catch(err => console.log(err))\n          }).catch(err => console.log(err))\n\n        }\n      }, 200)\n\n      // disable closed captioning\n      var tryClick = setInterval( function(){\n        if( typeof AP.initializing === 'undefined' ) return;\n        var captions = $( '.able-wrapper .icon-captions' );\n        var isClicked = false;\n        captions.on( 'click', function(){\n          clearInterval( tryClick );\n          isClicked = true;\n        } );\n        if( !isClicked ) captions.trigger('click');\n      }, 200 );\n\n      var inViewport = 0;  // 0 for in viewport, 1 for below, -1 for above\n      JUMPTOACTIVE = setInterval( function(){\n        var current = $( '.able-highlight' );\n        if( !current.length ) return;\n\n        var currentPos = {\n          top: current.offset().top,\n          bottom: current.offset().top + current.height()\n        }\n\n        var windowPos = {\n          top: $( window ).scrollTop(),\n          bottom: $( window ).scrollTop() + $( window ).height()\n        }\n\n        if( currentPos.top > windowPos.bottom ){\n          var _inViewport = 1;\n        } else if( currentPos.bottom < windowPos.top ){\n          var _inViewport = -1;\n        } else {\n          var _inViewport = 0;\n          $( '.transcript-jumpToActive' ).remove();\n        }\n\n        if( _inViewport !== inViewport && _inViewport !== 0 ){\n          $( '.transcript-jumpToActive' ).remove();\n          var jumpToActive = $( '<button data-action=\"jumpToActive\" class=\"transcript-jumpToActive\">'+icon( ( _inViewport === 1 ? 'down' : 'up' ), 'jump' ) +'Jump to active section</button>' );\n          if( _inViewport === -1 ){\n            jumpToActive.css( {\n              top: $(window).width() <= 568 ? 0 : $( '.contentHeaderOuter' ).outerHeight(),\n              bottom: 'auto'\n            } );\n          }\n          $( 'body' ).append( jumpToActive );\n        }\n        inViewport = _inViewport;\n\n      }, 1000 );\n    }\n\n    $( 'body' ).on( 'click', '[data-action=\"jumpToActive\"]', function(){\n      $(this).hide();\n      $( 'body,html' ).animate( {\n        scrollTop: (function(){\n          var offset = $( '.contentHeaderOuter' ).outerHeight() + 32;\n          return $( '.able-highlight' ).offset().top - offset;\n        } )()\n      }, TRANSITIONTIME );\n    } );\n\n  } );\n\n  // do we have a timestamp that matches a hash? if so return it\n  var getNodeFromTimestamp = function(){\n    if( window.location.hash ){\n      var hash = window.location.hash;\n      var match_id = hash.match(/\\#(\\d*)/);\n      if( match_id && match_id[1].length ){\n        if( $( '[data-start=\"'+match_id[1]+'\"]' ).length ){\n          return $( '[data-start=\"'+match_id[1]+'\"]' );\n        }\n      }\n    }\n    return false;\n  }\n\n  if( getNodeFromTimestamp() ){\n    var timestamp = getNodeFromTimestamp();\n    var offset = $( '.contentHeaderOuter' ).outerHeight() + 32;\n    $( 'body, html' ).scrollTop( timestamp.offset().top - offset );\n    timestamp.addClass( 'able-highlight' );\n    var tryClick = setInterval( function(){\n      if( typeof AP.initializing === 'undefined' ) return;\n      timestamp.trigger('click');\n      timestamp.on( 'click', function(){\n        clearInterval( tryClick );\n      } );\n    }, 200 );\n  }\n\n  $( '.able-wrapper' ).addClass( 'able-wrapper--loaded' );\n\n}\n\nmodule.exports = syncAblePlayer;\n","var respImg = require( './respImg' );\nvar icon = require( './icon' );\n\n//vertically align supp cont with transcript and set appropriate handlers\nvar syncTimestamps = function( supp, node, transcript ){\n\n  var expand = function( target ){\n    if( $(window).width() > 568 ){ // from bootstrap\n      // $( '[data-action=\"expand\"]' ).removeClass( 'expand' )\n      //   .find( '[data-action=\"close\"] use' ).attr( 'xlink:href', '#expand' );\n      target.addClass( 'expand' );\n      target.find( '[data-action=\"close\"] use' ).attr( 'xlink:href', '#contract');\n      var img = target.find( '.respImg-defer' );\n      respImg.load( img );\n    } else {\n      var innerContent = $( target ).find( '.suppCont-content' ).html();\n      var type = $( target ).find( '.icon' )[0].outerHTML;\n      $.featherlight( {\n        html: '<div class=\"suppCont-lightbox\"><div class=\"suppCont-content\">'+type+innerContent+'</div></div>',\n        afterContent: function(){\n          $( 'body' ).css( 'overflow', 'hidden' );\n          var img = $( '.featherlight-content' ).find( '.respImg-defer' );\n          respImg.load( img );\n          $( '.featherlight-close-icon' ).html( icon( 'contract', 'suppContent-lightboxClose' )  );\n        },\n        afterClose: function(){\n          //restore body scrolling\n          $( 'body' ).css( 'overflow', '' );\n        }\n      } );\n    }\n  }\n\n  var expandMultiple = function(target){\n    if($(window).width() <= 568) return;\n    target.addClass('expand');\n    target.find( '[data-action=\"close\"] use' ).attr( 'xlink:href', '#contract');\n    var img = target.find('.respImg-defer');\n    respImg.load(img);\n  }\n\n  expandMultiple($('[data-opendefault=\"true\"]'));\n\n  var position = function(){\n    var lastBottom = 0;\n    $(supp).each( function(i){\n\n      // assign match data attribute if not already set\n      $(this).data( 'match', $(this).data('match') || (function(){\n        return $( node+'[data-start=\"' + $(this).attr( 'data-timestamp' ) + '\"]' )\n      }.bind(this))() );\n\n      var match = $(this).data( 'match' );\n      if( !match.length ) return;\n      var matchPos = $(match).offset().top;\n\n\n      if(i > 0){\n        var newTop = matchPos - lastBottom;\n        newTop = newTop > 0 ? newTop : 0;\n      } else {\n        var transcriptTop = $(transcript).offset().top;\n        var newTop = matchPos - transcriptTop;\n      }\n\n      $(this).css( {\n        marginTop: newTop,\n        transform: 'translateY(-15px)',\n        left: 0,\n        right: 0\n      } );\n\n      lastBottom = $(this).offset().top + $(this).height();\n\n      $(this).on( 'mouseenter', function(){\n        $(match).addClass( node.slice(1)+'--suppHover' );\n      } ).on( 'mouseleave', function(){\n        $(match).removeClass( node.slice(1)+'--suppHover' );\n      } );\n\n      $(match).on( 'mouseenter', function(){\n        $(this).addClass( supp.slice(1)+'--suppHover' );\n      }.bind(this) ).on( 'mouseleave', function(){\n        $(this).removeClass( supp.slice(1)+'--suppHover' );\n      }.bind(this) );\n\n      var shouldAdvance = false;\n      $(match).blur( function(){\n        var next = $(match).next();\n        var item = $(this).find( 'li:eq(0)' )\n        var lastChild = item.find('li:last-of-type');\n        shouldAdvance = true;\n        item.focus();\n        lastChild.blur( function(){\n          if( shouldAdvance ){\n            next.focus();\n          }\n          shouldAdvance = false;\n        } );\n      }.bind(this) )\n    } );\n  };\n\n  position();\n  $( window ).resize( position );\n\n  if( window.location.hash ){\n    var hash = window.location.hash;\n    var match_id = hash.match(/\\#sc\\-(\\d*)/);\n    if( match_id ){\n      var match = $( '[data-supp=\"'+match_id[1]+'\"]' );\n      expand( match );\n      match.parent().data('match').addClass( 'able-highlight' );\n      var offset = $( '.contentHeaderOuter' ).height() + 16;\n      $( 'body, html' ).scrollTop( match.offset().top - offset );\n    }\n  }\n\n  $('body').on( 'click', '.expand [data-action=\"close\"]', function(e){\n    e.stopPropagation();\n    $(this).closest( '[data-action=\"expand\"] ').removeClass( 'expand' );\n    $(this).find( 'use' ).attr( 'xlink:href', '#expand' );\n  } );\n\n  $('body').on( 'click', '.expand [data-action=\"close-type\"]', function(e){\n    e.stopPropagation();\n    $(this).closest( '[data-action=\"expand\"] ').removeClass( 'expand' );\n  } );\n\n  $( 'body' ).on( 'click', '[data-action=\"expand\"]', function(){\n    expand( $(this) );\n  } );\n\n}\n\nmodule.exports = syncTimestamps;\n","/**\n * Featherlight Gallery – an extension for the ultra slim jQuery lightbox\n * Version 1.5.0 - http://noelboss.github.io/featherlight/\n *\n * Copyright 2016, Noël Raoul Bossart (http://www.noelboss.com)\n * MIT Licensed.\n**/!function(a){\"use strict\";function b(c,d){if(!(this instanceof b)){var e=new b(a.extend({$source:c,$currentTarget:c.first()},d));return e.open(),e}a.featherlight.apply(this,arguments),this.chainCallbacks(h)}var c=function(a){window.console&&window.console.warn&&window.console.warn(\"FeatherlightGallery: \"+a)};if(\"undefined\"==typeof a)return c(\"Too much lightness, Featherlight needs jQuery.\");if(!a.featherlight)return c(\"Load the featherlight plugin before the gallery plugin\");var d=\"ontouchstart\"in window||window.DocumentTouch&&document instanceof DocumentTouch,e=a.event&&a.event.special.swipeleft&&a,f=window.Hammer&&function(a){var b=new window.Hammer.Manager(a[0]);return b.add(new window.Hammer.Swipe),b},g=d&&(e||f);d&&!g&&c(\"No compatible swipe library detected; one must be included before featherlightGallery for swipe motions to navigate the galleries.\");var h={afterClose:function(a,b){var c=this;return c.$instance.off(\"next.\"+c.namespace+\" previous.\"+c.namespace),c._swiper&&(c._swiper.off(\"swipeleft\",c._swipeleft).off(\"swiperight\",c._swiperight),c._swiper=null),a(b)},beforeOpen:function(a,b){var c=this;return c.$instance.on(\"next.\"+c.namespace+\" previous.\"+c.namespace,function(a){var b=\"next\"===a.type?1:-1;c.navigateTo(c.currentNavigation()+b)}),g?c._swiper=g(c.$instance).on(\"swipeleft\",c._swipeleft=function(){c.$instance.trigger(\"next\")}).on(\"swiperight\",c._swiperight=function(){c.$instance.trigger(\"previous\")}):c.$instance.find(\".\"+c.namespace+\"-content\").append(c.createNavigation(\"previous\")).append(c.createNavigation(\"next\")),a(b)},beforeContent:function(a,b){var c=this.currentNavigation(),d=this.slides().length;return this.$instance.toggleClass(this.namespace+\"-first-slide\",0===c).toggleClass(this.namespace+\"-last-slide\",c===d-1),a(b)},onKeyUp:function(a,b){var c={37:\"previous\",39:\"next\"}[b.keyCode];return c?(this.$instance.trigger(c),!1):a(b)}};a.featherlight.extend(b,{autoBind:\"[data-featherlight-gallery]\"}),a.extend(b.prototype,{previousIcon:\"&#9664;\",nextIcon:\"&#9654;\",galleryFadeIn:100,galleryFadeOut:300,slides:function(){return this.filter?this.$source.find(this.filter):this.$source},images:function(){return c(\"images is deprecated, please use slides instead\"),this.slides()},currentNavigation:function(){return this.slides().index(this.$currentTarget)},navigateTo:function(b){var c=this,d=c.slides(),e=d.length,f=c.$instance.find(\".\"+c.namespace+\"-inner\");return b=(b%e+e)%e,c.$currentTarget=d.eq(b),c.beforeContent(),a.when(c.getContent(),f.fadeTo(c.galleryFadeOut,.2)).always(function(a){c.setContent(a),c.afterContent(),a.fadeTo(c.galleryFadeIn,1)})},createNavigation:function(b){var c=this;return a('<span title=\"'+b+'\" class=\"'+this.namespace+\"-\"+b+'\"><span>'+this[b+\"Icon\"]+\"</span></span>\").click(function(){a(this).trigger(b+\".\"+c.namespace)})}}),a.featherlightGallery=b,a.fn.featherlightGallery=function(a){return b.attach(this,a)},a(document).ready(function(){b._onReady()})}(jQuery);\n","/**\n * Featherlight - ultra slim jQuery lightbox\n * Version 1.5.0 - http://noelboss.github.io/featherlight/\n *\n * Copyright 2016, Noël Raoul Bossart (http://www.noelboss.com)\n * MIT Licensed.\n**/\n!function(a){\"use strict\";function b(a,c){if(!(this instanceof b)){var d=new b(a,c);return d.open(),d}this.id=b.id++,this.setup(a,c),this.chainCallbacks(b._callbackChain)}if(\"undefined\"==typeof a)return void(\"console\"in window&&window.console.info(\"Too much lightness, Featherlight needs jQuery.\"));var c=[],d=function(b){return c=a.grep(c,function(a){return a!==b&&a.$instance.closest(\"body\").length>0})},e=function(a,b){var c={},d=new RegExp(\"^\"+b+\"([A-Z])(.*)\");for(var e in a){var f=e.match(d);if(f){var g=(f[1]+f[2].replace(/([A-Z])/g,\"-$1\")).toLowerCase();c[g]=a[e]}}return c},f={keyup:\"onKeyUp\",resize:\"onResize\"},g=function(c){a.each(b.opened().reverse(),function(){return c.isDefaultPrevented()||!1!==this[f[c.type]](c)?void 0:(c.preventDefault(),c.stopPropagation(),!1)})},h=function(c){if(c!==b._globalHandlerInstalled){b._globalHandlerInstalled=c;var d=a.map(f,function(a,c){return c+\".\"+b.prototype.namespace}).join(\" \");a(window)[c?\"on\":\"off\"](d,g)}};b.prototype={constructor:b,namespace:\"featherlight\",targetAttr:\"data-featherlight\",variant:null,resetCss:!1,background:null,openTrigger:\"click\",closeTrigger:\"click\",filter:null,root:\"body\",openSpeed:250,closeSpeed:250,closeOnClick:\"background\",closeOnEsc:!0,closeIcon:\"&#10005;\",loading:\"\",persist:!1,otherClose:null,beforeOpen:a.noop,beforeContent:a.noop,beforeClose:a.noop,afterOpen:a.noop,afterContent:a.noop,afterClose:a.noop,onKeyUp:a.noop,onResize:a.noop,type:null,contentFilters:[\"jquery\",\"image\",\"html\",\"ajax\",\"iframe\",\"text\"],setup:function(b,c){\"object\"!=typeof b||b instanceof a!=!1||c||(c=b,b=void 0);var d=a.extend(this,c,{target:b}),e=d.resetCss?d.namespace+\"-reset\":d.namespace,f=a(d.background||['<div class=\"'+e+\"-loading \"+e+'\">','<div class=\"'+e+'-content\">','<span class=\"'+e+\"-close-icon \"+d.namespace+'-close\">',d.closeIcon,\"</span>\",'<div class=\"'+d.namespace+'-inner\">'+d.loading+\"</div>\",\"</div>\",\"</div>\"].join(\"\")),g=\".\"+d.namespace+\"-close\"+(d.otherClose?\",\"+d.otherClose:\"\");return d.$instance=f.clone().addClass(d.variant),d.$instance.on(d.closeTrigger+\".\"+d.namespace,function(b){var c=a(b.target);(\"background\"===d.closeOnClick&&c.is(\".\"+d.namespace)||\"anywhere\"===d.closeOnClick||c.closest(g).length)&&(d.close(b),b.preventDefault())}),this},getContent:function(){if(this.persist!==!1&&this.$content)return this.$content;var b=this,c=this.constructor.contentFilters,d=function(a){return b.$currentTarget&&b.$currentTarget.attr(a)},e=d(b.targetAttr),f=b.target||e||\"\",g=c[b.type];if(!g&&f in c&&(g=c[f],f=b.target&&e),f=f||d(\"href\")||\"\",!g)for(var h in c)b[h]&&(g=c[h],f=b[h]);if(!g){var i=f;if(f=null,a.each(b.contentFilters,function(){return g=c[this],g.test&&(f=g.test(i)),!f&&g.regex&&i.match&&i.match(g.regex)&&(f=i),!f}),!f)return\"console\"in window&&window.console.error(\"Featherlight: no content filter found \"+(i?' for \"'+i+'\"':\" (no target specified)\")),!1}return g.process.call(b,f)},setContent:function(b){var c=this;return(b.is(\"iframe\")||a(\"iframe\",b).length>0)&&c.$instance.addClass(c.namespace+\"-iframe\"),c.$instance.removeClass(c.namespace+\"-loading\"),c.$instance.find(\".\"+c.namespace+\"-inner\").not(b).slice(1).remove().end().replaceWith(a.contains(c.$instance[0],b[0])?\"\":b),c.$content=b.addClass(c.namespace+\"-inner\"),c},open:function(b){var d=this;if(d.$instance.hide().appendTo(d.root),!(b&&b.isDefaultPrevented()||d.beforeOpen(b)===!1)){b&&b.preventDefault();var e=d.getContent();if(e)return c.push(d),h(!0),d.$instance.fadeIn(d.openSpeed),d.beforeContent(b),a.when(e).always(function(a){d.setContent(a),d.afterContent(b)}).then(d.$instance.promise()).done(function(){d.afterOpen(b)})}return d.$instance.detach(),a.Deferred().reject().promise()},close:function(b){var c=this,e=a.Deferred();return c.beforeClose(b)===!1?e.reject():(0===d(c).length&&h(!1),c.$instance.fadeOut(c.closeSpeed,function(){c.$instance.detach(),c.afterClose(b),e.resolve()})),e.promise()},resize:function(a,b){if(a&&b){this.$content.css(\"width\",\"\").css(\"height\",\"\");var c=Math.max(a/(parseInt(this.$content.parent().css(\"width\"),10)-1),b/(parseInt(this.$content.parent().css(\"height\"),10)-1));c>1&&(c=b/Math.floor(b/c),this.$content.css(\"width\",\"\"+a/c+\"px\").css(\"height\",\"\"+b/c+\"px\"))}},chainCallbacks:function(b){for(var c in b)this[c]=a.proxy(b[c],this,a.proxy(this[c],this))}},a.extend(b,{id:0,autoBind:\"[data-featherlight]\",defaults:b.prototype,contentFilters:{jquery:{regex:/^[#.]\\w/,test:function(b){return b instanceof a&&b},process:function(b){return this.persist!==!1?a(b):a(b).clone(!0)}},image:{regex:/\\.(png|jpg|jpeg|gif|tiff|bmp|svg)(\\?\\S*)?$/i,process:function(b){var c=this,d=a.Deferred(),e=new Image,f=a('<img src=\"'+b+'\" alt=\"\" class=\"'+c.namespace+'-image\" />');return e.onload=function(){f.naturalWidth=e.width,f.naturalHeight=e.height,d.resolve(f)},e.onerror=function(){d.reject(f)},e.src=b,d.promise()}},html:{regex:/^\\s*<[\\w!][^<]*>/,process:function(b){return a(b)}},ajax:{regex:/./,process:function(b){var c=a.Deferred(),d=a(\"<div></div>\").load(b,function(a,b){\"error\"!==b&&c.resolve(d.contents()),c.fail()});return c.promise()}},iframe:{process:function(b){var c=new a.Deferred,d=a(\"<iframe/>\").hide().attr(\"src\",b).css(e(this,\"iframe\")).on(\"load\",function(){c.resolve(d.show())}).appendTo(this.$instance.find(\".\"+this.namespace+\"-content\"));return c.promise()}},text:{process:function(b){return a(\"<div>\",{text:b})}}},functionAttributes:[\"beforeOpen\",\"afterOpen\",\"beforeContent\",\"afterContent\",\"beforeClose\",\"afterClose\"],readElementConfig:function(b,c){var d=this,e=new RegExp(\"^data-\"+c+\"-(.*)\"),f={};return b&&b.attributes&&a.each(b.attributes,function(){var b=this.name.match(e);if(b){var c=this.value,g=a.camelCase(b[1]);if(a.inArray(g,d.functionAttributes)>=0)c=new Function(c);else try{c=a.parseJSON(c)}catch(h){}f[g]=c}}),f},extend:function(b,c){var d=function(){this.constructor=b};return d.prototype=this.prototype,b.prototype=new d,b.__super__=this.prototype,a.extend(b,this,c),b.defaults=b.prototype,b},attach:function(b,c,d){var e=this;\"object\"!=typeof c||c instanceof a!=!1||d||(d=c,c=void 0),d=a.extend({},d);var f,g=d.namespace||e.defaults.namespace,h=a.extend({},e.defaults,e.readElementConfig(b[0],g),d);return b.on(h.openTrigger+\".\"+h.namespace,h.filter,function(g){var i=a.extend({$source:b,$currentTarget:a(this)},e.readElementConfig(b[0],h.namespace),e.readElementConfig(this,h.namespace),d),j=f||a(this).data(\"featherlight-persisted\")||new e(c,i);\"shared\"===j.persist?f=j:j.persist!==!1&&a(this).data(\"featherlight-persisted\",j),i.$currentTarget.blur(),j.open(g)}),b},current:function(){var a=this.opened();return a[a.length-1]||null},opened:function(){var b=this;return d(),a.grep(c,function(a){return a instanceof b})},close:function(a){var b=this.current();return b?b.close(a):void 0},_onReady:function(){var b=this;b.autoBind&&(a(b.autoBind).each(function(){b.attach(a(this))}),a(document).on(\"click\",b.autoBind,function(c){c.isDefaultPrevented()||\"featherlight\"===c.namespace||(c.preventDefault(),b.attach(a(c.currentTarget)),a(c.target).trigger(\"click.featherlight\"))}))},_callbackChain:{onKeyUp:function(b,c){return 27===c.keyCode?(this.closeOnEsc&&a.featherlight.close(c),!1):b(c)},onResize:function(a,b){return this.resize(this.$content.naturalWidth,this.$content.naturalHeight),a(b)},afterContent:function(a,b){var c=a(b);return this.onResize(b),c}}}),a.featherlight=b,a.fn.featherlight=function(a,c){return b.attach(this,a,c)},a(document).ready(function(){b._onReady()})}(jQuery);\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}